/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * A billing account resource.
 *
 * @extends models['Resource']
 */
class BillingAccount extends models['Resource'] {
  /**
   * Create a BillingAccount.
   * @member {string} [company] Name of the billing account.
   * @member {string} [accountType] The billing account Type. Possible values
   * include: 'CommerceRoot', 'Enrollment'
   * @member {string} [address] The address associated with billing account.
   * @member {string} [defaultCurrency] The ISO currency, for example, USD.
   * @member {string} [country] The country associated with billing account..
   * @member {string} [agreements] Agreements.
   * @member {array} [projects] The projects associated to the billing account.
   * @member {array} [billingProfiles] The billing profiles associated to the
   * billing account.
   * @member {object} [enrollmentDetails] The details about the associated
   * legacy enrollment. By default this is not populated, unless it's specified
   * in $expand.
   * @member {date} [enrollmentDetails.startDate] Enrollment Start Date
   * @member {date} [enrollmentDetails.endDate] Enrollment End Date
   * @member {string} [enrollmentDetails.currency] The currency associated with
   * enrollment
   * @member {string} [enrollmentDetails.channel] The channel for Enrollment
   * @member {object} [enrollmentDetails.policies] The attributes associated
   * with legacy enrollment.
   * @member {boolean} [enrollmentDetails.policies.accountOwnerViewCharges] The
   * accountOwnerViewCharges flag for Enrollment
   * @member {boolean} [enrollmentDetails.policies.departmentAdminViewCharges]
   * The departmentAdminViewCharges flag for Enrollment
   * @member {boolean} [enrollmentDetails.policies.marketplacesEnabled] The
   * marketplaces flag for Enrollment
   * @member {boolean} [enrollmentDetails.policies.reservedInstancesEnabled]
   * The reserved instances flag for Enrollment
   * @member {string} [enrollmentDetails.language] The language for Enrollment
   * @member {string} [enrollmentDetails.countryCode] The countryCode for
   * Enrollment
   * @member {string} [enrollmentDetails.status] Enrollment status
   * @member {string} [enrollmentDetails.billingCylce] Enrollment billing cycle
   * @member {array} [departments] The departments associated to the
   * enrollment.
   * @member {array} [enrollmentAccounts] The accounts associated to the
   * enrollment.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of BillingAccount
   *
   * @returns {object} metadata of BillingAccount
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'BillingAccount',
      type: {
        name: 'Composite',
        className: 'BillingAccount',
        modelProperties: {
          id: {
            required: false,
            readOnly: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            readOnly: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          type: {
            required: false,
            readOnly: true,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          company: {
            required: false,
            readOnly: true,
            serializedName: 'properties.company',
            type: {
              name: 'String'
            }
          },
          accountType: {
            required: false,
            readOnly: true,
            serializedName: 'properties.accountType',
            type: {
              name: 'String'
            }
          },
          address: {
            required: false,
            readOnly: true,
            serializedName: 'properties.address',
            type: {
              name: 'String'
            }
          },
          defaultCurrency: {
            required: false,
            readOnly: true,
            serializedName: 'properties.defaultCurrency',
            type: {
              name: 'String'
            }
          },
          country: {
            required: false,
            readOnly: true,
            serializedName: 'properties.country',
            type: {
              name: 'String'
            }
          },
          agreements: {
            required: false,
            readOnly: true,
            serializedName: 'properties.agreements',
            type: {
              name: 'String'
            }
          },
          projects: {
            required: false,
            serializedName: 'properties.projects',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'ProjectElementType',
                  type: {
                    name: 'Composite',
                    className: 'Project'
                  }
              }
            }
          },
          billingProfiles: {
            required: false,
            serializedName: 'properties.billingProfiles',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'BillingProfileElementType',
                  type: {
                    name: 'Composite',
                    className: 'BillingProfile'
                  }
              }
            }
          },
          enrollmentDetails: {
            required: false,
            readOnly: true,
            serializedName: 'properties.enrollmentDetails',
            type: {
              name: 'Composite',
              className: 'Enrollment'
            }
          },
          departments: {
            required: false,
            serializedName: 'properties.departments',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'DepartmentElementType',
                  type: {
                    name: 'Composite',
                    className: 'Department'
                  }
              }
            }
          },
          enrollmentAccounts: {
            required: false,
            serializedName: 'properties.enrollmentAccounts',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'EnrollmentAccountElementType',
                  type: {
                    name: 'Composite',
                    className: 'EnrollmentAccount'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = BillingAccount;
