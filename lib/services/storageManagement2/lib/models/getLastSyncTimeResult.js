/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * The response from the get last synctime operation.
 *
 */
class GetLastSyncTimeResult {
  /**
   * Create a GetLastSyncTimeResult.
   * @member {string} [status] The status of the secondary location of the
   * Storage Account. Live: Indicates that the secondary location is active and
   * operational; Bootstrap: Indicates initial synchronization from the primary
   * location to the secondary location is in progress, this typically occurs
   * when replication is first enabled; Unavailable: Indicates that the
   * secondary location is temporarily unavailable. Possible values include:
   * 'Live', 'Bootstrap', 'Unavailable'
   * @member {date} [lastSyncTime] All primary writes preceding this value are
   * guaranteed to be replicated to secondary. Primary writes after this point
   * in time may or may not be replicated. It is the minimum last sync time of
   * the account’s Blob/Table/Queue/File endpoints. The value may be account’s
   * creation time if LastSyncTime is not available. This can happen if the
   * replication status is bootstrap or unavailable.
   */
  constructor() {
  }

  /**
   * Defines the metadata of GetLastSyncTimeResult
   *
   * @returns {object} metadata of GetLastSyncTimeResult
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'GetLastSyncTimeResult',
      type: {
        name: 'Composite',
        className: 'GetLastSyncTimeResult',
        modelProperties: {
          status: {
            required: false,
            readOnly: true,
            serializedName: 'status',
            type: {
              name: 'String'
            }
          },
          lastSyncTime: {
            required: false,
            readOnly: true,
            serializedName: 'lastSyncTime',
            type: {
              name: 'DateTime'
            }
          }
        }
      }
    };
  }
}

module.exports = GetLastSyncTimeResult;
