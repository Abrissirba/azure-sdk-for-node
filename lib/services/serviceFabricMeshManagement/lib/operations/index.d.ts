/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
*/

import { ServiceClientOptions, RequestOptions, ServiceCallback, HttpOperationResponse } from 'ms-rest';
import * as models from '../models';


/**
 * @class
 * Application
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the ServiceFabricMeshManagementClient.
 */
export interface Application {


    /**
     * @summary Creates or updates an application resource.
     *
     * Creates an application resource with the specified name and description. If
     * an application with the same name already exists, then its description is
     * updated to the one indicated in this request.
     *
     * Use network resources to provide public connectivity to the services of an
     * application.
     *
     *
     * @param {string} resourceGroupName Azure resource group name
     *
     * @param {string} applicationName The identity of the application.
     *
     * @param {object} applicationResourceDescription Description for creating an
     * application resource.
     *
     * @param {string} [applicationResourceDescription.description] User readable
     * description of the application.
     *
     * @param {string} [applicationResourceDescription.debugParams] Internal use.
     *
     * @param {array} [applicationResourceDescription.services] describes the
     * services in the application.
     *
     * @param {object} [applicationResourceDescription.diagnostics] Describes the
     * diagnostics definition and usage for an application resource.
     *
     * @param {array} [applicationResourceDescription.diagnostics.sinks] List of
     * supported sinks that can be referenced.
     *
     * @param {boolean} [applicationResourceDescription.diagnostics.enabled] Status
     * of whether or not sinks are enabled.
     *
     * @param {array} [applicationResourceDescription.diagnostics.defaultSinkRefs]
     * The sinks to be used if diagnostics is enabled. Sink choices can be
     * overridden at the service and code package level.
     *
     * @param {object} [applicationResourceDescription.tags] Resource tags.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ApplicationResourceDescription>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createWithHttpOperationResponse(resourceGroupName: string, applicationName: string, applicationResourceDescription: models.ApplicationResourceDescription, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ApplicationResourceDescription>>;

    /**
     * @summary Creates or updates an application resource.
     *
     * Creates an application resource with the specified name and description. If
     * an application with the same name already exists, then its description is
     * updated to the one indicated in this request.
     *
     * Use network resources to provide public connectivity to the services of an
     * application.
     *
     *
     * @param {string} resourceGroupName Azure resource group name
     *
     * @param {string} applicationName The identity of the application.
     *
     * @param {object} applicationResourceDescription Description for creating an
     * application resource.
     *
     * @param {string} [applicationResourceDescription.description] User readable
     * description of the application.
     *
     * @param {string} [applicationResourceDescription.debugParams] Internal use.
     *
     * @param {array} [applicationResourceDescription.services] describes the
     * services in the application.
     *
     * @param {object} [applicationResourceDescription.diagnostics] Describes the
     * diagnostics definition and usage for an application resource.
     *
     * @param {array} [applicationResourceDescription.diagnostics.sinks] List of
     * supported sinks that can be referenced.
     *
     * @param {boolean} [applicationResourceDescription.diagnostics.enabled] Status
     * of whether or not sinks are enabled.
     *
     * @param {array} [applicationResourceDescription.diagnostics.defaultSinkRefs]
     * The sinks to be used if diagnostics is enabled. Sink choices can be
     * overridden at the service and code package level.
     *
     * @param {object} [applicationResourceDescription.tags] Resource tags.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ApplicationResourceDescription} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ApplicationResourceDescription} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ApplicationResourceDescription} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    create(resourceGroupName: string, applicationName: string, applicationResourceDescription: models.ApplicationResourceDescription, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ApplicationResourceDescription>;
    create(resourceGroupName: string, applicationName: string, applicationResourceDescription: models.ApplicationResourceDescription, callback: ServiceCallback<models.ApplicationResourceDescription>): void;
    create(resourceGroupName: string, applicationName: string, applicationResourceDescription: models.ApplicationResourceDescription, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ApplicationResourceDescription>): void;


    /**
     * @summary Gets the application resource.
     *
     * Gets the information about the application resource with a given name. The
     * information includes the information about the application's services and
     * other runtime properties.
     *
     * @param {string} resourceGroupName Azure resource group name
     *
     * @param {string} applicationName The identity of the application.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ApplicationResourceDescription>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, applicationName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ApplicationResourceDescription>>;

    /**
     * @summary Gets the application resource.
     *
     * Gets the information about the application resource with a given name. The
     * information includes the information about the application's services and
     * other runtime properties.
     *
     * @param {string} resourceGroupName Azure resource group name
     *
     * @param {string} applicationName The identity of the application.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ApplicationResourceDescription} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ApplicationResourceDescription} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ApplicationResourceDescription} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, applicationName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ApplicationResourceDescription>;
    get(resourceGroupName: string, applicationName: string, callback: ServiceCallback<models.ApplicationResourceDescription>): void;
    get(resourceGroupName: string, applicationName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ApplicationResourceDescription>): void;


    /**
     * @summary Deletes the application resource.
     *
     * Deletes the application resource identified by the name.
     *
     * @param {string} resourceGroupName Azure resource group name
     *
     * @param {string} applicationName The identity of the application.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(resourceGroupName: string, applicationName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * @summary Deletes the application resource.
     *
     * Deletes the application resource identified by the name.
     *
     * @param {string} resourceGroupName Azure resource group name
     *
     * @param {string} applicationName The identity of the application.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(resourceGroupName: string, applicationName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(resourceGroupName: string, applicationName: string, callback: ServiceCallback<void>): void;
    deleteMethod(resourceGroupName: string, applicationName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * @summary Gets all the application resources in a given resource group.
     *
     * Gets the information about all application resources in a given resource
     * group. The information includes the information about the application's
     * services and other runtime properties.
     *
     * @param {string} resourceGroupName Azure resource group name
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ApplicationResourceDescriptionList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByResourceGroupWithHttpOperationResponse(resourceGroupName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ApplicationResourceDescriptionList>>;

    /**
     * @summary Gets all the application resources in a given resource group.
     *
     * Gets the information about all application resources in a given resource
     * group. The information includes the information about the application's
     * services and other runtime properties.
     *
     * @param {string} resourceGroupName Azure resource group name
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ApplicationResourceDescriptionList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ApplicationResourceDescriptionList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ApplicationResourceDescriptionList} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByResourceGroup(resourceGroupName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ApplicationResourceDescriptionList>;
    listByResourceGroup(resourceGroupName: string, callback: ServiceCallback<models.ApplicationResourceDescriptionList>): void;
    listByResourceGroup(resourceGroupName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ApplicationResourceDescriptionList>): void;


    /**
     * @summary Gets all the application resources in a given subscription.
     *
     * Gets the information about all application resources in a given
     * subscription. The information includes the information about the
     * application's services and other runtime properties.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ApplicationResourceDescriptionList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listBySubscriptionWithHttpOperationResponse(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ApplicationResourceDescriptionList>>;

    /**
     * @summary Gets all the application resources in a given subscription.
     *
     * Gets the information about all application resources in a given
     * subscription. The information includes the information about the
     * application's services and other runtime properties.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ApplicationResourceDescriptionList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ApplicationResourceDescriptionList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ApplicationResourceDescriptionList} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listBySubscription(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ApplicationResourceDescriptionList>;
    listBySubscription(callback: ServiceCallback<models.ApplicationResourceDescriptionList>): void;
    listBySubscription(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ApplicationResourceDescriptionList>): void;


    /**
     * @summary Gets all the application resources in a given resource group.
     *
     * Gets the information about all application resources in a given resource
     * group. The information includes the information about the application's
     * services and other runtime properties.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ApplicationResourceDescriptionList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByResourceGroupNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ApplicationResourceDescriptionList>>;

    /**
     * @summary Gets all the application resources in a given resource group.
     *
     * Gets the information about all application resources in a given resource
     * group. The information includes the information about the application's
     * services and other runtime properties.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ApplicationResourceDescriptionList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ApplicationResourceDescriptionList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ApplicationResourceDescriptionList} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByResourceGroupNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ApplicationResourceDescriptionList>;
    listByResourceGroupNext(nextPageLink: string, callback: ServiceCallback<models.ApplicationResourceDescriptionList>): void;
    listByResourceGroupNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ApplicationResourceDescriptionList>): void;


    /**
     * @summary Gets all the application resources in a given subscription.
     *
     * Gets the information about all application resources in a given
     * subscription. The information includes the information about the
     * application's services and other runtime properties.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ApplicationResourceDescriptionList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listBySubscriptionNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ApplicationResourceDescriptionList>>;

    /**
     * @summary Gets all the application resources in a given subscription.
     *
     * Gets the information about all application resources in a given
     * subscription. The information includes the information about the
     * application's services and other runtime properties.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ApplicationResourceDescriptionList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ApplicationResourceDescriptionList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ApplicationResourceDescriptionList} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listBySubscriptionNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ApplicationResourceDescriptionList>;
    listBySubscriptionNext(nextPageLink: string, callback: ServiceCallback<models.ApplicationResourceDescriptionList>): void;
    listBySubscriptionNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ApplicationResourceDescriptionList>): void;
}

/**
 * @class
 * Service
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the ServiceFabricMeshManagementClient.
 */
export interface Service {


    /**
     * @summary Gets services of a given application.
     *
     * Gets the information about all services of a given service of an
     * application. The information includes the runtime properties of the service
     * instance.
     *
     * @param {string} resourceGroupName Azure resource group name
     *
     * @param {string} applicationName The identity of the application.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ServiceList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByApplicationNameWithHttpOperationResponse(resourceGroupName: string, applicationName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ServiceList>>;

    /**
     * @summary Gets services of a given application.
     *
     * Gets the information about all services of a given service of an
     * application. The information includes the runtime properties of the service
     * instance.
     *
     * @param {string} resourceGroupName Azure resource group name
     *
     * @param {string} applicationName The identity of the application.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ServiceList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ServiceList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ServiceList} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByApplicationName(resourceGroupName: string, applicationName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ServiceList>;
    listByApplicationName(resourceGroupName: string, applicationName: string, callback: ServiceCallback<models.ServiceList>): void;
    listByApplicationName(resourceGroupName: string, applicationName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ServiceList>): void;


    /**
     * @summary Gets the properties of the service.
     *
     * The operation returns the properties of the service.
     *
     * @param {string} resourceGroupName Azure resource group name
     *
     * @param {string} applicationName The identity of the application.
     *
     * @param {string} serviceName The identity of the service.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ServiceResourceDescription>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, applicationName: string, serviceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ServiceResourceDescription>>;

    /**
     * @summary Gets the properties of the service.
     *
     * The operation returns the properties of the service.
     *
     * @param {string} resourceGroupName Azure resource group name
     *
     * @param {string} applicationName The identity of the application.
     *
     * @param {string} serviceName The identity of the service.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ServiceResourceDescription} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ServiceResourceDescription} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ServiceResourceDescription} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, applicationName: string, serviceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ServiceResourceDescription>;
    get(resourceGroupName: string, applicationName: string, serviceName: string, callback: ServiceCallback<models.ServiceResourceDescription>): void;
    get(resourceGroupName: string, applicationName: string, serviceName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ServiceResourceDescription>): void;


    /**
     * @summary Gets services of a given application.
     *
     * Gets the information about all services of a given service of an
     * application. The information includes the runtime properties of the service
     * instance.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ServiceList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByApplicationNameNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ServiceList>>;

    /**
     * @summary Gets services of a given application.
     *
     * Gets the information about all services of a given service of an
     * application. The information includes the runtime properties of the service
     * instance.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ServiceList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ServiceList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ServiceList} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByApplicationNameNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ServiceList>;
    listByApplicationNameNext(nextPageLink: string, callback: ServiceCallback<models.ServiceList>): void;
    listByApplicationNameNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ServiceList>): void;
}

/**
 * @class
 * Replica
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the ServiceFabricMeshManagementClient.
 */
export interface Replica {


    /**
     * @summary Gets replicas of a given service.
     *
     * Gets the information about all replicas of a given service of an
     * application. The information includes the runtime properties of the replica
     * instance.
     *
     * @param {string} resourceGroupName Azure resource group name
     *
     * @param {string} applicationName The identity of the application.
     *
     * @param {string} serviceName The identity of the service.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ServiceReplicaList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByServiceNameWithHttpOperationResponse(resourceGroupName: string, applicationName: string, serviceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ServiceReplicaList>>;

    /**
     * @summary Gets replicas of a given service.
     *
     * Gets the information about all replicas of a given service of an
     * application. The information includes the runtime properties of the replica
     * instance.
     *
     * @param {string} resourceGroupName Azure resource group name
     *
     * @param {string} applicationName The identity of the application.
     *
     * @param {string} serviceName The identity of the service.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ServiceReplicaList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ServiceReplicaList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ServiceReplicaList} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByServiceName(resourceGroupName: string, applicationName: string, serviceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ServiceReplicaList>;
    listByServiceName(resourceGroupName: string, applicationName: string, serviceName: string, callback: ServiceCallback<models.ServiceReplicaList>): void;
    listByServiceName(resourceGroupName: string, applicationName: string, serviceName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ServiceReplicaList>): void;


    /**
     * @summary Gets a specific replica of a given service.
     *
     * Gets the information about the specified replica of a given service of an
     * application. The information includes the runtime properties of the replica
     * instance.
     *
     * @param {string} resourceGroupName Azure resource group name
     *
     * @param {string} applicationName The identity of the application.
     *
     * @param {string} serviceName The identity of the service.
     *
     * @param {string} replicaName The identity of the service replica.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ServiceReplicaDescription>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, applicationName: string, serviceName: string, replicaName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ServiceReplicaDescription>>;

    /**
     * @summary Gets a specific replica of a given service.
     *
     * Gets the information about the specified replica of a given service of an
     * application. The information includes the runtime properties of the replica
     * instance.
     *
     * @param {string} resourceGroupName Azure resource group name
     *
     * @param {string} applicationName The identity of the application.
     *
     * @param {string} serviceName The identity of the service.
     *
     * @param {string} replicaName The identity of the service replica.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ServiceReplicaDescription} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ServiceReplicaDescription} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ServiceReplicaDescription} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, applicationName: string, serviceName: string, replicaName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ServiceReplicaDescription>;
    get(resourceGroupName: string, applicationName: string, serviceName: string, replicaName: string, callback: ServiceCallback<models.ServiceReplicaDescription>): void;
    get(resourceGroupName: string, applicationName: string, serviceName: string, replicaName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ServiceReplicaDescription>): void;


    /**
     * @summary Gets replicas of a given service.
     *
     * Gets the information about all replicas of a given service of an
     * application. The information includes the runtime properties of the replica
     * instance.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ServiceReplicaList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByServiceNameNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ServiceReplicaList>>;

    /**
     * @summary Gets replicas of a given service.
     *
     * Gets the information about all replicas of a given service of an
     * application. The information includes the runtime properties of the replica
     * instance.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ServiceReplicaList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ServiceReplicaList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ServiceReplicaList} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByServiceNameNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ServiceReplicaList>;
    listByServiceNameNext(nextPageLink: string, callback: ServiceCallback<models.ServiceReplicaList>): void;
    listByServiceNameNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ServiceReplicaList>): void;
}

/**
 * @class
 * CodePackage
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the ServiceFabricMeshManagementClient.
 */
export interface CodePackage {


    /**
     * @summary Gets the logs for the container.
     *
     * Get the logs for the container of a given code package of an application.
     *
     * @param {string} resourceGroupName Azure resource group name
     *
     * @param {string} applicationName The identity of the application.
     *
     * @param {string} serviceName The identity of the service.
     *
     * @param {string} replicaName The identity of the service replica.
     *
     * @param {string} codePackageName The name of the code package.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {number} [options.tail] Number of lines to show from the end of the
     * logs. Default is 100.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ContainerLogs>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getContainerLogWithHttpOperationResponse(resourceGroupName: string, applicationName: string, serviceName: string, replicaName: string, codePackageName: string, options?: { tail? : number, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ContainerLogs>>;

    /**
     * @summary Gets the logs for the container.
     *
     * Get the logs for the container of a given code package of an application.
     *
     * @param {string} resourceGroupName Azure resource group name
     *
     * @param {string} applicationName The identity of the application.
     *
     * @param {string} serviceName The identity of the service.
     *
     * @param {string} replicaName The identity of the service replica.
     *
     * @param {string} codePackageName The name of the code package.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {number} [options.tail] Number of lines to show from the end of the
     * logs. Default is 100.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ContainerLogs} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ContainerLogs} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ContainerLogs} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    getContainerLog(resourceGroupName: string, applicationName: string, serviceName: string, replicaName: string, codePackageName: string, options?: { tail? : number, customHeaders? : { [headerName: string]: string; } }): Promise<models.ContainerLogs>;
    getContainerLog(resourceGroupName: string, applicationName: string, serviceName: string, replicaName: string, codePackageName: string, callback: ServiceCallback<models.ContainerLogs>): void;
    getContainerLog(resourceGroupName: string, applicationName: string, serviceName: string, replicaName: string, codePackageName: string, options: { tail? : number, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ContainerLogs>): void;
}

/**
 * @class
 * Operations
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the ServiceFabricMeshManagementClient.
 */
export interface Operations {


    /**
     * @summary Lists all of the available operations.
     *
     * Lists all the available operations provided by Service Fabric SeaBreeze
     * resource provider.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<OperationListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.OperationListResult>>;

    /**
     * @summary Lists all of the available operations.
     *
     * Lists all the available operations provided by Service Fabric SeaBreeze
     * resource provider.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {OperationListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {OperationListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link OperationListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.OperationListResult>;
    list(callback: ServiceCallback<models.OperationListResult>): void;
    list(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.OperationListResult>): void;


    /**
     * @summary Lists all of the available operations.
     *
     * Lists all the available operations provided by Service Fabric SeaBreeze
     * resource provider.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<OperationListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.OperationListResult>>;

    /**
     * @summary Lists all of the available operations.
     *
     * Lists all the available operations provided by Service Fabric SeaBreeze
     * resource provider.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {OperationListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {OperationListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link OperationListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.OperationListResult>;
    listNext(nextPageLink: string, callback: ServiceCallback<models.OperationListResult>): void;
    listNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.OperationListResult>): void;
}

/**
 * @class
 * Network
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the ServiceFabricMeshManagementClient.
 */
export interface Network {


    /**
     * @summary Creates or updates a network resource.
     *
     * Creates a network resource with the specified name and description. If a
     * network with the same name already exists, then its description is updated
     * to the one indicated in this request.
     *
     * Use network resources to create private network and configure public
     * connectivity for services within your application.
     *
     *
     * @param {string} resourceGroupName Azure resource group name
     *
     * @param {string} networkName The identity of the network.
     *
     * @param {object} networkResourceDescription Description for creating a
     * network resource.
     *
     * @param {string} [networkResourceDescription.description] User readable
     * description of the network.
     *
     * @param {string} networkResourceDescription.addressPrefix the address prefix
     * for this network.
     *
     * @param {object} [networkResourceDescription.ingressConfig] Configuration for
     * public connectivity for this network.
     *
     * @param {string} [networkResourceDescription.ingressConfig.qosLevel] The QoS
     * tier for ingress. Possible values include: 'Bronze'
     *
     * @param {array} [networkResourceDescription.ingressConfig.layer4]
     * Configuration for layer4 public connectivity for this network.
     *
     * @param {object} [networkResourceDescription.tags] Resource tags.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<NetworkResourceDescription>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createWithHttpOperationResponse(resourceGroupName: string, networkName: string, networkResourceDescription: models.NetworkResourceDescription, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.NetworkResourceDescription>>;

    /**
     * @summary Creates or updates a network resource.
     *
     * Creates a network resource with the specified name and description. If a
     * network with the same name already exists, then its description is updated
     * to the one indicated in this request.
     *
     * Use network resources to create private network and configure public
     * connectivity for services within your application.
     *
     *
     * @param {string} resourceGroupName Azure resource group name
     *
     * @param {string} networkName The identity of the network.
     *
     * @param {object} networkResourceDescription Description for creating a
     * network resource.
     *
     * @param {string} [networkResourceDescription.description] User readable
     * description of the network.
     *
     * @param {string} networkResourceDescription.addressPrefix the address prefix
     * for this network.
     *
     * @param {object} [networkResourceDescription.ingressConfig] Configuration for
     * public connectivity for this network.
     *
     * @param {string} [networkResourceDescription.ingressConfig.qosLevel] The QoS
     * tier for ingress. Possible values include: 'Bronze'
     *
     * @param {array} [networkResourceDescription.ingressConfig.layer4]
     * Configuration for layer4 public connectivity for this network.
     *
     * @param {object} [networkResourceDescription.tags] Resource tags.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {NetworkResourceDescription} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {NetworkResourceDescription} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link NetworkResourceDescription} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    create(resourceGroupName: string, networkName: string, networkResourceDescription: models.NetworkResourceDescription, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.NetworkResourceDescription>;
    create(resourceGroupName: string, networkName: string, networkResourceDescription: models.NetworkResourceDescription, callback: ServiceCallback<models.NetworkResourceDescription>): void;
    create(resourceGroupName: string, networkName: string, networkResourceDescription: models.NetworkResourceDescription, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.NetworkResourceDescription>): void;


    /**
     * @summary Gets the network resource.
     *
     * Gets the information about the network resource with a given name. This
     * information includes the network description and other runtime information.
     *
     *
     * @param {string} resourceGroupName Azure resource group name
     *
     * @param {string} networkName The identity of the network.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<NetworkResourceDescription>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, networkName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.NetworkResourceDescription>>;

    /**
     * @summary Gets the network resource.
     *
     * Gets the information about the network resource with a given name. This
     * information includes the network description and other runtime information.
     *
     *
     * @param {string} resourceGroupName Azure resource group name
     *
     * @param {string} networkName The identity of the network.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {NetworkResourceDescription} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {NetworkResourceDescription} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link NetworkResourceDescription} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, networkName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.NetworkResourceDescription>;
    get(resourceGroupName: string, networkName: string, callback: ServiceCallback<models.NetworkResourceDescription>): void;
    get(resourceGroupName: string, networkName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.NetworkResourceDescription>): void;


    /**
     * @summary Deletes the network resource.
     *
     * Deletes the network resource identified by the name.
     *
     * @param {string} resourceGroupName Azure resource group name
     *
     * @param {string} networkName The identity of the network.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(resourceGroupName: string, networkName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * @summary Deletes the network resource.
     *
     * Deletes the network resource identified by the name.
     *
     * @param {string} resourceGroupName Azure resource group name
     *
     * @param {string} networkName The identity of the network.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(resourceGroupName: string, networkName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(resourceGroupName: string, networkName: string, callback: ServiceCallback<void>): void;
    deleteMethod(resourceGroupName: string, networkName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * @summary Gets all the network resources in a given resource group.
     *
     * Gets the information about all network resources in a given resource group.
     * The information includes the network description and other runtime
     * properties.
     *
     *
     * @param {string} resourceGroupName Azure resource group name
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<NetworkResourceDescriptionList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByResourceGroupWithHttpOperationResponse(resourceGroupName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.NetworkResourceDescriptionList>>;

    /**
     * @summary Gets all the network resources in a given resource group.
     *
     * Gets the information about all network resources in a given resource group.
     * The information includes the network description and other runtime
     * properties.
     *
     *
     * @param {string} resourceGroupName Azure resource group name
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {NetworkResourceDescriptionList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {NetworkResourceDescriptionList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link NetworkResourceDescriptionList} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByResourceGroup(resourceGroupName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.NetworkResourceDescriptionList>;
    listByResourceGroup(resourceGroupName: string, callback: ServiceCallback<models.NetworkResourceDescriptionList>): void;
    listByResourceGroup(resourceGroupName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.NetworkResourceDescriptionList>): void;


    /**
     * @summary Gets all the network resources in a given subscription.
     *
     * Gets the information about all network resources in a given subscription.
     * The information includes the network description and other runtime
     * properties.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<NetworkResourceDescriptionList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listBySubscriptionWithHttpOperationResponse(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.NetworkResourceDescriptionList>>;

    /**
     * @summary Gets all the network resources in a given subscription.
     *
     * Gets the information about all network resources in a given subscription.
     * The information includes the network description and other runtime
     * properties.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {NetworkResourceDescriptionList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {NetworkResourceDescriptionList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link NetworkResourceDescriptionList} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listBySubscription(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.NetworkResourceDescriptionList>;
    listBySubscription(callback: ServiceCallback<models.NetworkResourceDescriptionList>): void;
    listBySubscription(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.NetworkResourceDescriptionList>): void;


    /**
     * @summary Gets all the network resources in a given resource group.
     *
     * Gets the information about all network resources in a given resource group.
     * The information includes the network description and other runtime
     * properties.
     *
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<NetworkResourceDescriptionList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByResourceGroupNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.NetworkResourceDescriptionList>>;

    /**
     * @summary Gets all the network resources in a given resource group.
     *
     * Gets the information about all network resources in a given resource group.
     * The information includes the network description and other runtime
     * properties.
     *
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {NetworkResourceDescriptionList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {NetworkResourceDescriptionList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link NetworkResourceDescriptionList} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByResourceGroupNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.NetworkResourceDescriptionList>;
    listByResourceGroupNext(nextPageLink: string, callback: ServiceCallback<models.NetworkResourceDescriptionList>): void;
    listByResourceGroupNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.NetworkResourceDescriptionList>): void;


    /**
     * @summary Gets all the network resources in a given subscription.
     *
     * Gets the information about all network resources in a given subscription.
     * The information includes the network description and other runtime
     * properties.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<NetworkResourceDescriptionList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listBySubscriptionNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.NetworkResourceDescriptionList>>;

    /**
     * @summary Gets all the network resources in a given subscription.
     *
     * Gets the information about all network resources in a given subscription.
     * The information includes the network description and other runtime
     * properties.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {NetworkResourceDescriptionList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {NetworkResourceDescriptionList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link NetworkResourceDescriptionList} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listBySubscriptionNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.NetworkResourceDescriptionList>;
    listBySubscriptionNext(nextPageLink: string, callback: ServiceCallback<models.NetworkResourceDescriptionList>): void;
    listBySubscriptionNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.NetworkResourceDescriptionList>): void;
}

/**
 * @class
 * Volume
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the ServiceFabricMeshManagementClient.
 */
export interface Volume {


    /**
     * @summary Creates or updates a volume resource.
     *
     * Creates a volume resource with the specified name and description. If a
     * volume with the same name already exists, then its description is updated to
     * the one indicated in this request.
     *
     *
     * @param {string} resourceGroupName Azure resource group name
     *
     * @param {string} volumeName The identity of the volume.
     *
     * @param {object} volumeResourceDescription Description for creating a volume
     * resource.
     *
     * @param {string} [volumeResourceDescription.description] User readable
     * description of the volume.
     *
     * @param {object} [volumeResourceDescription.azureFileParameters] This type
     * describes a volume provided by an Azure Files file share.
     *
     * @param {string} volumeResourceDescription.azureFileParameters.accountName
     * Name of the Azure storage account for the File Share.
     *
     * @param {string} [volumeResourceDescription.azureFileParameters.accountKey]
     * Access key of the Azure storage account for the File Share.
     *
     * @param {string} volumeResourceDescription.azureFileParameters.shareName Name
     * of the Azure Files file share that provides storage for the volume.
     *
     * @param {object} [volumeResourceDescription.tags] Resource tags.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<VolumeResourceDescription>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createWithHttpOperationResponse(resourceGroupName: string, volumeName: string, volumeResourceDescription: models.VolumeResourceDescription, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.VolumeResourceDescription>>;

    /**
     * @summary Creates or updates a volume resource.
     *
     * Creates a volume resource with the specified name and description. If a
     * volume with the same name already exists, then its description is updated to
     * the one indicated in this request.
     *
     *
     * @param {string} resourceGroupName Azure resource group name
     *
     * @param {string} volumeName The identity of the volume.
     *
     * @param {object} volumeResourceDescription Description for creating a volume
     * resource.
     *
     * @param {string} [volumeResourceDescription.description] User readable
     * description of the volume.
     *
     * @param {object} [volumeResourceDescription.azureFileParameters] This type
     * describes a volume provided by an Azure Files file share.
     *
     * @param {string} volumeResourceDescription.azureFileParameters.accountName
     * Name of the Azure storage account for the File Share.
     *
     * @param {string} [volumeResourceDescription.azureFileParameters.accountKey]
     * Access key of the Azure storage account for the File Share.
     *
     * @param {string} volumeResourceDescription.azureFileParameters.shareName Name
     * of the Azure Files file share that provides storage for the volume.
     *
     * @param {object} [volumeResourceDescription.tags] Resource tags.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {VolumeResourceDescription} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {VolumeResourceDescription} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link VolumeResourceDescription} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    create(resourceGroupName: string, volumeName: string, volumeResourceDescription: models.VolumeResourceDescription, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.VolumeResourceDescription>;
    create(resourceGroupName: string, volumeName: string, volumeResourceDescription: models.VolumeResourceDescription, callback: ServiceCallback<models.VolumeResourceDescription>): void;
    create(resourceGroupName: string, volumeName: string, volumeResourceDescription: models.VolumeResourceDescription, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.VolumeResourceDescription>): void;


    /**
     * @summary Gets the volume resource.
     *
     * Gets the information about the volume resource with a given name. This
     * information includes the volume description and other runtime information.
     *
     *
     * @param {string} resourceGroupName Azure resource group name
     *
     * @param {string} volumeName The identity of the volume.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<VolumeResourceDescription>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, volumeName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.VolumeResourceDescription>>;

    /**
     * @summary Gets the volume resource.
     *
     * Gets the information about the volume resource with a given name. This
     * information includes the volume description and other runtime information.
     *
     *
     * @param {string} resourceGroupName Azure resource group name
     *
     * @param {string} volumeName The identity of the volume.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {VolumeResourceDescription} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {VolumeResourceDescription} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link VolumeResourceDescription} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, volumeName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.VolumeResourceDescription>;
    get(resourceGroupName: string, volumeName: string, callback: ServiceCallback<models.VolumeResourceDescription>): void;
    get(resourceGroupName: string, volumeName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.VolumeResourceDescription>): void;


    /**
     * @summary Deletes the volume resource.
     *
     * Deletes the volume identified by the name.
     *
     * @param {string} resourceGroupName Azure resource group name
     *
     * @param {string} volumeName The identity of the volume.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(resourceGroupName: string, volumeName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * @summary Deletes the volume resource.
     *
     * Deletes the volume identified by the name.
     *
     * @param {string} resourceGroupName Azure resource group name
     *
     * @param {string} volumeName The identity of the volume.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(resourceGroupName: string, volumeName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(resourceGroupName: string, volumeName: string, callback: ServiceCallback<void>): void;
    deleteMethod(resourceGroupName: string, volumeName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * @summary Gets all the volume resources in a given resource group.
     *
     * Gets the information about all volume resources in a given resource group.
     * The information includes the volume description and other runtime
     * information.
     *
     *
     * @param {string} resourceGroupName Azure resource group name
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<VolumeResourceDescriptionList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByResourceGroupWithHttpOperationResponse(resourceGroupName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.VolumeResourceDescriptionList>>;

    /**
     * @summary Gets all the volume resources in a given resource group.
     *
     * Gets the information about all volume resources in a given resource group.
     * The information includes the volume description and other runtime
     * information.
     *
     *
     * @param {string} resourceGroupName Azure resource group name
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {VolumeResourceDescriptionList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {VolumeResourceDescriptionList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link VolumeResourceDescriptionList} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByResourceGroup(resourceGroupName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.VolumeResourceDescriptionList>;
    listByResourceGroup(resourceGroupName: string, callback: ServiceCallback<models.VolumeResourceDescriptionList>): void;
    listByResourceGroup(resourceGroupName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.VolumeResourceDescriptionList>): void;


    /**
     * @summary Gets all the volume resources in a given subscription.
     *
     * Gets the information about all volume resources in a given subscription. The
     * information includes the volume description and other runtime information.
     *
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<VolumeResourceDescriptionList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listBySubscriptionWithHttpOperationResponse(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.VolumeResourceDescriptionList>>;

    /**
     * @summary Gets all the volume resources in a given subscription.
     *
     * Gets the information about all volume resources in a given subscription. The
     * information includes the volume description and other runtime information.
     *
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {VolumeResourceDescriptionList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {VolumeResourceDescriptionList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link VolumeResourceDescriptionList} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listBySubscription(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.VolumeResourceDescriptionList>;
    listBySubscription(callback: ServiceCallback<models.VolumeResourceDescriptionList>): void;
    listBySubscription(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.VolumeResourceDescriptionList>): void;


    /**
     * @summary Gets all the volume resources in a given resource group.
     *
     * Gets the information about all volume resources in a given resource group.
     * The information includes the volume description and other runtime
     * information.
     *
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<VolumeResourceDescriptionList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByResourceGroupNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.VolumeResourceDescriptionList>>;

    /**
     * @summary Gets all the volume resources in a given resource group.
     *
     * Gets the information about all volume resources in a given resource group.
     * The information includes the volume description and other runtime
     * information.
     *
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {VolumeResourceDescriptionList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {VolumeResourceDescriptionList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link VolumeResourceDescriptionList} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByResourceGroupNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.VolumeResourceDescriptionList>;
    listByResourceGroupNext(nextPageLink: string, callback: ServiceCallback<models.VolumeResourceDescriptionList>): void;
    listByResourceGroupNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.VolumeResourceDescriptionList>): void;


    /**
     * @summary Gets all the volume resources in a given subscription.
     *
     * Gets the information about all volume resources in a given subscription. The
     * information includes the volume description and other runtime information.
     *
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<VolumeResourceDescriptionList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listBySubscriptionNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.VolumeResourceDescriptionList>>;

    /**
     * @summary Gets all the volume resources in a given subscription.
     *
     * Gets the information about all volume resources in a given subscription. The
     * information includes the volume description and other runtime information.
     *
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {VolumeResourceDescriptionList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {VolumeResourceDescriptionList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link VolumeResourceDescriptionList} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listBySubscriptionNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.VolumeResourceDescriptionList>;
    listBySubscriptionNext(nextPageLink: string, callback: ServiceCallback<models.VolumeResourceDescriptionList>): void;
    listBySubscriptionNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.VolumeResourceDescriptionList>): void;
}
