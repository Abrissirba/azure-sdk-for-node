/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as moment from "moment";


/**
 * @class
 * Initializes a new instance of the QueryContext class.
 * @constructor
 * Defines the query context that Bing used for the request.
 *
 * @property {string} originalQuery The query string as specified in the
 * request.
 * @property {string} [alteredQuery] The query string used by Bing to perform
 * the query. Bing uses the altered query string if the original query string
 * contained spelling mistakes. For example, if the query string is "saling
 * downwind", the altered query string will be "sailing downwind". This field
 * is included only if the original query string contains a spelling mistake.
 * @property {string} [alterationOverrideQuery] The query string to use to
 * force Bing to use the original string. For example, if the query string is
 * "saling downwind", the override query string will be "+saling downwind".
 * Remember to encode the query string which results in "%2Bsaling+downwind".
 * This field is included only if the original query string contains a spelling
 * mistake.
 * @property {boolean} [adultIntent] A Boolean value that indicates whether the
 * specified query has adult intent. The value is true if the query has adult
 * intent; otherwise, false.
 * @property {boolean} [askUserForLocation] A Boolean value that indicates
 * whether Bing requires the user's location to provide accurate results. If
 * you specified the user's location by using the X-MSEdge-ClientIP and
 * X-Search-Location headers, you can ignore this field. For location aware
 * queries, such as "today's weather" or "restaurants near me" that need the
 * user's location to provide accurate results, this field is set to true. For
 * location aware queries that include the location (for example, "Seattle
 * weather"), this field is set to false. This field is also set to false for
 * queries that are not location aware, such as "best sellers".
 * @property {boolean} [isTransactional]
 */
export interface QueryContext {
  originalQuery: string;
  readonly alteredQuery?: string;
  readonly alterationOverrideQuery?: string;
  readonly adultIntent?: boolean;
  readonly askUserForLocation?: boolean;
  readonly isTransactional?: boolean;
}

/**
 * @class
 * Initializes a new instance of the WebMetaTag class.
 * @constructor
 * Defines a webpage's metadata.
 *
 * @property {string} [name] The metadata.
 * @property {string} [content] The name of the metadata.
 */
export interface WebMetaTag {
  readonly name?: string;
  readonly content?: string;
}

/**
 * @class
 * Initializes a new instance of the ResponseBase class.
 * @constructor
 * @property {string} _type Polymorphic Discriminator
 */
export interface ResponseBase {
  _type: string;
}

/**
 * @class
 * Initializes a new instance of the Identifiable class.
 * @constructor
 * Defines the identity of a resource.
 *
 * @property {string} [id] A String identifier.
 */
export interface Identifiable extends ResponseBase {
  readonly id?: string;
}

/**
 * @class
 * Initializes a new instance of the Response class.
 * @constructor
 * Defines a response. All schemas that could be returned at the root of a
 * response should inherit from this
 *
 * @property {string} [webSearchUrl] The URL To Bing's search result for this
 * item.
 */
export interface Response extends Identifiable {
  readonly webSearchUrl?: string;
}

/**
 * @class
 * Initializes a new instance of the Thing class.
 * @constructor
 * @property {string} [name] The name of the thing represented by this object.
 * @property {string} [url] The URL to get more information about the thing
 * represented by this object.
 * @property {object} [image]
 * @property {object} [image.thumbnail] The URL to a thumbnail of the image
 * @property {string} [description] A short description of the item.
 * @property {string} [bingId] An ID that uniquely identifies this item.
 */
export interface Thing extends Response {
  readonly name?: string;
  readonly url?: string;
  readonly image?: ImageObject;
  readonly description?: string;
  readonly bingId?: string;
}

/**
 * @class
 * Initializes a new instance of the CreativeWork class.
 * @constructor
 * @property {string} [thumbnailUrl] The URL to a thumbnail of the item.
 * @property {array} [provider] The source of the creative work.
 * @property {string} [text]
 */
export interface CreativeWork extends Thing {
  readonly thumbnailUrl?: string;
  readonly provider?: Thing[];
  readonly text?: string;
}

/**
 * @class
 * Initializes a new instance of the MediaObject class.
 * @constructor
 * @property {string} [contentUrl] Original URL to retrieve the source (file)
 * for the media object (e.g the source URL for the image).
 * @property {string} [hostPageUrl] URL of the page that hosts the media
 * object.
 * @property {number} [width] The width of the source media object, in pixels.
 * @property {number} [height] The height of the source media object, in
 * pixels.
 */
export interface MediaObject extends CreativeWork {
  readonly contentUrl?: string;
  readonly hostPageUrl?: string;
  readonly width?: number;
  readonly height?: number;
}

/**
 * @class
 * Initializes a new instance of the ImageObject class.
 * @constructor
 * Defines an image
 *
 * @property {object} [thumbnail] The URL to a thumbnail of the image
 */
export interface ImageObject extends MediaObject {
  readonly thumbnail?: ImageObject;
}

/**
 * @class
 * Initializes a new instance of the WebPage class.
 * @constructor
 * Defines a webpage that is relevant to the query.
 *
 * @property {string} [displayUrl] The display URL of the webpage. The URL is
 * meant for display purposes only and is not well formed.
 * @property {string} [snippet] A snippet of text from the webpage that
 * describes its contents.
 * @property {array} [deepLinks] A list of links to related content that Bing
 * found in the website that contains this webpage. The Webpage object in this
 * context includes only the name, url, urlPingSuffix, and snippet fields.
 * @property {string} [dateLastCrawled] The last time that Bing crawled the
 * webpage. The date is in the form, YYYY-MM-DDTHH:MM:SS. For example,
 * 2015-04-13T05:23:39.
 * @property {array} [searchTags] A list of search tags that the webpage owner
 * specified on the webpage. The API returns only indexed search tags. The name
 * field of the MetaTag object contains the indexed search tag. Search tags
 * begin with search.* (for example, search.assetId). The content field
 * contains the tag's value.
 * @property {object} [primaryImageOfPage]
 * @property {object} [primaryImageOfPage.thumbnail] The URL to a thumbnail of
 * the image
 */
export interface WebPage extends CreativeWork {
  readonly displayUrl?: string;
  readonly snippet?: string;
  readonly deepLinks?: WebPage[];
  readonly dateLastCrawled?: string;
  readonly searchTags?: WebMetaTag[];
  readonly primaryImageOfPage?: ImageObject;
}

/**
 * @class
 * Initializes a new instance of the Answer class.
 * @constructor
 * @property {array} [followUpQueries]
 */
export interface Answer extends Response {
  readonly followUpQueries?: Query[];
}

/**
 * @class
 * Initializes a new instance of the SearchResultsAnswer class.
 * @constructor
 * @property {object} [queryContext]
 * @property {string} [queryContext.originalQuery] The query string as
 * specified in the request.
 * @property {string} [queryContext.alteredQuery] The query string used by Bing
 * to perform the query. Bing uses the altered query string if the original
 * query string contained spelling mistakes. For example, if the query string
 * is "saling downwind", the altered query string will be "sailing downwind".
 * This field is included only if the original query string contains a spelling
 * mistake.
 * @property {string} [queryContext.alterationOverrideQuery] The query string
 * to use to force Bing to use the original string. For example, if the query
 * string is "saling downwind", the override query string will be "+saling
 * downwind". Remember to encode the query string which results in
 * "%2Bsaling+downwind". This field is included only if the original query
 * string contains a spelling mistake.
 * @property {boolean} [queryContext.adultIntent] A Boolean value that
 * indicates whether the specified query has adult intent. The value is true if
 * the query has adult intent; otherwise, false.
 * @property {boolean} [queryContext.askUserForLocation] A Boolean value that
 * indicates whether Bing requires the user's location to provide accurate
 * results. If you specified the user's location by using the X-MSEdge-ClientIP
 * and X-Search-Location headers, you can ignore this field. For location aware
 * queries, such as "today's weather" or "restaurants near me" that need the
 * user's location to provide accurate results, this field is set to true. For
 * location aware queries that include the location (for example, "Seattle
 * weather"), this field is set to false. This field is also set to false for
 * queries that are not location aware, such as "best sellers".
 * @property {boolean} [queryContext.isTransactional]
 * @property {number} [totalEstimatedMatches] The estimated number of webpages
 * that are relevant to the query. Use this number along with the count and
 * offset query parameters to page the results.
 * @property {boolean} [isFamilyFriendly]
 */
export interface SearchResultsAnswer extends Answer {
  readonly queryContext?: QueryContext;
  readonly totalEstimatedMatches?: number;
  readonly isFamilyFriendly?: boolean;
}

/**
 * @class
 * Initializes a new instance of the WebWebAnswer class.
 * @constructor
 * Defines a list of relevant webpage links.
 *
 * @property {array} value A list of webpages that are relevant to the query.
 * @property {boolean} [someResultsRemoved] A Boolean value that indicates
 * whether the response excluded some results from the answer. If Bing excluded
 * some results, the value is true.
 */
export interface WebWebAnswer extends SearchResultsAnswer {
  value: WebPage[];
  readonly someResultsRemoved?: boolean;
}

/**
 * @class
 * Initializes a new instance of the Query class.
 * @constructor
 * Defines a search query.
 *
 * @property {string} text The query string. Use this string as the query term
 * in a new search request.
 * @property {string} [displayText] The display version of the query term. This
 * version of the query term may contain special characters that highlight the
 * search term found in the query string. The string contains the highlighting
 * characters only if the query enabled hit highlighting
 * @property {string} [webSearchUrl] The URL that takes the user to the Bing
 * search results page for the query.Only related search results include this
 * field.
 * @property {string} [searchLink]
 * @property {object} [thumbnail]
 * @property {object} [thumbnail.thumbnail] The URL to a thumbnail of the image
 */
export interface Query {
  text: string;
  readonly displayText?: string;
  readonly webSearchUrl?: string;
  readonly searchLink?: string;
  readonly thumbnail?: ImageObject;
}

/**
 * @class
 * Initializes a new instance of the Images class.
 * @constructor
 * Defines an image answer
 *
 * @property {number} [nextOffset]
 * @property {array} value A list of image objects that are relevant to the
 * query. If there are no results, the List is empty.
 * @property {array} [queryExpansions]
 * @property {array} [similarTerms]
 * @property {array} [relatedSearches]
 */
export interface Images extends SearchResultsAnswer {
  readonly nextOffset?: number;
  value: ImageObject[];
  readonly queryExpansions?: Query[];
  readonly similarTerms?: Query[];
  readonly relatedSearches?: Query[];
}

/**
 * @class
 * Initializes a new instance of the Article class.
 * @constructor
 * @property {number} [wordCount] The number of words in the text of the
 * Article.
 */
export interface Article extends CreativeWork {
  readonly wordCount?: number;
}

/**
 * @class
 * Initializes a new instance of the NewsArticle class.
 * @constructor
 * Defines a news article.
 *
 */
export interface NewsArticle extends Article {
}

/**
 * @class
 * Initializes a new instance of the News class.
 * @constructor
 * Defines a news answer.
 *
 * @property {array} value An array of NewsArticle objects that contain
 * information about news articles that are relevant to the query. If there are
 * no results to return for the request, the array is empty.
 * @property {string} [location]
 */
export interface News extends SearchResultsAnswer {
  value: NewsArticle[];
  readonly location?: string;
}

/**
 * @class
 * Initializes a new instance of the RelatedSearchesRelatedSearchAnswer class.
 * @constructor
 * Defines a list of related queries made by others.
 *
 * @property {array} value A list of related queries that were made by others.
 */
export interface RelatedSearchesRelatedSearchAnswer extends SearchResultsAnswer {
  value: Query[];
}

/**
 * @class
 * Initializes a new instance of the SpellSuggestions class.
 * @constructor
 * Defines a suggested query string that likely represents the user's intent.
 * The search results include this response if Bing determines that the user
 * may have intended to search for something different. For example, if the
 * user searches for alon brown, Bing may determine that the user likely
 * intended to search for Alton Brown instead (based on past searches by others
 * of Alon Brown).
 *
 * @property {array} value A list of suggested query strings that may represent
 * the user's intention. The list contains only one Query object.
 */
export interface SpellSuggestions extends SearchResultsAnswer {
  value: Query[];
}

/**
 * @class
 * Initializes a new instance of the TimeZoneTimeZoneInformation class.
 * @constructor
 * Defines a date and time for a geographical location.
 *
 * @property {string} location The name of the geographical location.For
 * example, County; City; City, State; City, State, Country; or Time Zone.
 * @property {string} time The data and time specified in the form,
 * YYYY-MM-DDThh;mm:ss.ssssssZ.
 * @property {string} utcOffset The offset from UTC. For example, UTC-7.
 */
export interface TimeZoneTimeZoneInformation {
  location: string;
  time: string;
  utcOffset: string;
}

/**
 * @class
 * Initializes a new instance of the TimeZone class.
 * @constructor
 * Defines the data and time of one or more geographic locations.
 *
 * @property {object} primaryCityTime The data and time, in UTC, of the
 * geographic location specified in the query. If the query specified a
 * specific geographic location (for example, a city), this object contains the
 * name of the geographic location and the current date and time of the
 * location, in UTC. If the query specified a general geographic location, such
 * as a state or country, this object contains the date and time of the primary
 * city or state found in the specified state or country. If the location
 * contains additional time zones, the otherCityTimes field contains the data
 * and time of cities or states located in the other time zones.
 * @property {string} [primaryCityTime.location] The name of the geographical
 * location.For example, County; City; City, State; City, State, Country; or
 * Time Zone.
 * @property {string} [primaryCityTime.time] The data and time specified in the
 * form, YYYY-MM-DDThh;mm:ss.ssssssZ.
 * @property {string} [primaryCityTime.utcOffset] The offset from UTC. For
 * example, UTC-7.
 * @property {array} [otherCityTimes] A list of dates and times of nearby time
 * zones.
 */
export interface TimeZone extends SearchResultsAnswer {
  primaryCityTime: TimeZoneTimeZoneInformation;
  readonly otherCityTimes?: TimeZoneTimeZoneInformation[];
}

/**
 * @class
 * Initializes a new instance of the VideoObject class.
 * @constructor
 * Defines a video object that is relevant to the query.
 *
 * @property {string} [motionThumbnailUrl]
 * @property {string} [motionThumbnailId]
 * @property {string} [embedHtml]
 * @property {boolean} [allowHttpsEmbed]
 * @property {number} [viewCount]
 * @property {object} [thumbnail]
 * @property {object} [thumbnail.thumbnail] The URL to a thumbnail of the image
 * @property {string} [videoId]
 * @property {boolean} [allowMobileEmbed]
 * @property {boolean} [isSuperfresh]
 */
export interface VideoObject extends MediaObject {
  readonly motionThumbnailUrl?: string;
  readonly motionThumbnailId?: string;
  readonly embedHtml?: string;
  readonly allowHttpsEmbed?: boolean;
  readonly viewCount?: number;
  readonly thumbnail?: ImageObject;
  readonly videoId?: string;
  readonly allowMobileEmbed?: boolean;
  readonly isSuperfresh?: boolean;
}

/**
 * @class
 * Initializes a new instance of the Videos class.
 * @constructor
 * Defines a video answer.
 *
 * @property {array} value A list of video objects that are relevant to the
 * query.
 * @property {number} [nextOffset]
 * @property {array} [queryExpansions]
 * @property {array} [relatedSearches]
 */
export interface Videos extends SearchResultsAnswer {
  value: VideoObject[];
  readonly nextOffset?: number;
  readonly queryExpansions?: Query[];
  readonly relatedSearches?: Query[];
}

/**
 * @class
 * Initializes a new instance of the Computation class.
 * @constructor
 * Defines an expression and its answer
 *
 * @property {string} expression The math or conversion expression. If the
 * query contains a request to convert units of measure (for example, meters to
 * feet), this field contains the from units and value contains the to units.
 * If the query contains a mathematical expression such as 2+2, this field
 * contains the expression and value contains the answer. Note that
 * mathematical expressions may be normalized. For example, if the query was
 * sqrt(4^2+8^2), the normalized expression may be sqrt((4^2)+(8^2)). If the
 * user's query is a math question and the textDecorations query parameter is
 * set to true, the expression string may include formatting markers. For
 * example, if the user's query is log(2), the normalized expression includes
 * the subscript markers. For more information, see Hit Highlighting.
 * @property {string} value The expression's answer.
 */
export interface Computation extends Answer {
  expression: string;
  value: string;
}

/**
 * @class
 * Initializes a new instance of the RankingRankingItem class.
 * @constructor
 * Defines a search result item to display
 *
 * @property {string} answerType The answer that contains the item to display.
 * Use the type to find the answer in the SearchResponse object. The type is
 * the name of a SearchResponse field. Possible values include: 'WebPages',
 * 'Images', 'SpellSuggestions', 'News', 'RelatedSearches', 'Videos',
 * 'Computation', 'TimeZone'. Default value: 'WebPages' .
 * @property {number} [resultIndex] A zero-based index of the item in the
 * answer.If the item does not include this field, display all items in the
 * answer. For example, display all news articles in the News answer.
 * @property {object} [value] The ID that identifies either an answer to
 * display or an item of an answer to display. If the ID identifies an answer,
 * display all items of the answer.
 * @property {string} [value.id] A String identifier.
 * @property {number} [htmlIndex]
 * @property {number} [textualIndex]
 * @property {number} [screenshotIndex]
 */
export interface RankingRankingItem {
  answerType: string;
  readonly resultIndex?: number;
  readonly value?: Identifiable;
  readonly htmlIndex?: number;
  readonly textualIndex?: number;
  readonly screenshotIndex?: number;
}

/**
 * @class
 * Initializes a new instance of the RankingRankingGroup class.
 * @constructor
 * Defines a search results group, such as mainline.
 *
 * @property {array} items A list of search result items to display in the
 * group.
 */
export interface RankingRankingGroup {
  items: RankingRankingItem[];
}

/**
 * @class
 * Initializes a new instance of the RankingRankingResponse class.
 * @constructor
 * Defines where on the search results page content should be placed and in
 * what order.
 *
 * @property {object} [pole] The search results that should be afforded the
 * most visible treatment (for example, displayed above the mainline and
 * sidebar).
 * @property {array} [pole.items] A list of search result items to display in
 * the group.
 * @property {object} [mainline] The search results to display in the mainline.
 * @property {array} [mainline.items] A list of search result items to display
 * in the group.
 * @property {object} [sidebar] The search results to display in the sidebar.
 * @property {array} [sidebar.items] A list of search result items to display
 * in the group.
 */
export interface RankingRankingResponse {
  readonly pole?: RankingRankingGroup;
  readonly mainline?: RankingRankingGroup;
  readonly sidebar?: RankingRankingGroup;
}

/**
 * @class
 * Initializes a new instance of the SearchResponse class.
 * @constructor
 * Defines the top-level object that the response includes when the request
 * succeeds.
 *
 * @property {object} [queryContext] An object that contains the query string
 * that Bing used for the request. This object contains the query string as
 * entered by the user. It may also contain an altered query string that Bing
 * used for the query if the query string contained a spelling mistake.
 * @property {string} [queryContext.originalQuery] The query string as
 * specified in the request.
 * @property {string} [queryContext.alteredQuery] The query string used by Bing
 * to perform the query. Bing uses the altered query string if the original
 * query string contained spelling mistakes. For example, if the query string
 * is "saling downwind", the altered query string will be "sailing downwind".
 * This field is included only if the original query string contains a spelling
 * mistake.
 * @property {string} [queryContext.alterationOverrideQuery] The query string
 * to use to force Bing to use the original string. For example, if the query
 * string is "saling downwind", the override query string will be "+saling
 * downwind". Remember to encode the query string which results in
 * "%2Bsaling+downwind". This field is included only if the original query
 * string contains a spelling mistake.
 * @property {boolean} [queryContext.adultIntent] A Boolean value that
 * indicates whether the specified query has adult intent. The value is true if
 * the query has adult intent; otherwise, false.
 * @property {boolean} [queryContext.askUserForLocation] A Boolean value that
 * indicates whether Bing requires the user's location to provide accurate
 * results. If you specified the user's location by using the X-MSEdge-ClientIP
 * and X-Search-Location headers, you can ignore this field. For location aware
 * queries, such as "today's weather" or "restaurants near me" that need the
 * user's location to provide accurate results, this field is set to true. For
 * location aware queries that include the location (for example, "Seattle
 * weather"), this field is set to false. This field is also set to false for
 * queries that are not location aware, such as "best sellers".
 * @property {boolean} [queryContext.isTransactional]
 * @property {object} [webPages] A list of webpages that are relevant to the
 * search query.
 * @property {array} [webPages.value] A list of webpages that are relevant to
 * the query.
 * @property {boolean} [webPages.someResultsRemoved] A Boolean value that
 * indicates whether the response excluded some results from the answer. If
 * Bing excluded some results, the value is true.
 * @property {object} [images] A list of images that are relevant to the search
 * query.
 * @property {number} [images.nextOffset]
 * @property {array} [images.value] A list of image objects that are relevant
 * to the query. If there are no results, the List is empty.
 * @property {array} [images.queryExpansions]
 * @property {array} [images.similarTerms]
 * @property {array} [images.relatedSearches]
 * @property {object} [news] A list of news articles that are relevant to the
 * search query.
 * @property {array} [news.value] An array of NewsArticle objects that contain
 * information about news articles that are relevant to the query. If there are
 * no results to return for the request, the array is empty.
 * @property {string} [news.location]
 * @property {object} [relatedSearches] A list of related queries made by
 * others.
 * @property {array} [relatedSearches.value] A list of related queries that
 * were made by others.
 * @property {object} [spellSuggestions] The query string that likely
 * represents the user's intent.
 * @property {array} [spellSuggestions.value] A list of suggested query strings
 * that may represent the user's intention. The list contains only one Query
 * object.
 * @property {object} [timeZone] The date and time of one or more geographic
 * locations.
 * @property {object} [timeZone.primaryCityTime] The data and time, in UTC, of
 * the geographic location specified in the query. If the query specified a
 * specific geographic location (for example, a city), this object contains the
 * name of the geographic location and the current date and time of the
 * location, in UTC. If the query specified a general geographic location, such
 * as a state or country, this object contains the date and time of the primary
 * city or state found in the specified state or country. If the location
 * contains additional time zones, the otherCityTimes field contains the data
 * and time of cities or states located in the other time zones.
 * @property {string} [timeZone.primaryCityTime.location] The name of the
 * geographical location.For example, County; City; City, State; City, State,
 * Country; or Time Zone.
 * @property {string} [timeZone.primaryCityTime.time] The data and time
 * specified in the form, YYYY-MM-DDThh;mm:ss.ssssssZ.
 * @property {string} [timeZone.primaryCityTime.utcOffset] The offset from UTC.
 * For example, UTC-7.
 * @property {array} [timeZone.otherCityTimes] A list of dates and times of
 * nearby time zones.
 * @property {object} [videos] A list of videos that are relevant to the search
 * query.
 * @property {array} [videos.value] A list of video objects that are relevant
 * to the query.
 * @property {number} [videos.nextOffset]
 * @property {array} [videos.queryExpansions]
 * @property {array} [videos.relatedSearches]
 * @property {object} [computation] The answer to a math expression or units
 * conversion expression.
 * @property {string} [computation.expression] The math or conversion
 * expression. If the query contains a request to convert units of measure (for
 * example, meters to feet), this field contains the from units and value
 * contains the to units. If the query contains a mathematical expression such
 * as 2+2, this field contains the expression and value contains the answer.
 * Note that mathematical expressions may be normalized. For example, if the
 * query was sqrt(4^2+8^2), the normalized expression may be sqrt((4^2)+(8^2)).
 * If the user's query is a math question and the textDecorations query
 * parameter is set to true, the expression string may include formatting
 * markers. For example, if the user's query is log(2), the normalized
 * expression includes the subscript markers. For more information, see Hit
 * Highlighting.
 * @property {string} [computation.value] The expression's answer.
 * @property {object} [rankingResponse] The order that Bing suggests that you
 * display the search results in.
 * @property {object} [rankingResponse.pole] The search results that should be
 * afforded the most visible treatment (for example, displayed above the
 * mainline and sidebar).
 * @property {array} [rankingResponse.pole.items] A list of search result items
 * to display in the group.
 * @property {object} [rankingResponse.mainline] The search results to display
 * in the mainline.
 * @property {array} [rankingResponse.mainline.items] A list of search result
 * items to display in the group.
 * @property {object} [rankingResponse.sidebar] The search results to display
 * in the sidebar.
 * @property {array} [rankingResponse.sidebar.items] A list of search result
 * items to display in the group.
 */
export interface SearchResponse extends Response {
  readonly queryContext?: QueryContext;
  readonly webPages?: WebWebAnswer;
  readonly images?: Images;
  readonly news?: News;
  readonly relatedSearches?: RelatedSearchesRelatedSearchAnswer;
  readonly spellSuggestions?: SpellSuggestions;
  readonly timeZone?: TimeZone;
  readonly videos?: Videos;
  readonly computation?: Computation;
  readonly rankingResponse?: RankingRankingResponse;
}

/**
 * @class
 * Initializes a new instance of the Places class.
 * @constructor
 * Defines a local entity answer.
 *
 * @property {array} value A list of local entities, such as restaurants or
 * hotels.
 */
export interface Places extends SearchResultsAnswer {
  value: Thing[];
}

/**
 * @class
 * Initializes a new instance of the ErrorModel class.
 * @constructor
 * Defines the error that occurred.
 *
 * @property {string} code The error code that identifies the category of
 * error. Possible values include: 'None', 'ServerError', 'InvalidRequest',
 * 'RateLimitExceeded', 'InvalidAuthorization', 'InsufficientAuthorization'.
 * Default value: 'None' .
 * @property {string} [subCode] The error code that further helps to identify
 * the error. Possible values include: 'UnexpectedError', 'ResourceError',
 * 'NotImplemented', 'ParameterMissing', 'ParameterInvalidValue',
 * 'HttpNotAllowed', 'Blocked', 'AuthorizationMissing',
 * 'AuthorizationRedundancy', 'AuthorizationDisabled', 'AuthorizationExpired'
 * @property {string} message A description of the error.
 * @property {string} [moreDetails] A description that provides additional
 * information about the error.
 * @property {string} [parameter] The parameter in the request that caused the
 * error.
 * @property {string} [value] The parameter's value in the request that was not
 * valid.
 */
export interface ErrorModel {
  code: string;
  readonly subCode?: string;
  message: string;
  readonly moreDetails?: string;
  readonly parameter?: string;
  readonly value?: string;
}

/**
 * @class
 * Initializes a new instance of the ErrorResponse class.
 * @constructor
 * The top-level response that represents a failed request.
 *
 * @property {array} errors A list of errors that describe the reasons why the
 * request failed.
 */
export interface ErrorResponse extends Response {
  errors: ErrorModel[];
}

/**
 * @class
 * Initializes a new instance of the WebWebGrouping class.
 * @constructor
 * @property {array} webPages
 * @property {string} _type Polymorphic Discriminator
 */
export interface WebWebGrouping {
  webPages: WebPage[];
  _type: string;
}

/**
 * @class
 * Initializes a new instance of the Intangible class.
 * @constructor
 */
export interface Intangible extends Thing {
}

/**
 * @class
 * Initializes a new instance of the StructuredValue class.
 * @constructor
 */
export interface StructuredValue extends Intangible {
}
