/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * The filter expression to be used in the report.
 *
 */
class ReportConfigFilter {
  /**
   * Create a ReportConfigFilter.
   * @member {array} [and] The logical "AND" expression. Must have atleast 2
   * items.
   * @member {array} [or] The logical "OR" expression. Must have atleast 2
   * items.
   * @member {object} [not] The logical "NOT" expression.
   * @member {object} [dimension] Has comparison expression for a dimension
   * @member {string} [dimension.name] The name of the column to use in
   * comaprison.
   * @member {array} [dimension.values] Array of values to use for comparison
   * @member {object} [tag] Has comparison expression for a tag
   * @member {string} [tag.name] The name of the column to use in comaprison.
   * @member {array} [tag.values] Array of values to use for comparison
   */
  constructor() {
  }

  /**
   * Defines the metadata of ReportConfigFilter
   *
   * @returns {object} metadata of ReportConfigFilter
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ReportConfigFilter',
      type: {
        name: 'Composite',
        className: 'ReportConfigFilter',
        modelProperties: {
          and: {
            required: false,
            serializedName: 'and',
            constraints: {
              MinItems: 2
            },
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'ReportConfigFilterElementType',
                  type: {
                    name: 'Composite',
                    className: 'ReportConfigFilter'
                  }
              }
            }
          },
          or: {
            required: false,
            serializedName: 'or',
            constraints: {
              MinItems: 2
            },
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'ReportConfigFilterElementType',
                  type: {
                    name: 'Composite',
                    className: 'ReportConfigFilter'
                  }
              }
            }
          },
          not: {
            required: false,
            serializedName: 'not',
            type: {
              name: 'Composite',
              className: 'ReportConfigFilter'
            }
          },
          dimension: {
            required: false,
            serializedName: 'dimension',
            type: {
              name: 'Composite',
              className: 'ReportConfigComparisonExpression'
            }
          },
          tag: {
            required: false,
            serializedName: 'tag',
            type: {
              name: 'Composite',
              className: 'ReportConfigComparisonExpression'
            }
          }
        }
      }
    };
  }
}

module.exports = ReportConfigFilter;
