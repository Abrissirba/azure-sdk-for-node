/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * The credit event associated to credit summary.
 *
 */
class Event {
  /**
   * Create a Event.
   * @member {date} [transactionDate] Transaction Date.
   * @member {number} [beginningBalance] Beginning Balance.
   * @member {number} [newCredit] New Credit.
   * @member {number} [adjustments] Adjustments.
   * @member {number} [creditExpired] Credit Expired.
   * @member {number} [charges] Charges.
   * @member {number} [closedBalance] Closed Balance.
   */
  constructor() {
  }

  /**
   * Defines the metadata of Event
   *
   * @returns {object} metadata of Event
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'Event',
      type: {
        name: 'Composite',
        className: 'Event',
        modelProperties: {
          transactionDate: {
            required: false,
            readOnly: true,
            serializedName: 'transactionDate',
            type: {
              name: 'DateTime'
            }
          },
          beginningBalance: {
            required: false,
            readOnly: true,
            serializedName: 'beginningBalance',
            type: {
              name: 'Number'
            }
          },
          newCredit: {
            required: false,
            readOnly: true,
            serializedName: 'newCredit',
            type: {
              name: 'Number'
            }
          },
          adjustments: {
            required: false,
            readOnly: true,
            serializedName: 'adjustments',
            type: {
              name: 'Number'
            }
          },
          creditExpired: {
            required: false,
            readOnly: true,
            serializedName: 'creditExpired',
            type: {
              name: 'Number'
            }
          },
          charges: {
            required: false,
            readOnly: true,
            serializedName: 'charges',
            type: {
              name: 'Number'
            }
          },
          closedBalance: {
            required: false,
            readOnly: true,
            serializedName: 'closedBalance',
            type: {
              name: 'Number'
            }
          }
        }
      }
    };
  }
}

module.exports = Event;
