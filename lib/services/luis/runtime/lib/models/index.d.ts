/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as moment from "moment";


/**
 * @class
 * Initializes a new instance of the IntentModel class.
 * @constructor
 * An intent detected from the utterance.
 *
 * @property {string} [intent] Name of the intent, as defined in LUIS.
 * @property {number} [score] Associated prediction score for the intent
 * (float).
 */
export interface IntentModel {
  intent?: string;
  score?: number;
}

/**
 * @class
 * Initializes a new instance of the EntityModel class.
 * @constructor
 * An entity extracted from the utterance.
 *
 * @property {string} entity Name of the entity, as defined in LUIS.
 * @property {string} type Type of the entity, as defined in LUIS.
 * @property {number} startIndex The position of the first character of the
 * matched entity within the utterance.
 * @property {number} endIndex The position of the last character of the
 * matched entity within the utterance.
 */
export interface EntityModel {
  entity: string;
  type: string;
  startIndex: number;
  endIndex: number;
  /**
   * @property Describes unknown properties. The value of an unknown property
   * can be of "any" type.
   */
  [property: string]: any;
}

/**
 * @class
 * Initializes a new instance of the CompositeChildModel class.
 * @constructor
 * Child entity in a LUIS Composite Entity.
 *
 * @property {string} type Type of child entity.
 * @property {string} value Value extracted by LUIS.
 */
export interface CompositeChildModel {
  type: string;
  value: string;
}

/**
 * @class
 * Initializes a new instance of the CompositeEntityModel class.
 * @constructor
 * LUIS Composite Entity.
 *
 * @property {string} parentType Type/name of parent entity.
 * @property {string} value Value for composite entity extracted by LUIS.
 * @property {array} children Child entities.
 */
export interface CompositeEntityModel {
  parentType: string;
  value: string;
  children: CompositeChildModel[];
}

/**
 * @class
 * Initializes a new instance of the Sentiment class.
 * @constructor
 * Sentiment of the input utterance.
 *
 * @property {string} [label] The polarity of the sentiment, can be positive,
 * neutral or negative.
 * @property {number} [score] Score of the sentiment, ranges from 0 (most
 * negative) to 1 (most positive).
 */
export interface Sentiment {
  label?: string;
  score?: number;
}

/**
 * @class
 * Initializes a new instance of the LuisResult class.
 * @constructor
 * Prediction, based on the input query, containing intent(s) and entities.
 *
 * @property {string} [query] The input utterance that was analized.
 * @property {string} [alteredQuery] The corrected utterance (when spell
 * checking was enabled).
 * @property {object} [topScoringIntent]
 * @property {string} [topScoringIntent.intent] Name of the intent, as defined
 * in LUIS.
 * @property {number} [topScoringIntent.score] Associated prediction score for
 * the intent (float).
 * @property {array} [intents] All the intents (and their score) that were
 * detected from utterance.
 * @property {array} [entities] The entities extracted from the utterance.
 * @property {array} [compositeEntities] The composite entities extracted from
 * the utterance.
 * @property {object} [sentimentAnalysis]
 * @property {string} [sentimentAnalysis.label] The polarity of the sentiment,
 * can be positive, neutral or negative.
 * @property {number} [sentimentAnalysis.score] Score of the sentiment, ranges
 * from 0 (most negative) to 1 (most positive).
 */
export interface LuisResult {
  query?: string;
  alteredQuery?: string;
  topScoringIntent?: IntentModel;
  intents?: IntentModel[];
  entities?: EntityModel[];
  compositeEntities?: CompositeEntityModel[];
  sentimentAnalysis?: Sentiment;
}

/**
 * @class
 * Initializes a new instance of the EntityWithScore class.
 * @constructor
 * @property {number} score Associated prediction score for the intent (float).
 */
export interface EntityWithScore extends EntityModel {
  score: number;
}

/**
 * @class
 * Initializes a new instance of the EntityWithResolution class.
 * @constructor
 * @property {object} resolution Resolution values for pre-built LUIS entities.
 */
export interface EntityWithResolution extends EntityModel {
  resolution: any;
}

/**
 * @class
 * Initializes a new instance of the APIError class.
 * @constructor
 * Error information returned by the API
 *
 * @property {string} [statusCode] HTTP Status code
 * @property {string} [message] Cause of the error.
 */
export interface APIError {
  statusCode?: string;
  message?: string;
}
