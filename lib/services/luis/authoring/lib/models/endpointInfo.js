/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * The base class "ProductionOrStagingEndpointInfo" inherits from.
 *
 */
class EndpointInfo {
  /**
   * Create a EndpointInfo.
   * @member {string} [versionId] The version ID to publish.
   * @member {boolean} [isStaging] Indicates if the staging slot should be
   * used, instead of the Production one.
   * @member {string} [endpointUrl] The Runtime endpoint URL for this model
   * version.
   * @member {string} [region] The target region that the application is
   * published to.
   * @member {string} [assignedEndpointKey] The endpoint key.
   * @member {string} [endpointRegion] The endpoint's region.
   * @member {string} [publishedDateTime] Timestamp when was last published.
   */
  constructor() {
  }

  /**
   * Defines the metadata of EndpointInfo
   *
   * @returns {object} metadata of EndpointInfo
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'EndpointInfo',
      type: {
        name: 'Composite',
        className: 'EndpointInfo',
        modelProperties: {
          versionId: {
            required: false,
            serializedName: 'versionId',
            type: {
              name: 'String'
            }
          },
          isStaging: {
            required: false,
            serializedName: 'isStaging',
            type: {
              name: 'Boolean'
            }
          },
          endpointUrl: {
            required: false,
            serializedName: 'endpointUrl',
            type: {
              name: 'String'
            }
          },
          region: {
            required: false,
            serializedName: 'region',
            type: {
              name: 'String'
            }
          },
          assignedEndpointKey: {
            required: false,
            serializedName: 'assignedEndpointKey',
            type: {
              name: 'String'
            }
          },
          endpointRegion: {
            required: false,
            serializedName: 'endpointRegion',
            type: {
              name: 'String'
            }
          },
          publishedDateTime: {
            required: false,
            serializedName: 'publishedDateTime',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = EndpointInfo;
