/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * The description of the IoTSpaces service.
 *
 */
class IoTSpacesPatchDescription {
  /**
   * Create a IoTSpacesPatchDescription.
   * @property {object} [tags] Instance tags
   * @property {object} [properties] The common properties of an IoTSpaces
   * service.
   * @property {string} [properties.provisioningState] The provisioning state.
   * Possible values include: 'Provisioning', 'Deleting', 'Succeeded',
   * 'Failed', 'Canceled'
   * @property {string} [properties.managementApiUrl] The management Api
   * endpoint.
   * @property {string} [properties.webPortalUrl] The management UI endpoint.
   * @property {object} [properties.storageContainer] The properties of the
   * designated storage container.
   * @property {string} [properties.storageContainer.connectionString] The
   * connection string of the storage account.
   * @property {string} [properties.storageContainer.subscriptionId] The
   * subscription identifier of the storage account.
   * @property {string} [properties.storageContainer.resourceGroup] The name of
   * the resource group of the storage account.
   * @property {string} [properties.storageContainer.containerName] The name of
   * storage container in the storage account.
   */
  constructor() {
  }

  /**
   * Defines the metadata of IoTSpacesPatchDescription
   *
   * @returns {object} metadata of IoTSpacesPatchDescription
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'IoTSpacesPatchDescription',
      type: {
        name: 'Composite',
        className: 'IoTSpacesPatchDescription',
        modelProperties: {
          tags: {
            required: false,
            serializedName: 'tags',
            type: {
              name: 'Dictionary',
              value: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          properties: {
            required: false,
            serializedName: 'properties',
            type: {
              name: 'Composite',
              className: 'IoTSpacesProperties'
            }
          }
        }
      }
    };
  }
}

module.exports = IoTSpacesPatchDescription;
