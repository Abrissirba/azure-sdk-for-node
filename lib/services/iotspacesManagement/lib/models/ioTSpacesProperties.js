/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * The properties of an IoTSpaces instance.
 *
 */
class IoTSpacesProperties {
  /**
   * Create a IoTSpacesProperties.
   * @property {string} [provisioningState] The provisioning state. Possible
   * values include: 'Provisioning', 'Deleting', 'Succeeded', 'Failed',
   * 'Canceled'
   * @property {string} [managementApiUrl] The management Api endpoint.
   * @property {string} [webPortalUrl] The management UI endpoint.
   * @property {object} [storageContainer] The properties of the designated
   * storage container.
   * @property {string} [storageContainer.connectionString] The connection
   * string of the storage account.
   * @property {string} [storageContainer.subscriptionId] The subscription
   * identifier of the storage account.
   * @property {string} [storageContainer.resourceGroup] The name of the
   * resource group of the storage account.
   * @property {string} [storageContainer.containerName] The name of storage
   * container in the storage account.
   */
  constructor() {
  }

  /**
   * Defines the metadata of IoTSpacesProperties
   *
   * @returns {object} metadata of IoTSpacesProperties
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'IoTSpacesProperties',
      type: {
        name: 'Composite',
        className: 'IoTSpacesProperties',
        modelProperties: {
          provisioningState: {
            required: false,
            readOnly: true,
            serializedName: 'provisioningState',
            type: {
              name: 'String'
            }
          },
          managementApiUrl: {
            required: false,
            readOnly: true,
            serializedName: 'managementApiUrl',
            type: {
              name: 'String'
            }
          },
          webPortalUrl: {
            required: false,
            readOnly: true,
            serializedName: 'webPortalUrl',
            type: {
              name: 'String'
            }
          },
          storageContainer: {
            required: false,
            serializedName: 'storageContainer',
            type: {
              name: 'Composite',
              className: 'StorageContainerProperties'
            }
          }
        }
      }
    };
  }
}

module.exports = IoTSpacesProperties;
