/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { BaseResource } from 'ms-rest-azure';
import { CloudError } from 'ms-rest-azure';
import * as moment from 'moment';

export { BaseResource } from 'ms-rest-azure';
export { CloudError } from 'ms-rest-azure';


/**
 * @class
 * Initializes a new instance of the BaseModel class.
 * @constructor
 * Base class for models
 *
 * @property {string} [id] The identifier.
 * @property {string} [name] The name.
 * @property {string} [type] The type.
 */
export interface BaseModel {
  readonly id?: string;
  readonly name?: string;
  readonly type?: string;
}

/**
 * @class
 * Initializes a new instance of the AccessControlRecord class.
 * @constructor
 * The access control record
 *
 * @property {string} initiatorName The Iscsi initiator name (IQN)
 */
export interface AccessControlRecord extends BaseModel {
  initiatorName: string;
}

/**
 * @class
 * Initializes a new instance of the AlertSource class.
 * @constructor
 * source at which the alert can be raised
 *
 * @property {string} [name] Name of the source.
 * @property {string} [timeZone] The time zone.
 * @property {string} [alertSourceType] Source type of the alert. Possible
 * values include: 'Resource', 'Device'
 */
export interface AlertSource {
  name?: string;
  timeZone?: string;
  alertSourceType?: string;
}

/**
 * @class
 * Initializes a new instance of the AlertErrorDetails class.
 * @constructor
 * Errordetails for the alert
 *
 * @property {string} [errorCode] Error code.
 * @property {string} [errorMessage] Error Message
 * @property {number} [occurences] Number of occurences.
 */
export interface AlertErrorDetails {
  errorCode?: string;
  errorMessage?: string;
  occurences?: number;
}

/**
 * @class
 * Initializes a new instance of the Alert class.
 * @constructor
 * Alert class
 *
 * @property {string} title Title of the alert
 * @property {string} scope Device or Resource alert. Possible values include:
 * 'Resource', 'Device'
 * @property {string} alertType Type of the alert
 * @property {date} appearedAtTime UTC time at which the alert appeared
 * @property {date} appearedAtSourceTime UTC time at which the alert appeared
 * on the source
 * @property {date} [clearedAtTime] UTC time at which the alert got cleared
 * @property {date} [clearedAtSourceTime] UTC time at which the alert was
 * cleared on the source
 * @property {object} source Source at which the alert was cleared
 * @property {string} [source.name] Name of the source.
 * @property {string} [source.timeZone] The time zone.
 * @property {string} [source.alertSourceType] Source type of the alert.
 * Possible values include: 'Resource', 'Device'
 * @property {string} [recommendation] Recommendation for acting on the alert
 * @property {string} [resolutionReason] Reason for resolving the alert
 * @property {string} severity Severity of the alert. Possible values include:
 * 'Informational', 'Warning', 'Critical'
 * @property {string} status Current status of the alert. Possible values
 * include: 'Active', 'Cleared'
 * @property {object} [errorDetails] ErrorDetails of the alert
 * @property {string} [errorDetails.errorCode] Error code.
 * @property {string} [errorDetails.errorMessage] Error Message
 * @property {number} [errorDetails.occurences] Number of occurences.
 * @property {object} [detailedInformation] Other information about the alert
 */
export interface Alert extends BaseModel {
  title: string;
  scope: string;
  alertType: string;
  appearedAtTime: Date;
  appearedAtSourceTime: Date;
  clearedAtTime?: Date;
  clearedAtSourceTime?: Date;
  source: AlertSource;
  recommendation?: string;
  resolutionReason?: string;
  severity: string;
  status: string;
  errorDetails?: AlertErrorDetails;
  detailedInformation?: { [propertyName: string]: string };
}

/**
 * @class
 * Initializes a new instance of the AlertFilter class.
 * @constructor
 * Filters that can be specified on the alert
 *
 * @property {string} [status] Status of the alert. Possible values include:
 * 'Active', 'Cleared'
 * @property {string} [severity] Severity of the alert. Possible values
 * include: 'Informational', 'Warning', 'Critical'
 * @property {string} [sourceType] Source of the alert. Possible values
 * include: 'Resource', 'Device'
 * @property {string} [sourceName] Source name of the alert
 * @property {date} [appearedOnTime] UTC time on which the alert appeared
 */
export interface AlertFilter {
  status?: string;
  severity?: string;
  sourceType?: string;
  sourceName?: string;
  appearedOnTime?: Date;
}

/**
 * @class
 * Initializes a new instance of the AlertSettings class.
 * @constructor
 * AlertSettings on the device which represents how alerts will be processed
 *
 * @property {string} emailNotification Value indicating whether user/admins
 * will receive emails when an alert condition occurs on the system. Possible
 * values include: 'Enabled', 'Disabled'
 * @property {string} notificationToServiceOwners Value indicating whether
 * service owners will receive emails when an alert condition occurs on the
 * system. Applicable only if emailNotification flag is Enabled. Possible
 * values include: 'Enabled', 'Disabled'
 * @property {string} alertNotificationCulture Culture setting to be used while
 * building alert emails. For eg: "en-US"
 * @property {array} [additionalRecipientEmailList] List of email addresses
 * (apart from admin/coadmin of subscription) to whom the alert emails need to
 * be sent
 */
export interface AlertSettings extends BaseModel {
  emailNotification: string;
  notificationToServiceOwners: string;
  alertNotificationCulture: string;
  additionalRecipientEmailList?: string[];
}

/**
 * @class
 * Initializes a new instance of the AsymmetricEncryptedSecret class.
 * @constructor
 * This class can be used as the Type for any secret entity represented as
 * Password, CertThumbprint, Algorithm. This class is intended to be used when
 * the secret is encrypted with an asymmetric key pair. The encryptionAlgorithm
 * field is mainly for future usage to potentially allow different entities
 * encrypted using different algorithms.
 *
 * @property {string} value The value of the secret itself. If the secret is in
 * plaintext then EncryptionAlgorithm will be none and EncryptionCertThumbprint
 * will be null.
 * @property {string} [encryptionCertificateThumbprint] Thumbprint certificate
 * that was used to encrypt "Value"
 * @property {string} encryptionAlgorithm Algorithm used to encrypt "Value".
 * Possible values include: 'None', 'AES256', 'RSAES_PKCS1_v_1_5'
 */
export interface AsymmetricEncryptedSecret {
  value: string;
  encryptionCertificateThumbprint?: string;
  encryptionAlgorithm: string;
}

/**
 * @class
 * Initializes a new instance of the AvailableProviderOperationDisplay class.
 * @constructor
 * Contains the localized display information for this particular operation /
 * action.
 * These value will be used by several clients for
 * (1) custom role definitions for RBAC;
 * (2) complex query filters for the event service; and (3) audit history /
 * records for management operations.
 *
 * @property {string} [provider] Gets or sets Provider
 * The localized friendly form of the resource provider name – it is expected
 * to also include the publisher/company responsible.
 * It should use Title Casing and begin with “Microsoft” for 1st party
 * services.
 * @property {string} [resource] Gets or sets Resource
 * The localized friendly form of the resource type related to this
 * action/operation – it should match the public documentation for the resource
 * provider.
 * It should use Title Casing – for examples, please refer to the “name”
 * section.
 * @property {string} [operation] Gets or sets Operation
 * The localized friendly name for the operation, as it should be shown to the
 * user.
 * It should be concise (to fit in drop downs) but clear (i.e.
 * self-documenting). It should use Title Casing and include the
 * entity/resource to which it applies.
 * @property {string} [description] Gets or sets Description
 * The localized friendly description for the operation, as it should be shown
 * to the user.
 * It should be thorough, yet concise – it will be used in tool tips and
 * detailed views.
 */
export interface AvailableProviderOperationDisplay {
  provider?: string;
  resource?: string;
  operation?: string;
  description?: string;
}

/**
 * @class
 * Initializes a new instance of the AvailableProviderOperation class.
 * @constructor
 * Class represents provider operation
 *
 * @property {string} [name] Gets or sets the name of the operation being
 * performed on this particular object
 * Return value format:
 * "{resourceProviderNamespace}/{resourceType}/{read|write|deletion|action}"
 * Eg: Microsoft.StorSimple/managers/devices/fileServers/read
 * Microsoft.StorSimple/managers/devices/alerts/clearAlerts/action
 * @property {object} [display] Gets or sets Display information
 * Contains the localized display information for this particular
 * operation/action
 * @property {string} [display.provider] Gets or sets Provider
 * The localized friendly form of the resource provider name – it is expected
 * to also include the publisher/company responsible.
 * It should use Title Casing and begin with “Microsoft” for 1st party
 * services.
 * @property {string} [display.resource] Gets or sets Resource
 * The localized friendly form of the resource type related to this
 * action/operation – it should match the public documentation for the resource
 * provider.
 * It should use Title Casing – for examples, please refer to the “name”
 * section.
 * @property {string} [display.operation] Gets or sets Operation
 * The localized friendly name for the operation, as it should be shown to the
 * user.
 * It should be concise (to fit in drop downs) but clear (i.e.
 * self-documenting). It should use Title Casing and include the
 * entity/resource to which it applies.
 * @property {string} [display.description] Gets or sets Description
 * The localized friendly description for the operation, as it should be shown
 * to the user.
 * It should be thorough, yet concise – it will be used in tool tips and
 * detailed views.
 * @property {string} [origin] Gets or sets Origin
 * The intended executor of the operation; governs the display of the operation
 * in the RBAC UX and the audit logs UX.
 * Default value is “user,system”
 * @property {object} [properties] Gets or sets Properties
 * Reserved for future use
 */
export interface AvailableProviderOperation {
  name?: string;
  display?: AvailableProviderOperationDisplay;
  origin?: string;
  properties?: any;
}

/**
 * @class
 * Initializes a new instance of the BackupElement class.
 * @constructor
 * Class represents BackupElement
 *
 * @property {number} sizeInBytes The size in bytes.
 * @property {string} endpointName The name of the endpoint.
 * @property {string} dataPolicy The data policy of backed up endpoint.
 * Possible values include: 'Invalid', 'Local', 'Tiered', 'Cloud'
 */
export interface BackupElement extends BaseModel {
  sizeInBytes: number;
  endpointName: string;
  dataPolicy: string;
}

/**
 * @class
 * Initializes a new instance of the Backup class.
 * @constructor
 * The backup.
 *
 * @property {string} [targetId] The path id of the target FileServer or
 * IscsiServer for which the backup was taken.
 * @property {string} [targetType] Type of target, FileServer or IscsiServer
 * @property {number} sizeInBytes The backup size in bytes.
 * @property {date} [createdTime] The time when the backup was created.
 * @property {date} [expirationTime] The time when the backup will expire.
 * @property {string} initiatedBy Indicates how the backup was initiated
 * "Manual | Scheduled". Possible values include: 'Manual', 'Scheduled'
 * @property {string} deviceId The Device Identifier.
 * @property {array} elements The backup elements.
 */
export interface Backup extends BaseModel {
  targetId?: string;
  targetType?: string;
  sizeInBytes: number;
  createdTime?: Date;
  expirationTime?: Date;
  initiatedBy: string;
  deviceId: string;
  elements: BackupElement[];
}

/**
 * @class
 * Initializes a new instance of the BackupFilter class.
 * @constructor
 * Backup OData filter class
 *
 * @property {string} [initiatedBy] Gets or sets InitiatedBy. Possible values
 * include: 'Manual', 'Scheduled'
 * @property {date} [createdTime] Gets or sets CreatedTime
 */
export interface BackupFilter {
  initiatedBy?: string;
  createdTime?: Date;
}

/**
 * @class
 * Initializes a new instance of the Time class.
 * @constructor
 * The Time.
 *
 * @property {number} hour The hour.
 * @property {number} minute The minute.
 */
export interface Time {
  hour: number;
  minute: number;
}

/**
 * @class
 * Initializes a new instance of the BackupScheduleGroup class.
 * @constructor
 * The Backup Schedule Group
 *
 * @property {object} startTime The start time. When this field is specified we
 * will generate Default GrandFather Father Son Backup Schedules.
 * @property {number} [startTime.hour] The hour.
 * @property {number} [startTime.minute] The minute.
 */
export interface BackupScheduleGroup extends BaseModel {
  startTime: Time;
}

/**
 * @class
 * Initializes a new instance of the ChapSettings class.
 * @constructor
 * Challenge-Handshake Authentical Protocol (CHAP) setting
 *
 * @property {object} password The chap password.
 * @property {string} [password.value] The value of the secret itself. If the
 * secret is in plaintext then EncryptionAlgorithm will be none and
 * EncryptionCertThumbprint will be null.
 * @property {string} [password.encryptionCertificateThumbprint] Thumbprint
 * certificate that was used to encrypt "Value"
 * @property {string} [password.encryptionAlgorithm] Algorithm used to encrypt
 * "Value". Possible values include: 'None', 'AES256', 'RSAES_PKCS1_v_1_5'
 */
export interface ChapSettings extends BaseModel {
  password: AsymmetricEncryptedSecret;
}

/**
 * @class
 * Initializes a new instance of the ClearAlertRequest class.
 * @constructor
 * Request for clearing the alert
 *
 * @property {string} [resolutionMessage] Resolution message while clearing the
 * request
 * @property {array} alerts List of alert Ids to be cleared
 */
export interface ClearAlertRequest {
  resolutionMessage?: string;
  alerts: string[];
}

/**
 * @class
 * Initializes a new instance of the FileShare class.
 * @constructor
 * The File Share.
 *
 * @property {string} [description] Description for file share
 * @property {string} shareStatus The Share Status. Possible values include:
 * 'Online', 'Offline'
 * @property {string} dataPolicy The data policy. Possible values include:
 * 'Invalid', 'Local', 'Tiered', 'Cloud'
 * @property {string} adminUser The user/group who will have full permission in
 * this share. Active directory email address. Example: xyz@contoso.com or
 * Contoso\xyz.
 * @property {number} provisionedCapacityInBytes The total provisioned capacity
 * in Bytes
 * @property {number} [usedCapacityInBytes] The used capacity in Bytes.
 * @property {number} [localUsedCapacityInBytes] The local used capacity in
 * Bytes.
 * @property {string} monitoringStatus The monitoring status. Possible values
 * include: 'Enabled', 'Disabled'
 */
export interface FileShare extends BaseModel {
  description?: string;
  shareStatus: string;
  dataPolicy: string;
  adminUser: string;
  provisionedCapacityInBytes: number;
  readonly usedCapacityInBytes?: number;
  readonly localUsedCapacityInBytes?: number;
  monitoringStatus: string;
}

/**
 * @class
 * Initializes a new instance of the ISCSIDisk class.
 * @constructor
 * The iscsi disk.
 *
 * @property {string} [description] The description.
 * @property {string} diskStatus The disk status. Possible values include:
 * 'Online', 'Offline'
 * @property {array} accessControlRecords The access control records.
 * @property {string} dataPolicy The data policy. Possible values include:
 * 'Invalid', 'Local', 'Tiered', 'Cloud'
 * @property {number} provisionedCapacityInBytes The provisioned capacity in
 * bytes.
 * @property {number} [usedCapacityInBytes] The used capacity in bytes.
 * @property {number} [localUsedCapacityInBytes] The local used capacity in
 * bytes.
 * @property {string} monitoringStatus The monitoring. Possible values include:
 * 'Enabled', 'Disabled'
 */
export interface ISCSIDisk extends BaseModel {
  description?: string;
  diskStatus: string;
  accessControlRecords: string[];
  dataPolicy: string;
  provisionedCapacityInBytes: number;
  readonly usedCapacityInBytes?: number;
  readonly localUsedCapacityInBytes?: number;
  monitoringStatus: string;
}

/**
 * @class
 * Initializes a new instance of the CloneRequest class.
 * @constructor
 * Clone Job Request Model.
 *
 * @property {string} targetDeviceId DeviceId of the device which will act as
 * the Clone target
 * @property {string} targetAccessPointId Accesspoint Id on which clone job
 * will performed.
 * @property {string} newEndpointName Name of new endpoint which will created
 * as part of clone job.
 * @property {object} [share] Share Object.
 * @property {string} [share.description] Description for file share
 * @property {string} [share.shareStatus] The Share Status. Possible values
 * include: 'Online', 'Offline'
 * @property {string} [share.dataPolicy] The data policy. Possible values
 * include: 'Invalid', 'Local', 'Tiered', 'Cloud'
 * @property {string} [share.adminUser] The user/group who will have full
 * permission in this share. Active directory email address. Example:
 * xyz@contoso.com or Contoso\xyz.
 * @property {number} [share.provisionedCapacityInBytes] The total provisioned
 * capacity in Bytes
 * @property {number} [share.usedCapacityInBytes] The used capacity in Bytes.
 * @property {number} [share.localUsedCapacityInBytes] The local used capacity
 * in Bytes.
 * @property {string} [share.monitoringStatus] The monitoring status. Possible
 * values include: 'Enabled', 'Disabled'
 * @property {object} [disk] Disk Object
 * @property {string} [disk.description] The description.
 * @property {string} [disk.diskStatus] The disk status. Possible values
 * include: 'Online', 'Offline'
 * @property {array} [disk.accessControlRecords] The access control records.
 * @property {string} [disk.dataPolicy] The data policy. Possible values
 * include: 'Invalid', 'Local', 'Tiered', 'Cloud'
 * @property {number} [disk.provisionedCapacityInBytes] The provisioned
 * capacity in bytes.
 * @property {number} [disk.usedCapacityInBytes] The used capacity in bytes.
 * @property {number} [disk.localUsedCapacityInBytes] The local used capacity
 * in bytes.
 * @property {string} [disk.monitoringStatus] The monitoring. Possible values
 * include: 'Enabled', 'Disabled'
 */
export interface CloneRequest {
  targetDeviceId: string;
  targetAccessPointId: string;
  newEndpointName: string;
  share?: FileShare;
  disk?: ISCSIDisk;
}

/**
 * @class
 * Initializes a new instance of the DeviceDetails class.
 * @constructor
 * Class containing more granular details about the device
 *
 * @property {number} [endpointCount] Total number of endpoints that are
 * currently on the device ( i.e. number of shares on FileServer or number of
 * volumes on IscsiServer)
 * @property {number} [totalStorageInBytes] Total storage available on the
 * device in bytes.
 * @property {number} [totalLocalStorageInBytes] Total local storage capacity
 * in device in bytes.
 * @property {number} [provisionedStorageInBytes] Storage in bytes that has
 * been provisioned on the device including both local and cloud
 * @property {number} [provisionedLocalStorageInBytes] Storage in bytes that
 * has been provisioned locally on the device
 * @property {number} [usingStorageInBytes] Storage that is being currently
 * used in bytes including both local and cloud
 * @property {number} [usingLocalStorageInBytes] Local Storage that is being
 * currently used in bytes
 * @property {number} [totalBackupSizeInBytes] Total size taken up by backups
 * in bytes
 * @property {number} [availableStorageInBytes] Total pending available storage
 * on the device in bytes
 * @property {number} [availableLocalStorageInBytes] Local pending storage
 * available on the device in bytes
 */
export interface DeviceDetails {
  endpointCount?: number;
  totalStorageInBytes?: number;
  totalLocalStorageInBytes?: number;
  provisionedStorageInBytes?: number;
  provisionedLocalStorageInBytes?: number;
  usingStorageInBytes?: number;
  usingLocalStorageInBytes?: number;
  totalBackupSizeInBytes?: number;
  availableStorageInBytes?: number;
  availableLocalStorageInBytes?: number;
}

/**
 * @class
 * Initializes a new instance of the Device class.
 * @constructor
 * Represents a StorSimple device object along with its properties
 *
 * @property {date} [activationTime] The UTC time at which the device was
 * activated
 * @property {array} [allowedDeviceOperations] Operations that are allowed on
 * the device based on its current state
 * @property {string} [culture] Language culture setting on the device. For eg:
 * "en-US"
 * @property {array} [deviceCapabilities] Device can be configured either as
 * FileServer or IscsiServer
 * @property {string} [deviceDescription] Short description given for the
 * device
 * @property {string} [domainName] Fully qualified name of the domain to which
 * the device is attached
 * @property {string} [deviceSoftwareVersion] Version number of the software
 * running on the device
 * @property {string} [friendlySoftwareName] Friendly name for the software
 * version
 * @property {string} [deviceConfigurationStatus] "Complete" if the device has
 * been successfully registered as File/IscsiServer and the creation of
 * share/volume is complete, "Pending" if the device is only registered but the
 * creation of share/volume is complete is still pending. Possible values
 * include: 'Complete', 'Pending'
 * @property {string} [modelDescription] Name of the device model
 * @property {string} [status] Current status of the device. Possible values
 * include: 'Unknown', 'Online', 'Offline', 'RequiresAttention',
 * 'MaintenanceMode', 'Creating', 'Provisioning', 'Deleted', 'ReadyToSetup',
 * 'Deactivated', 'Deactivating'
 * @property {string} [deviceType] Type of the device. Possible values include:
 * 'Invalid', 'Appliance', 'VirtualAppliance',
 * 'Series9000OnPremVirtualAppliance', 'Series9000VirtualAppliance',
 * 'Series9000PhysicalAppliance'
 * @property {object} [details] subclass containing more storage-related
 * information about the device. This field will be populated only if the get
 * call is made with $expand = details.
 * @property {number} [details.endpointCount] Total number of endpoints that
 * are currently on the device ( i.e. number of shares on FileServer or number
 * of volumes on IscsiServer)
 * @property {number} [details.totalStorageInBytes] Total storage available on
 * the device in bytes.
 * @property {number} [details.totalLocalStorageInBytes] Total local storage
 * capacity in device in bytes.
 * @property {number} [details.provisionedStorageInBytes] Storage in bytes that
 * has been provisioned on the device including both local and cloud
 * @property {number} [details.provisionedLocalStorageInBytes] Storage in bytes
 * that has been provisioned locally on the device
 * @property {number} [details.usingStorageInBytes] Storage that is being
 * currently used in bytes including both local and cloud
 * @property {number} [details.usingLocalStorageInBytes] Local Storage that is
 * being currently used in bytes
 * @property {number} [details.totalBackupSizeInBytes] Total size taken up by
 * backups in bytes
 * @property {number} [details.availableStorageInBytes] Total pending available
 * storage on the device in bytes
 * @property {number} [details.availableLocalStorageInBytes] Local pending
 * storage available on the device in bytes
 */
export interface Device extends BaseModel {
  activationTime?: Date;
  allowedDeviceOperations?: string[];
  culture?: string;
  deviceCapabilities?: string[];
  deviceDescription?: string;
  domainName?: string;
  deviceSoftwareVersion?: string;
  friendlySoftwareName?: string;
  deviceConfigurationStatus?: string;
  modelDescription?: string;
  status?: string;
  deviceType?: string;
  details?: DeviceDetails;
}

/**
 * @class
 * Initializes a new instance of the DevicePatch class.
 * @constructor
 * Class that represents the Input for the PATCH call on Device. Currently the
 * only patchable property on device is "DeviceDescription"
 *
 * @property {string} [deviceDescription] Short description given for the
 * device
 */
export interface DevicePatch {
  deviceDescription?: string;
}

/**
 * @class
 * Initializes a new instance of the EncryptionSettings class.
 * @constructor
 * The EncryptionSettings
 *
 * @property {string} encryptionStatus The encryption status which indicates if
 * encryption is enabled or not. Possible values include: 'Enabled', 'Disabled'
 * @property {string} keyRolloverStatus The key rollover status which indicates
 * if key rollover is required or not. If secrets encryption has been upgraded,
 * then it requires key rollover. Possible values include: 'Required',
 * 'NotRequired'
 */
export interface EncryptionSettings extends BaseModel {
  encryptionStatus: string;
  keyRolloverStatus: string;
}

/**
 * @class
 * Initializes a new instance of the Message class.
 * @constructor
 * @property {string} [language]
 * @property {string} [value]
 */
export interface Message {
  language?: string;
  value?: string;
}

/**
 * @class
 * Initializes a new instance of the Item class.
 * @constructor
 * @property {string} key
 * @property {string} value
 */
export interface Item {
  key: string;
  value: string;
}

/**
 * @class
 * Initializes a new instance of the ErrorModel class.
 * @constructor
 * @property {string} errorCode
 * @property {object} message
 * @property {string} [message.language]
 * @property {string} [message.value]
 * @property {array} [values]
 */
export interface ErrorModel {
  errorCode: string;
  message: Message;
  values?: Item[];
}

/**
 * @class
 * Initializes a new instance of the FailoverRequest class.
 * @constructor
 * The Failover request object.
 *
 * @property {array} [accesspointIds]
 * @property {string} [targetDeviceId]
 * @property {boolean} [skipValidation]
 * @property {boolean} [keepSourceDevice]
 */
export interface FailoverRequest {
  accesspointIds?: string[];
  targetDeviceId?: string;
  skipValidation?: boolean;
  keepSourceDevice?: boolean;
}

/**
 * @class
 * Initializes a new instance of the FileServer class.
 * @constructor
 * The file server.
 *
 * @property {string} domainName Domain of the file server
 * @property {string} storageDomainId The storage domain id.
 * @property {string} backupScheduleGroupId The backup policy id.
 * @property {string} [description] The description of the file server
 */
export interface FileServer extends BaseModel {
  domainName: string;
  storageDomainId: string;
  backupScheduleGroupId: string;
  description?: string;
}

/**
 * @class
 * Initializes a new instance of the IPConfig class.
 * @constructor
 * Details related to the IP address configuration
 *
 * @property {string} ipAddress The ipaddress of the network adapter, either
 * ipv4 or ipv6.
 * @property {number} [prefixLength] The prefix length of the network adapter.
 * @property {string} gateway The gateway of the network adapter.
 */
export interface IPConfig {
  ipAddress: string;
  prefixLength?: number;
  gateway: string;
}

/**
 * @class
 * Initializes a new instance of the ISCSIServer class.
 * @constructor
 * The iscsi server.
 *
 * @property {string} storageDomainId The storage domain id.
 * @property {string} backupScheduleGroupId The backup policy id.
 * @property {string} [description] The description.
 * @property {string} [chapId] The chap id.
 * @property {string} [reverseChapId] The reverse chap id.
 */
export interface ISCSIServer extends BaseModel {
  storageDomainId: string;
  backupScheduleGroupId: string;
  description?: string;
  chapId?: string;
  reverseChapId?: string;
}

/**
 * @class
 * Initializes a new instance of the JobErrorItem class.
 * @constructor
 * The job error items.
 *
 * @property {array} [recommendations] The recommended actions.
 * @property {string} code The code intended for programmatic access
 * @property {string} message The message intended to describe the error in
 * detail
 */
export interface JobErrorItem {
  recommendations?: string[];
  code: string;
  message: string;
}

/**
 * @class
 * Initializes a new instance of the JobErrorDetails class.
 * @constructor
 * The job error information containing List of JobErrorItem.
 *
 * @property {array} [errorDetails] The error details.
 * @property {string} code The code intended for programmatic access
 * @property {string} message The message intended to describe the error in
 * detail
 */
export interface JobErrorDetails {
  errorDetails?: JobErrorItem[];
  code: string;
  message: string;
}

/**
 * @class
 * Initializes a new instance of the JobStage class.
 * @constructor
 * Contains details about the multiple job stages of a job
 *
 * @property {string} [message] The message of the job stage.
 * @property {string} stageStatus The stage status. Possible values include:
 * 'Invalid', 'Running', 'Succeeded', 'Failed', 'Canceled', 'Paused',
 * 'Scheduled'
 * @property {string} [detail] The details of the stage.
 * @property {string} [errorCode] The error code of the stage if any.
 */
export interface JobStage {
  message?: string;
  stageStatus: string;
  detail?: string;
  errorCode?: string;
}

/**
 * @class
 * Initializes a new instance of the JobStats class.
 * @constructor
 * Stats that are available for all jobs in common
 *
 * @property {number} [completedWorkItemCount] Completed work item count.
 * @property {number} [totalWorkItemCount] Total work item count.
 * @property {number} [estimatedTimeRemaining] The estimated time remaining.
 */
export interface JobStats {
  completedWorkItemCount?: number;
  totalWorkItemCount?: number;
  estimatedTimeRemaining?: number;
}

/**
 * @class
 * Initializes a new instance of the UpdateDownloadProgress class.
 * @constructor
 * details available during the download
 *
 * @property {string} [downloadPhase] The download phase. Possible values
 * include: 'Unknown', 'Initializing', 'Downloading', 'Verifying'
 * @property {number} [percentComplete] Percentage of completion.
 * @property {number} [totalBytesToDownload] Total bytes to download.
 * @property {number} [totalBytesDownloaded] Total bytes downloaded.
 * @property {number} [numberOfUpdatesToDownload] Number of updates to
 * download.
 * @property {number} [numberOfUpdatesDownloaded] Number of updates downloaded.
 */
export interface UpdateDownloadProgress {
  downloadPhase?: string;
  percentComplete?: number;
  totalBytesToDownload?: number;
  totalBytesDownloaded?: number;
  numberOfUpdatesToDownload?: number;
  numberOfUpdatesDownloaded?: number;
}

/**
 * @class
 * Initializes a new instance of the UpdateInstallProgress class.
 * @constructor
 * Class representing the progress during installation of updates
 *
 * @property {number} [percentComplete] Percentage of completion.
 * @property {number} [numberOfUpdatesToInstall] Number of updates to install.
 * @property {number} [numberOfUpdatesInstalled] Number of updates installed.
 */
export interface UpdateInstallProgress {
  percentComplete?: number;
  numberOfUpdatesToInstall?: number;
  numberOfUpdatesInstalled?: number;
}

/**
 * @class
 * Initializes a new instance of the Job class.
 * @constructor
 * The Job.
 *
 * @property {string} status Current status of the job. Possible values
 * include: 'Invalid', 'Running', 'Succeeded', 'Failed', 'Canceled', 'Paused',
 * 'Scheduled'
 * @property {date} [startTime] The UTC time at which the job was started
 * @property {date} [endTime] The UTC time at which the job completed
 * @property {number} percentComplete The percentage of the job that is already
 * complete
 * @property {object} [error] The Error details.
 * @property {array} [error.errorDetails] The error details.
 * @property {string} [error.code] The code intended for programmatic access
 * @property {string} [error.message] The message intended to describe the
 * error in detail
 * @property {string} jobType Type of the job. Possible values include:
 * 'Backup', 'Clone', 'Failover', 'DownloadUpdates', 'InstallUpdates'
 * @property {string} [targetId] Id of the object that is created by the job
 * @property {string} [entityId] The entity identifier for which the job ran.
 * @property {string} [entityType] The entity type for which the job ran.
 * @property {array} [jobStages] The job stages.
 * @property {string} [deviceId] The device id in which the job is currently
 * running
 * @property {boolean} [isCancellable] Represents whether the job is
 * cancellable or not
 * @property {object} [stats] stats properties for the job
 * @property {number} [stats.completedWorkItemCount] Completed work item count.
 * @property {number} [stats.totalWorkItemCount] Total work item count.
 * @property {number} [stats.estimatedTimeRemaining] The estimated time
 * remaining.
 * @property {string} [targetType] The target type of the backup. Possible
 * values include: 'FileServer', 'DiskServer'
 * @property {string} [sourceDeviceId] The source device identifier of the
 * failover job.
 * @property {date} [backupPointInTime] The time of the backup used for the
 * failover.
 * @property {object} [downloadProgress] The download progress.
 * @property {string} [downloadProgress.downloadPhase] The download phase.
 * Possible values include: 'Unknown', 'Initializing', 'Downloading',
 * 'Verifying'
 * @property {number} [downloadProgress.percentComplete] Percentage of
 * completion.
 * @property {number} [downloadProgress.totalBytesToDownload] Total bytes to
 * download.
 * @property {number} [downloadProgress.totalBytesDownloaded] Total bytes
 * downloaded.
 * @property {number} [downloadProgress.numberOfUpdatesToDownload] Number of
 * updates to download.
 * @property {number} [downloadProgress.numberOfUpdatesDownloaded] Number of
 * updates downloaded.
 * @property {object} [installProgress] The install progress.
 * @property {number} [installProgress.percentComplete] Percentage of
 * completion.
 * @property {number} [installProgress.numberOfUpdatesToInstall] Number of
 * updates to install.
 * @property {number} [installProgress.numberOfUpdatesInstalled] Number of
 * updates installed.
 */
export interface Job extends BaseModel {
  status: string;
  startTime?: Date;
  endTime?: Date;
  percentComplete: number;
  error?: JobErrorDetails;
  jobType: string;
  targetId?: string;
  entityId?: string;
  entityType?: string;
  jobStages?: JobStage[];
  deviceId?: string;
  isCancellable?: boolean;
  stats?: JobStats;
  targetType?: string;
  sourceDeviceId?: string;
  backupPointInTime?: Date;
  downloadProgress?: UpdateDownloadProgress;
  installProgress?: UpdateInstallProgress;
}

/**
 * @class
 * Initializes a new instance of the JobFilter class.
 * @constructor
 * Filters that can be specified for the job
 *
 * @property {string} jobType The job type. Possible values include: 'Backup',
 * 'Clone', 'Failover', 'DownloadUpdates', 'InstallUpdates'
 * @property {string} status The job status. Possible values include:
 * 'Invalid', 'Running', 'Succeeded', 'Failed', 'Canceled', 'Paused',
 * 'Scheduled'
 * @property {date} [startTime] The start time of the job.
 */
export interface JobFilter {
  jobType: string;
  status: string;
  startTime?: Date;
}

/**
 * @class
 * Initializes a new instance of the ManagerIntrinsicSettings class.
 * @constructor
 * Intrinsic settings which refers to the type of the Storsimple manager
 *
 * @property {string} type Refers to the type of the StorSimple Manager.
 * Possible values include: 'GardaV1', 'HelsinkiV1'
 */
export interface ManagerIntrinsicSettings {
  type: string;
}

/**
 * @class
 * Initializes a new instance of the ManagerSku class.
 * @constructor
 * The Sku.
 *
 */
export interface ManagerSku {
}

/**
 * @class
 * Initializes a new instance of the Resource class.
 * @constructor
 * The Azure Resource.
 *
 * @property {string} [id] The Resource Id
 * @property {string} [name] The Resource Name
 * @property {string} [type] The Resource type
 * @property {string} location The Geo location of the Manager
 * @property {object} [tags] Tags attached to the Manager
 */
export interface Resource extends BaseResource {
  readonly id?: string;
  readonly name?: string;
  readonly type?: string;
  location: string;
  tags?: { [propertyName: string]: string };
}

/**
 * @class
 * Initializes a new instance of the Manager class.
 * @constructor
 * The StorSimple Manager
 *
 * @property {object} [cisIntrinsicSettings] Specifies if the Manager is Garda
 * or Helsinki
 * @property {string} [cisIntrinsicSettings.type] Refers to the type of the
 * StorSimple Manager. Possible values include: 'GardaV1', 'HelsinkiV1'
 * @property {string} [provisioningState] Specifies the state of the resource
 * as it is getting provisioned. Value of "Succeeded" means the Manager was
 * successfully created
 * @property {string} [etag] ETag of the Manager
 */
export interface Manager extends Resource {
  cisIntrinsicSettings?: ManagerIntrinsicSettings;
  readonly provisioningState?: string;
  etag?: string;
}

/**
 * @class
 * Initializes a new instance of the ManagerExtendedInfo class.
 * @constructor
 * The extended info of the manager.
 *
 * @property {string} [version] Represents the version of the ExtendedInfo
 * object being persisted
 * @property {string} integrityKey Represents the CIK of the resource
 * @property {string} [encryptionKey] Represents the CEK of the resource
 * @property {string} [encryptionKeyThumbprint] Represents the Cert thumbprint
 * that was used to encrypt the CEK
 * @property {string} [portalCertificateThumbprint] Represents the portal
 * thumbprint which can be used optionally to encrypt the entire data before
 * storing it.
 * @property {string} algorithm Represents the encryption algorithm used to
 * encrypt the other keys. None - if EncryptionKey is saved in plain text
 * format. AlgorithmName - if encryption is used
 * @property {string} [etag] ETag of the Resource
 */
export interface ManagerExtendedInfo extends BaseModel {
  version?: string;
  integrityKey: string;
  encryptionKey?: string;
  encryptionKeyThumbprint?: string;
  portalCertificateThumbprint?: string;
  algorithm: string;
  etag?: string;
}

/**
 * @class
 * Initializes a new instance of the ManagerPatch class.
 * @constructor
 * The StorSimple Manager patch.
 *
 * @property {object} [tags] The tags attached to the StorSimple Manager.
 */
export interface ManagerPatch {
  tags?: { [propertyName: string]: string };
}

/**
 * @class
 * Initializes a new instance of the MetricAvailablity class.
 * @constructor
 * Metric availability specifies the time grain (aggregation interval or
 * frequency) and the retention period for that time grain
 *
 * @property {string} timeGrain The time grain, specifies the aggregation
 * interval for the metric.
 * @property {string} retention The retention period for the metric at the
 * specified timegrain
 */
export interface MetricAvailablity {
  timeGrain: string;
  retention: string;
}

/**
 * @class
 * Initializes a new instance of the MetricData class.
 * @constructor
 * The metric data.
 *
 * @property {date} timeStamp The time when the metric data is fetched
 * @property {number} sum The sum of all the samples available in the given
 * instance of time for the specific metric data
 * @property {number} count The count of samples of the metric data available
 * for the given instance
 * @property {number} average The average of all sample for the given instance
 * @property {number} minimum The minimum of all samples available
 * @property {number} maximum The maximum of all samples available
 */
export interface MetricData {
  timeStamp: Date;
  sum: number;
  count: number;
  average: number;
  minimum: number;
  maximum: number;
}

/**
 * @class
 * Initializes a new instance of the MetricName class.
 * @constructor
 * The name of the metric
 *
 * @property {string} value Name of the metric
 * @property {string} localizedValue Localized name of the metric
 */
export interface MetricName {
  value: string;
  localizedValue: string;
}

/**
 * @class
 * Initializes a new instance of the MetricDimension class.
 * @constructor
 * Metric dimension
 *
 * @property {string} name Metric dimension name
 * @property {string} value Metric dimension values
 */
export interface MetricDimension {
  name: string;
  value: string;
}

/**
 * @class
 * Initializes a new instance of the MetricDefinition class.
 * @constructor
 * Monitoring metric definition represents the metadata of the metrics.
 *
 * @property {object} name The metric name
 * @property {string} [name.value] Name of the metric
 * @property {string} [name.localizedValue] Localized name of the metric
 * @property {string} unit The metric unit. Possible values include: 'Bytes',
 * 'BytesPerSecond', 'Count', 'CountPerSecond', 'Percent', 'Seconds'
 * @property {string} primaryAggregationType The metric aggregation type.
 * Possible values include: 'Average', 'Last', 'Maximum', 'Minimum', 'None',
 * 'Total'
 * @property {string} resourceId The metric source id
 * @property {array} metricAvailabilities The available metric granularities
 * @property {array} dimensions The supported dimensions
 * @property {string} type The metric definition type
 */
export interface MetricDefinition {
  name: MetricName;
  unit: string;
  primaryAggregationType: string;
  resourceId: string;
  metricAvailabilities: MetricAvailablity[];
  dimensions: MetricDimension[];
  type: string;
}

/**
 * @class
 * Initializes a new instance of the MetricNameFilter class.
 * @constructor
 * Class representing the name filter to be passed while fetching metrics
 *
 * @property {string} [value] The value.
 */
export interface MetricNameFilter {
  value?: string;
}

/**
 * @class
 * Initializes a new instance of the MetricFilter class.
 * @constructor
 * class representing the filters to be passed while fetching metrics
 *
 * @property {object} [name] filter for name property
 * @property {string} [name.value] The value.
 * @property {date} [startTime] starttime for fetching metrics
 * @property {date} [endTime] endtime for fetching metrics
 * @property {string} [timeGrain] timegrain of the metrics
 */
export interface MetricFilter {
  name?: MetricNameFilter;
  startTime?: Date;
  endTime?: Date;
  timeGrain?: string;
}

/**
 * @class
 * Initializes a new instance of the Metrics class.
 * @constructor
 * Monitoring metric
 *
 * @property {string} resourceId The id of metric source
 * @property {date} startTime The metric start time
 * @property {date} endTime The metric end time
 * @property {string} timeGrain The time grain, time grain indicates frequency
 * of the metric data
 * @property {string} primaryAggregation The metric aggregation type. Possible
 * values include: 'Average', 'Last', 'Maximum', 'Minimum', 'None', 'Total'
 * @property {object} name The name of the metrics
 * @property {string} [name.value] Name of the metric
 * @property {string} [name.localizedValue] Localized name of the metric
 * @property {array} dimensions The Metric dimension which indicates the source
 * of the metric
 * @property {string} unit The unit of the metric data. Possible values
 * include: 'Bytes', 'BytesPerSecond', 'Count', 'CountPerSecond', 'Percent',
 * 'Seconds'
 * @property {string} type The Type of the metric data
 * @property {array} values The metric data
 */
export interface Metrics {
  resourceId: string;
  startTime: Date;
  endTime: Date;
  timeGrain: string;
  primaryAggregation: string;
  name: MetricName;
  dimensions: MetricDimension[];
  unit: string;
  type: string;
  values: MetricData[];
}

/**
 * @class
 * Initializes a new instance of the NetworkAdapter class.
 * @constructor
 * Represents a networkAdapter in a particular node.
 *
 * @property {string} networkAdapterName The name of the network adapter.
 * @property {object} [iPv4Info] The ipv4 configuration of the network adapter.
 * @property {string} [iPv4Info.ipAddress] The ipaddress of the network
 * adapter, either ipv4 or ipv6.
 * @property {number} [iPv4Info.prefixLength] The prefix length of the network
 * adapter.
 * @property {string} [iPv4Info.gateway] The gateway of the network adapter.
 * @property {object} [iPv6Info] The ipv6 configuration of the network adapter.
 * @property {string} [iPv6Info.ipAddress] The ipaddress of the network
 * adapter, either ipv4 or ipv6.
 * @property {number} [iPv6Info.prefixLength] The prefix length of the network
 * adapter.
 * @property {string} [iPv6Info.gateway] The gateway of the network adapter.
 * @property {string} dhcpStatus Represents state of DHCP. Possible values
 * include: 'Enabled', 'Disabled'
 * @property {number} [linkSpeed] The speed of the network adapter.
 */
export interface NetworkAdapter {
  networkAdapterName: string;
  iPv4Info?: IPConfig;
  iPv6Info?: IPConfig;
  dhcpStatus: string;
  linkSpeed?: number;
}

/**
 * @class
 * Initializes a new instance of the NodeNetwork class.
 * @constructor
 * Represents a single node in a device.
 *
 * @property {array} networkAdapters The array of network adapters in the node.
 */
export interface NodeNetwork {
  networkAdapters: NetworkAdapter[];
}

/**
 * @class
 * Initializes a new instance of the NetworkSettings class.
 * @constructor
 * The NetworkSettings of a device
 *
 * @property {string} primaryDnsServer The Primary DNS server for the device
 * @property {string} [secondaryDnsServer] The secondary DNS server for the
 * device
 * @property {array} nodeNetworks The NetworkAdapters under each node of the
 * device.
 */
export interface NetworkSettings extends BaseModel {
  primaryDnsServer: string;
  secondaryDnsServer?: string;
  nodeNetworks: NodeNetwork[];
}

/**
 * @class
 * Initializes a new instance of the SecuritySettings class.
 * @constructor
 * The SecuritySettings of a device
 *
 * @property {object} deviceAdminPassword Device administrator password as an
 * encrypted string (encrypted using RSA PKCS #1) is used to log into the
 * local web UI of the device. Actual password could have at least 8 characters
 * that are a combination of  uppercase, lowercase, numeric, and special
 * characters
 * @property {string} [deviceAdminPassword.value] The value of the secret
 * itself. If the secret is in plaintext then EncryptionAlgorithm will be none
 * and EncryptionCertThumbprint will be null.
 * @property {string} [deviceAdminPassword.encryptionCertificateThumbprint]
 * Thumbprint certificate that was used to encrypt "Value"
 * @property {string} [deviceAdminPassword.encryptionAlgorithm] Algorithm used
 * to encrypt "Value". Possible values include: 'None', 'AES256',
 * 'RSAES_PKCS1_v_1_5'
 */
export interface SecuritySettings extends BaseModel {
  deviceAdminPassword: AsymmetricEncryptedSecret;
}

/**
 * @class
 * Initializes a new instance of the SendTestAlertEmailRequest class.
 * @constructor
 * Request for sending test alert email
 *
 * @property {array} emailList List of emails to send the test alerts
 */
export interface SendTestAlertEmailRequest {
  emailList: string[];
}

/**
 * @class
 * Initializes a new instance of the StorageAccountCredential class.
 * @constructor
 * The storage account credential
 *
 * @property {string} cloudType The cloud service provider. Possible values
 * include: 'Azure', 'S3', 'S3_RRS', 'OpenStack', 'HP'
 * @property {string} endPoint The storage endpoint
 * @property {string} login The storage account login
 * @property {string} [location] The storage account's geo location
 * @property {string} enableSSL SSL needs to be enabled or not. Possible values
 * include: 'Enabled', 'Disabled'
 * @property {object} [accessKey] The details of the storage account password
 * @property {string} [accessKey.value] The value of the secret itself. If the
 * secret is in plaintext then EncryptionAlgorithm will be none and
 * EncryptionCertThumbprint will be null.
 * @property {string} [accessKey.encryptionCertificateThumbprint] Thumbprint
 * certificate that was used to encrypt "Value"
 * @property {string} [accessKey.encryptionAlgorithm] Algorithm used to encrypt
 * "Value". Possible values include: 'None', 'AES256', 'RSAES_PKCS1_v_1_5'
 */
export interface StorageAccountCredential extends BaseModel {
  cloudType: string;
  endPoint: string;
  login: string;
  location?: string;
  enableSSL: string;
  accessKey?: AsymmetricEncryptedSecret;
}

/**
 * @class
 * Initializes a new instance of the StorageDomain class.
 * @constructor
 * The storage domain.
 *
 * @property {array} storageAccountCredentialIds The storage account
 * credentials.
 * @property {object} [encryptionKey] The encryption key used to encrypt the
 * data. This is a user secret.
 * @property {string} [encryptionKey.value] The value of the secret itself. If
 * the secret is in plaintext then EncryptionAlgorithm will be none and
 * EncryptionCertThumbprint will be null.
 * @property {string} [encryptionKey.encryptionCertificateThumbprint]
 * Thumbprint certificate that was used to encrypt "Value"
 * @property {string} [encryptionKey.encryptionAlgorithm] Algorithm used to
 * encrypt "Value". Possible values include: 'None', 'AES256',
 * 'RSAES_PKCS1_v_1_5'
 * @property {string} encryptionStatus The encryption status "Enabled |
 * Disabled". Possible values include: 'Enabled', 'Disabled'
 */
export interface StorageDomain extends BaseModel {
  storageAccountCredentialIds: string[];
  encryptionKey?: AsymmetricEncryptedSecret;
  encryptionStatus: string;
}

/**
 * @class
 * Initializes a new instance of the SymmetricEncryptedSecret class.
 * @constructor
 * This class can be used as the Type for any secret entity represented as
 * Value, ValueCertificateThumbprint, EncryptionAlgorithm. In this case,
 * "Value" is a secret and the "valueThumbprint" represents the certificate
 * thumbprint of the value. The algorithm field is mainly for future usage to
 * potentially allow different entities encrypted using different algorithms.
 *
 * @property {string} value The value of the secret itself. If the secret is in
 * plaintext or null then EncryptionAlgorithm will be none
 * @property {string} [valueCertificateThumbprint] Thumbprint cert that was
 * used to encrypt "Value"
 * @property {string} encryptionAlgorithm Algorithm used to encrypt "Value".
 * Possible values include: 'None', 'AES256', 'RSAES_PKCS1_v_1_5'
 */
export interface SymmetricEncryptedSecret {
  value: string;
  valueCertificateThumbprint?: string;
  encryptionAlgorithm: string;
}

/**
 * @class
 * Initializes a new instance of the TimeSettings class.
 * @constructor
 * The TimeSettings of a device
 *
 * @property {string} timeZone The timezone of device, like '(UTC -06:00)
 * Central America'
 * @property {string} primaryTimeServer The primary Network Time Protocol (NTP)
 * server name, like 'time.windows.com'.
 * @property {string} [secondaryTimeServer] The secondary Network Time Protocol
 * (NTP) server name, like 'time.contoso.com'. It's optional.
 */
export interface TimeSettings extends BaseModel {
  timeZone: string;
  primaryTimeServer: string;
  secondaryTimeServer?: string;
}

/**
 * @class
 * Initializes a new instance of the Updates class.
 * @constructor
 * The updates profile
 *
 * @property {string} [deviceVersion] The current Device version.
 * @property {date} [deviceLastScannedTime] The last time when the device did
 * an update scan.
 * @property {boolean} [regularUpdatesAvailable] Set to true if regular updates
 * were detected for the current version of the device.
 * @property {boolean} [rebootRequiredForInstall] Set to true if
 * RegularUpdatesAvailable is true and if atleast one of the updateItems
 * detected has needs a reboot to install.
 * @property {number} [totalItemsPendingForDownload] The total number of items
 * pending for download.
 * @property {number} [totalItemsPendingForInstall] The total number of items
 * pending for install.
 * @property {string} [status] The current update operation. Possible values
 * include: 'Idle', 'Scanning', 'Downloading', 'Installing'
 * @property {date} [lastCompletedScanTime] The time when the last scan job was
 * completed (success|cancelled|failed) on the device.
 * @property {date} [lastCompletedDownloadJobTime] The time when the last
 * Download job was completed (success|cancelled|failed) on the device.
 * @property {date} [lastCompletedInstallJobTime] The time when the last
 * Install job was completed (success|cancelled|failed) on the device.
 * @property {string} [inProgressDownloadJobId] If a download is in progress,
 * this field contains the JobId of that particular download job
 * @property {string} [inProgressInstallJobId] If an install is in progress,
 * this field contains the JobId of that particular install job
 * @property {date} [inProgressScanStartedTime] The time when the currently
 * running scan (if any) started
 * @property {date} [inProgressDownloadJobStartedTime] The time when the
 * currently running download (if any) started
 * @property {date} [inProgressInstallJobStartedTime] The time when the
 * currently running install (if any) started
 */
export interface Updates extends BaseModel {
  deviceVersion?: string;
  deviceLastScannedTime?: Date;
  regularUpdatesAvailable?: boolean;
  rebootRequiredForInstall?: boolean;
  totalItemsPendingForDownload?: number;
  totalItemsPendingForInstall?: number;
  status?: string;
  lastCompletedScanTime?: Date;
  lastCompletedDownloadJobTime?: Date;
  lastCompletedInstallJobTime?: Date;
  inProgressDownloadJobId?: string;
  inProgressInstallJobId?: string;
  inProgressScanStartedTime?: Date;
  inProgressDownloadJobStartedTime?: Date;
  inProgressInstallJobStartedTime?: Date;
}

/**
 * @class
 * Initializes a new instance of the UploadCertificateRequest class.
 * @constructor
 * Upload Certificate Request to IDM
 *
 * @property {string} [authType] Specify the Authentication type. Possible
 * values include: 'Invalid', 'AccessControlService', 'AzureActiveDirectory'
 * @property {string} certificate Gets or sets the base64 encoded certificate
 * raw data string
 * @property {string} [contractVersion] Gets ContractVersion. Possible values
 * include: 'InvalidVersion', 'V2011_09', 'V2012_02', 'V2012_05', 'V2012_12',
 * 'V2013_04', 'V2013_10', 'V2013_11', 'V2014_04', 'V2014_06', 'V2014_07',
 * 'V2014_09', 'V2014_10', 'V2014_12', 'V2015_01', 'V2015_02', 'V2015_04',
 * 'V2015_05', 'V2015_06', 'V2015_07', 'V2015_08', 'V2015_10', 'V2015_12',
 * 'V2016_01', 'V2016_02', 'V2016_04', 'V2016_05', 'V2016_07', 'V2016_08'
 */
export interface UploadCertificateRequest {
  authType?: string;
  certificate: string;
  readonly contractVersion?: string;
}

/**
 * @class
 * Initializes a new instance of the UploadCertificateResponse class.
 * @constructor
 * Upload Certificate Response from IDM
 *
 * @property {string} [authType] Specify the Authentication type. Possible
 * values include: 'Invalid', 'AccessControlService', 'AzureActiveDirectory'
 * @property {string} certificate Gets or sets the base64 encoded certificate
 * raw data string
 * @property {number} resourceId Gets or Sets the ResourceId
 * @property {string} aadAuthority AAD tenant authority
 * @property {string} aadTenantId AAD tenant Id
 * @property {string} servicePrincipalClientId AAD service principal clientId
 * @property {string} servicePrincipalObjectId AAD service principal ObjectId
 * @property {string} azureManagementEndpointAudience Azure Management Endpoint
 * Audience
 * @property {string} subject Certificate Subject Name
 * @property {date} validFrom Certificate Validity start Date time
 * @property {date} validTo Certificate Validity End Date time
 * @property {string} thumbprint Certificate thumbrprint
 * @property {string} friendlyName Certificate friendlyname
 * @property {string} issuer Certificate issuer
 */
export interface UploadCertificateResponse extends BaseModel {
  authType?: string;
  certificate: string;
  resourceId: number;
  aadAuthority: string;
  aadTenantId: string;
  servicePrincipalClientId: string;
  servicePrincipalObjectId: string;
  azureManagementEndpointAudience: string;
  subject: string;
  validFrom: Date;
  validTo: Date;
  thumbprint: string;
  friendlyName: string;
  issuer: string;
}


/**
 * @class
 * Initializes a new instance of the ManagerList class.
 * @constructor
 * List of storsimple Managers under a particular resourceGroup
 *
 */
export interface ManagerList extends Array<Manager> {
}

/**
 * @class
 * Initializes a new instance of the MetricList class.
 * @constructor
 * Collection of metrics
 *
 */
export interface MetricList extends Array<Metrics> {
}

/**
 * @class
 * Initializes a new instance of the MetricDefinitionList class.
 * @constructor
 * List of metric definition
 *
 */
export interface MetricDefinitionList extends Array<MetricDefinition> {
}

/**
 * @class
 * Initializes a new instance of the AvailableProviderOperations class.
 * @constructor
 * Class for set of operations used for discovery of available provider
 * operations.
 *
 * @property {string} [nextLink] The NextLink.
 */
export interface AvailableProviderOperations extends Array<AvailableProviderOperation> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the AccessControlRecordList class.
 * @constructor
 * Collection of AccessControlRecords
 *
 */
export interface AccessControlRecordList extends Array<AccessControlRecord> {
}

/**
 * @class
 * Initializes a new instance of the AlertList class.
 * @constructor
 * Collection of Alerts
 *
 * @property {string} [nextLink] Id of the next page of alerts
 */
export interface AlertList extends Array<Alert> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the BackupList class.
 * @constructor
 * Collection of backups
 *
 * @property {string} [nextLink] The NextLink.
 */
export interface BackupList extends Array<Backup> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the DeviceList class.
 * @constructor
 * Collection of Devices
 *
 */
export interface DeviceList extends Array<Device> {
}

/**
 * @class
 * Initializes a new instance of the BackupScheduleGroupList class.
 * @constructor
 * The list response of backup schedule groups
 *
 */
export interface BackupScheduleGroupList extends Array<BackupScheduleGroup> {
}

/**
 * @class
 * Initializes a new instance of the ChapSettingsList class.
 * @constructor
 * Collection of Chap setting entities
 *
 */
export interface ChapSettingsList extends Array<ChapSettings> {
}

/**
 * @class
 * Initializes a new instance of the ISCSIDiskList class.
 * @constructor
 * Collection of Iscsi disk
 *
 */
export interface ISCSIDiskList extends Array<ISCSIDisk> {
}

/**
 * @class
 * Initializes a new instance of the FileServerList class.
 * @constructor
 * Collection of file servers
 *
 */
export interface FileServerList extends Array<FileServer> {
}

/**
 * @class
 * Initializes a new instance of the FileShareList class.
 * @constructor
 * Collection of file shares
 *
 */
export interface FileShareList extends Array<FileShare> {
}

/**
 * @class
 * Initializes a new instance of the ISCSIServerList class.
 * @constructor
 * Collection of Iscsi servers
 *
 */
export interface ISCSIServerList extends Array<ISCSIServer> {
}

/**
 * @class
 * Initializes a new instance of the JobList class.
 * @constructor
 * Collection of jobs
 *
 * @property {string} [nextLink] The NextLink.
 */
export interface JobList extends Array<Job> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the StorageAccountCredentialList class.
 * @constructor
 * Collection of Storage account credential entities
 *
 */
export interface StorageAccountCredentialList extends Array<StorageAccountCredential> {
}

/**
 * @class
 * Initializes a new instance of the StorageDomainList class.
 * @constructor
 * Collection of storage domains
 *
 */
export interface StorageDomainList extends Array<StorageDomain> {
}
