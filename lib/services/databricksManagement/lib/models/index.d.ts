/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { BaseResource } from 'ms-rest-azure';
import { CloudError } from 'ms-rest-azure';
import * as moment from 'moment';

export { BaseResource } from 'ms-rest-azure';
export { CloudError } from 'ms-rest-azure';


/**
 * @class
 * Initializes a new instance of the WorkspaceProviderAuthorization class.
 * @constructor
 * The workspace provider authorization.
 *
 * @property {uuid} principalId The provider's principal identifier. This is
 * the identity that the provider will use to call ARM to manage the workspace
 * resources.
 * @property {uuid} roleDefinitionId The provider's role definition identifier.
 * This role will define all the permissions that the provider must have on the
 * workspace's container resource group. This role definition cannot have
 * permission to delete the resource group.
 */
export interface WorkspaceProviderAuthorization {
  principalId: string;
  roleDefinitionId: string;
}

/**
 * @class
 * Initializes a new instance of the Sku class.
 * @constructor
 * SKU for the resource.
 *
 * @property {string} name The SKU name.
 * @property {string} [tier] The SKU tier.
 */
export interface Sku {
  name: string;
  tier?: string;
}

/**
 * @class
 * Initializes a new instance of the Resource class.
 * @constructor
 * The core properties of ARM resources
 *
 * @property {string} [id] Fully qualified resource Id for the resource. Ex -
 * /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
 * @property {string} [name] The name of the resource
 * @property {string} [type] The type of the resource. Ex-
 * Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
 */
export interface Resource extends BaseResource {
  readonly id?: string;
  readonly name?: string;
  readonly type?: string;
}

/**
 * @class
 * Initializes a new instance of the TrackedResource class.
 * @constructor
 * The resource model definition for a ARM tracked top level resource
 *
 * @property {object} [tags] Resource tags.
 * @property {string} location The geo-location where the resource lives
 */
export interface TrackedResource extends Resource {
  tags?: { [propertyName: string]: string };
  location: string;
}

/**
 * @class
 * Initializes a new instance of the Workspace class.
 * @constructor
 * Information about workspace.
 *
 * @property {string} managedResourceGroupId The managed resource group Id.
 * @property {object} [parameters] Name and value pairs that define the
 * workspace parameters.
 * @property {string} [provisioningState] The workspace provisioning state.
 * Possible values include: 'Accepted', 'Running', 'Ready', 'Creating',
 * 'Created', 'Deleting', 'Deleted', 'Canceled', 'Failed', 'Succeeded',
 * 'Updating'
 * @property {string} [uiDefinitionUri] The blob URI where the UI definition
 * file is located.
 * @property {array} [authorizations] The workspace provider authorizations.
 * @property {object} [sku] The SKU of the resource.
 * @property {string} [sku.name] The SKU name.
 * @property {string} [sku.tier] The SKU tier.
 */
export interface Workspace extends TrackedResource {
  managedResourceGroupId: string;
  parameters?: any;
  readonly provisioningState?: string;
  uiDefinitionUri?: string;
  authorizations?: WorkspaceProviderAuthorization[];
  sku?: Sku;
}

/**
 * @class
 * Initializes a new instance of the WorkspaceUpdate class.
 * @constructor
 * An update to a workspace.
 *
 * @property {object} [tags] Resource tags.
 */
export interface WorkspaceUpdate {
  tags?: { [propertyName: string]: string };
}

/**
 * @class
 * Initializes a new instance of the ErrorDetail class.
 * @constructor
 * @summary Error details.
 *
 * @property {string} code The error's code.
 * @property {string} message A human readable error message.
 * @property {string} [target] Indicates which property in the request is
 * responsible for the error.
 */
export interface ErrorDetail {
  code: string;
  message: string;
  target?: string;
}

/**
 * @class
 * Initializes a new instance of the ErrorInfo class.
 * @constructor
 * @summary The code and message for an error.
 *
 * @property {string} code A machine readable error code.
 * @property {string} message A human readable error message.
 * @property {array} [details] error details.
 * @property {string} [innererror] Inner error details if they exist.
 */
export interface ErrorInfo {
  code: string;
  message: string;
  details?: ErrorDetail[];
  innererror?: string;
}

/**
 * @class
 * Initializes a new instance of the ErrorResponse class.
 * @constructor
 * @summary Error response.
 *
 * Contains details when the response code indicates an error.
 *
 * @property {object} error The error details.
 * @property {string} [error.code] A machine readable error code.
 * @property {string} [error.message] A human readable error message.
 * @property {array} [error.details] error details.
 * @property {string} [error.innererror] Inner error details if they exist.
 */
export interface ErrorResponse {
  error: ErrorInfo;
}

/**
 * @class
 * Initializes a new instance of the OperationDisplay class.
 * @constructor
 * The object that represents the operation.
 *
 * @property {string} [provider] Service provider: Microsoft.ResourceProvider
 * @property {string} [resource] Resource on which the operation is performed.
 * @property {string} [operation] Operation type: Read, write, delete, etc.
 */
export interface OperationDisplay {
  provider?: string;
  resource?: string;
  operation?: string;
}

/**
 * @class
 * Initializes a new instance of the Operation class.
 * @constructor
 * REST API operation
 *
 * @property {string} [name] Operation name: {provider}/{resource}/{operation}
 * @property {object} [display] The object that represents the operation.
 * @property {string} [display.provider] Service provider:
 * Microsoft.ResourceProvider
 * @property {string} [display.resource] Resource on which the operation is
 * performed.
 * @property {string} [display.operation] Operation type: Read, write, delete,
 * etc.
 */
export interface Operation {
  name?: string;
  display?: OperationDisplay;
}


/**
 * @class
 * Initializes a new instance of the WorkspaceListResult class.
 * @constructor
 * List of workspaces.
 *
 * @property {string} [nextLink] The URL to use for getting the next set of
 * results.
 */
export interface WorkspaceListResult extends Array<Workspace> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the OperationListResult class.
 * @constructor
 * Result of the request to list Resource Provider operations. It contains a
 * list of operations and a URL link to get the next set of results.
 *
 * @property {string} [nextLink] URL to get the next set of operation list
 * results if there are any.
 */
export interface OperationListResult extends Array<Operation> {
  nextLink?: string;
}
