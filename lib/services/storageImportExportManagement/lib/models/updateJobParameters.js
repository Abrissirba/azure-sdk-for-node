/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Update Job parameters
 *
 */
class UpdateJobParameters {
  /**
   * Create a UpdateJobParameters.
   * @property {object} [tags] Specifies the tags that will be assigned to the
   * job
   * @property {boolean} [cancelRequested] If specified, the value must be
   * true. The service will attempt to cancel the job.
   * @property {string} [state] If specified, the value must be Shipping, which
   * tells the Import/Export service that the package for the job has been
   * shipped. The ReturnAddress and DeliveryPackage properties must have been
   * set either in this request or in a previous request, otherwise the request
   * will fail.
   * @property {object} [returnAddress] Specifies the return address
   * information for the job.
   * @property {string} [returnAddress.recipientName] The name of the recipient
   * who will receive the hard drives when they are returned.
   * @property {string} [returnAddress.streetAddress1] The first line of the
   * street address to use when returning the drives.
   * @property {string} [returnAddress.streetAddress2] The second line of the
   * street address to use when returning the drives.
   * @property {string} [returnAddress.city] The city name to use when
   * returning the drives.
   * @property {string} [returnAddress.stateOrProvince] The state or province
   * to use when returning the drives.
   * @property {string} [returnAddress.postalCode] The postal code to use when
   * returning the drives.
   * @property {string} [returnAddress.countryOrRegion] The country or region
   * to use when returning the drives.
   * @property {string} [returnAddress.phone] Phone number of the recipient of
   * the returned drives.
   * @property {string} [returnAddress.email] Email address of the recipient of
   * the returned drives.
   * @property {object} [returnShipping] Specifies the return carrier and
   * customer's account with the carrier.
   * @property {string} [returnShipping.carrierName] The carrier's name.
   * @property {string} [returnShipping.carrierAccountNumber] The customer's
   * account number with the carrier.
   * @property {object} [deliveryPackage] Contains information about the
   * package being shipped by the customer to the Microsoft data center.
   * @property {string} [deliveryPackage.carrierName] The name of the carrier
   * that is used to ship the import or export drives.
   * @property {string} [deliveryPackage.trackingNumber] The tracking number of
   * the package.
   * @property {number} [deliveryPackage.driveCount] The number of drives
   * included in the package.
   * @property {string} [deliveryPackage.shipDate] The date when the package is
   * shipped.
   * @property {string} [logLevel] Indicates whether error logging or verbose
   * logging is enabled.
   * @property {boolean} [backupDriveManifest] Indicates whether the manifest
   * files on the drives should be copied to block blobs.
   * @property {array} [driveList] List of drives that comprise the job.
   */
  constructor() {
  }

  /**
   * Defines the metadata of UpdateJobParameters
   *
   * @returns {object} metadata of UpdateJobParameters
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'UpdateJobParameters',
      type: {
        name: 'Composite',
        className: 'UpdateJobParameters',
        modelProperties: {
          tags: {
            required: false,
            serializedName: 'tags',
            type: {
              name: 'Object'
            }
          },
          cancelRequested: {
            required: false,
            serializedName: 'properties.cancelRequested',
            type: {
              name: 'Boolean'
            }
          },
          state: {
            required: false,
            serializedName: 'properties.state',
            type: {
              name: 'String'
            }
          },
          returnAddress: {
            required: false,
            serializedName: 'properties.returnAddress',
            type: {
              name: 'Composite',
              className: 'ReturnAddress'
            }
          },
          returnShipping: {
            required: false,
            serializedName: 'properties.returnShipping',
            type: {
              name: 'Composite',
              className: 'ReturnShipping'
            }
          },
          deliveryPackage: {
            required: false,
            serializedName: 'properties.deliveryPackage',
            type: {
              name: 'Composite',
              className: 'PackageInfomation'
            }
          },
          logLevel: {
            required: false,
            serializedName: 'properties.logLevel',
            type: {
              name: 'String'
            }
          },
          backupDriveManifest: {
            required: false,
            serializedName: 'properties.backupDriveManifest',
            type: {
              name: 'Boolean'
            }
          },
          driveList: {
            required: false,
            serializedName: 'properties.driveList',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'DriveStatusElementType',
                  type: {
                    name: 'Composite',
                    className: 'DriveStatus'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = UpdateJobParameters;
