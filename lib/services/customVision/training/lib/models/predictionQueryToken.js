/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Class representing a PredictionQueryToken.
 */
class PredictionQueryToken {
  /**
   * Create a PredictionQueryToken.
   * @member {string} [session]
   * @member {string} [continuation]
   * @member {number} [maxCount]
   * @member {string} [orderBy] Possible values include: 'Newest', 'Oldest',
   * 'Suggested'
   * @member {array} [tags]
   * @member {uuid} [iterationId]
   * @member {date} [startTime]
   * @member {date} [endTime]
   * @member {string} [application]
   */
  constructor() {
  }

  /**
   * Defines the metadata of PredictionQueryToken
   *
   * @returns {object} metadata of PredictionQueryToken
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'PredictionQueryToken',
      type: {
        name: 'Composite',
        className: 'PredictionQueryToken',
        modelProperties: {
          session: {
            required: false,
            serializedName: 'session',
            type: {
              name: 'String'
            }
          },
          continuation: {
            required: false,
            serializedName: 'continuation',
            type: {
              name: 'String'
            }
          },
          maxCount: {
            required: false,
            serializedName: 'maxCount',
            type: {
              name: 'Number'
            }
          },
          orderBy: {
            required: false,
            serializedName: 'orderBy',
            type: {
              name: 'String'
            }
          },
          tags: {
            required: false,
            serializedName: 'tags',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'PredictionQueryTagElementType',
                  type: {
                    name: 'Composite',
                    className: 'PredictionQueryTag'
                  }
              }
            }
          },
          iterationId: {
            required: false,
            serializedName: 'iterationId',
            type: {
              name: 'String'
            }
          },
          startTime: {
            required: false,
            serializedName: 'startTime',
            type: {
              name: 'DateTime'
            }
          },
          endTime: {
            required: false,
            serializedName: 'endTime',
            type: {
              name: 'DateTime'
            }
          },
          application: {
            required: false,
            serializedName: 'application',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = PredictionQueryToken;
