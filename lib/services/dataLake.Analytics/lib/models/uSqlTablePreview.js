/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * A Data Lake Analytics catalog table or partition preview rows item.
 *
 */
class USqlTablePreview {
  /**
   * Create a USqlTablePreview.
   * @member {number} [totalRowCount] the total number of rows in the table or
   * partition.
   * @member {number} [totalColumnCount] the total number of columns in the
   * table or partition.
   * @member {array} [rows] the rows of the table or partition preview, where
   * each row is an array of string representations the row's values. Note:
   * Byte arrays will appear as base-64 encoded values, SqlMap and SqlArray
   * objects will appear as escaped JSON objects, and DateTime objects will
   * appear as ISO formatted UTC date-times.
   * @member {boolean} [truncated] true if the amount of data in the response
   * is less than expected due to the preview operation's size limitations.
   * This can occur if the requested rows or row counts are too large.
   * @member {array} [schema] the schema of the table or partition.
   */
  constructor() {
  }

  /**
   * Defines the metadata of USqlTablePreview
   *
   * @returns {object} metadata of USqlTablePreview
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'USqlTablePreview',
      type: {
        name: 'Composite',
        className: 'USqlTablePreview',
        modelProperties: {
          totalRowCount: {
            required: false,
            serializedName: 'totalRowCount',
            type: {
              name: 'Number'
            }
          },
          totalColumnCount: {
            required: false,
            serializedName: 'totalColumnCount',
            type: {
              name: 'Number'
            }
          },
          rows: {
            required: false,
            serializedName: 'rows',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'ArrayElementType',
                  type: {
                    name: 'Sequence',
                    element: {
                        required: false,
                        serializedName: 'StringElementType',
                        type: {
                          name: 'String'
                        }
                    }
                  }
              }
            }
          },
          truncated: {
            required: false,
            serializedName: 'truncated',
            type: {
              name: 'Boolean'
            }
          },
          schema: {
            required: false,
            serializedName: 'schema',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'USqlTableColumnElementType',
                  type: {
                    name: 'Composite',
                    className: 'USqlTableColumn'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = USqlTablePreview;
