/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Error diagnostic information for failed jobs.
 *
 */
class Diagnostics {
  /**
   * Create a Diagnostics.
   * @member {string} [message] The error message.
   * @member {string} [severity] The severity of the error. Possible values
   * include: 'Warning', 'Error', 'Info', 'SevereWarning', 'Deprecated',
   * 'UserWarning'
   * @member {number} [lineNumber] The line number the error occured on.
   * @member {number} [columnNumber] The column where the error occured.
   * @member {number} [start] The starting index of the error.
   * @member {number} [end] The ending index of the error.
   */
  constructor() {
  }

  /**
   * Defines the metadata of Diagnostics
   *
   * @returns {object} metadata of Diagnostics
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'Diagnostics',
      type: {
        name: 'Composite',
        className: 'Diagnostics',
        modelProperties: {
          message: {
            required: false,
            readOnly: true,
            serializedName: 'message',
            type: {
              name: 'String'
            }
          },
          severity: {
            required: false,
            readOnly: true,
            serializedName: 'severity',
            type: {
              name: 'Enum',
              allowedValues: [ 'Warning', 'Error', 'Info', 'SevereWarning', 'Deprecated', 'UserWarning' ]
            }
          },
          lineNumber: {
            required: false,
            readOnly: true,
            serializedName: 'lineNumber',
            type: {
              name: 'Number'
            }
          },
          columnNumber: {
            required: false,
            readOnly: true,
            serializedName: 'columnNumber',
            type: {
              name: 'Number'
            }
          },
          start: {
            required: false,
            readOnly: true,
            serializedName: 'start',
            type: {
              name: 'Number'
            }
          },
          end: {
            required: false,
            readOnly: true,
            serializedName: 'end',
            type: {
              name: 'Number'
            }
          }
        }
      }
    };
  }
}

module.exports = Diagnostics;
