/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { BaseResource } from 'ms-rest-azure';
import { CloudError } from 'ms-rest-azure';
import * as moment from 'moment';

export { BaseResource } from 'ms-rest-azure';
export { CloudError } from 'ms-rest-azure';


/**
 * @class
 * Initializes a new instance of the AvailabilityStatusPropertiesRecentlyResolvedState class.
 * @constructor
 * An annotation describing a change in the availabilityState to Available from
 * Unavailable with a reasonType of type Unplanned
 *
 * @property {date} [unavailableOccurredTime] Timestamp for when the
 * availabilityState changed to Unavailable
 * @property {date} [resolvedTime] Timestamp when the availabilityState changes
 * to Available.
 * @property {string} [unavailabilitySummary] Brief description of cause of the
 * resource becoming unavailable.
 */
export interface AvailabilityStatusPropertiesRecentlyResolvedState {
  unavailableOccurredTime?: Date;
  resolvedTime?: Date;
  unavailabilitySummary?: string;
}

/**
 * @class
 * Initializes a new instance of the RecommendedAction class.
 * @constructor
 * Lists actions the user can take based on the current availabilityState of
 * the resource.
 *
 * @property {string} [action] Recommended action.
 * @property {string} [actionUrl] Link to the action
 * @property {string} [actionUrlText] Substring of action, it describes which
 * text should host the action url.
 */
export interface RecommendedAction {
  action?: string;
  actionUrl?: string;
  actionUrlText?: string;
}

/**
 * @class
 * Initializes a new instance of the ServiceImpactingEventStatus class.
 * @constructor
 * Status of the service impacting event.
 *
 * @property {string} [value] Current status of the event
 */
export interface ServiceImpactingEventStatus {
  value?: string;
}

/**
 * @class
 * Initializes a new instance of the ServiceImpactingEventIncidentProperties class.
 * @constructor
 * Properties of the service impacting event.
 *
 * @property {string} [title] Title of the incident.
 * @property {string} [service] Service impacted by the event.
 * @property {string} [region] Region impacted by the event.
 * @property {string} [incidentType] Type of Event.
 */
export interface ServiceImpactingEventIncidentProperties {
  title?: string;
  service?: string;
  region?: string;
  incidentType?: string;
}

/**
 * @class
 * Initializes a new instance of the ServiceImpactingEvent class.
 * @constructor
 * Lists the service impacting events that may be affecting the health of the
 * resource.
 *
 * @property {date} [eventStartTime] Timestamp for when the event started.
 * @property {date} [eventStatusLastModifiedTime] Timestamp for when event was
 * submitted/detected.
 * @property {string} [correlationId] Correlation id for the event
 * @property {object} [status] Status of the service impacting event.
 * @property {string} [status.value] Current status of the event
 * @property {object} [incidentProperties] Properties of the service impacting
 * event.
 * @property {string} [incidentProperties.title] Title of the incident.
 * @property {string} [incidentProperties.service] Service impacted by the
 * event.
 * @property {string} [incidentProperties.region] Region impacted by the event.
 * @property {string} [incidentProperties.incidentType] Type of Event.
 */
export interface ServiceImpactingEvent {
  eventStartTime?: Date;
  eventStatusLastModifiedTime?: Date;
  correlationId?: string;
  status?: ServiceImpactingEventStatus;
  incidentProperties?: ServiceImpactingEventIncidentProperties;
}

/**
 * @class
 * Initializes a new instance of the AvailabilityStatusProperties class.
 * @constructor
 * Properties of availability state.
 *
 * @property {string} [availabilityState] Availability status of the resource.
 * When it is null, this availabilityStatus object represents an availability
 * impacting event. Possible values include: 'Available', 'Unavailable',
 * 'Unknown'
 * @property {string} [summary] Summary description of the availability status.
 * @property {string} [detailedStatus] Details of the availability status.
 * @property {string} [reasonType] When the resource's availabilityState is
 * Unavailable, it describes where the health impacting event was originated.
 * Examples are planned, unplanned, user initiated or an outage etc.
 * @property {date} [rootCauseAttributionTime] When the resource's
 * availabilityState is Unavailable, it provides the Timestamp for when the
 * health impacting event was received.
 * @property {string} [healthEventType] In case of an availability impacting
 * event, it describes when the health impacting event was originated. Examples
 * are Lifecycle, Downtime, Fault Analysis etc.
 * @property {string} [healthEventCause] In case of an availability impacting
 * event, it describes where the health impacting event was originated.
 * Examples are PlatformInitiated, UserInitiated etc.
 * @property {string} [healthEventCategory] In case of an availability
 * impacting event, it describes the category of a PlatformInitiated health
 * impacting event. Examples are Planned, Unplanned etc.
 * @property {string} [healthEventId] It is a unique Id that identifies the
 * event
 * @property {date} [resolutionETA] When the resource's availabilityState is
 * Unavailable and the reasonType is not User Initiated, it provides the date
 * and time for when the issue is expected to be resolved.
 * @property {date} [occuredTime] Timestamp for when last change in health
 * status occurred.
 * @property {string} [reasonChronicity] Chronicity of the availability
 * transition. Possible values include: 'Transient', 'Persistent'
 * @property {date} [reportedTime] Timestamp for when the health was last
 * checked.
 * @property {object} [recentlyResolvedState] An annotation describing a change
 * in the availabilityState to Available from Unavailable with a reasonType of
 * type Unplanned
 * @property {date} [recentlyResolvedState.unavailableOccurredTime] Timestamp
 * for when the availabilityState changed to Unavailable
 * @property {date} [recentlyResolvedState.resolvedTime] Timestamp when the
 * availabilityState changes to Available.
 * @property {string} [recentlyResolvedState.unavailabilitySummary] Brief
 * description of cause of the resource becoming unavailable.
 * @property {array} [recommendedActions] Lists actions the user can take based
 * on the current availabilityState of the resource.
 * @property {array} [serviceImpactingEvents] Lists the service impacting
 * events that may be affecting the health of the resource.
 */
export interface AvailabilityStatusProperties {
  availabilityState?: string;
  summary?: string;
  detailedStatus?: string;
  reasonType?: string;
  rootCauseAttributionTime?: Date;
  healthEventType?: string;
  healthEventCause?: string;
  healthEventCategory?: string;
  healthEventId?: string;
  resolutionETA?: Date;
  occuredTime?: Date;
  reasonChronicity?: string;
  reportedTime?: Date;
  recentlyResolvedState?: AvailabilityStatusPropertiesRecentlyResolvedState;
  recommendedActions?: RecommendedAction[];
  serviceImpactingEvents?: ServiceImpactingEvent[];
}

/**
 * @class
 * Initializes a new instance of the AvailabilityStatus class.
 * @constructor
 * availabilityStatus of a resource.
 *
 * @property {string} [id] Azure Resource Manager Identity for the
 * availabilityStatuses resource.
 * @property {string} [name] current.
 * @property {string} [type] Microsoft.ResourceHealth/AvailabilityStatuses.
 * @property {string} [location] Azure Resource Manager geo location of the
 * resource.
 * @property {object} [properties] Properties of availability state.
 * @property {string} [properties.availabilityState] Availability status of the
 * resource. When it is null, this availabilityStatus object represents an
 * availability impacting event. Possible values include: 'Available',
 * 'Unavailable', 'Unknown'
 * @property {string} [properties.summary] Summary description of the
 * availability status.
 * @property {string} [properties.detailedStatus] Details of the availability
 * status.
 * @property {string} [properties.reasonType] When the resource's
 * availabilityState is Unavailable, it describes where the health impacting
 * event was originated. Examples are planned, unplanned, user initiated or an
 * outage etc.
 * @property {date} [properties.rootCauseAttributionTime] When the resource's
 * availabilityState is Unavailable, it provides the Timestamp for when the
 * health impacting event was received.
 * @property {string} [properties.healthEventType] In case of an availability
 * impacting event, it describes when the health impacting event was
 * originated. Examples are Lifecycle, Downtime, Fault Analysis etc.
 * @property {string} [properties.healthEventCause] In case of an availability
 * impacting event, it describes where the health impacting event was
 * originated. Examples are PlatformInitiated, UserInitiated etc.
 * @property {string} [properties.healthEventCategory] In case of an
 * availability impacting event, it describes the category of a
 * PlatformInitiated health impacting event. Examples are Planned, Unplanned
 * etc.
 * @property {string} [properties.healthEventId] It is a unique Id that
 * identifies the event
 * @property {date} [properties.resolutionETA] When the resource's
 * availabilityState is Unavailable and the reasonType is not User Initiated,
 * it provides the date and time for when the issue is expected to be resolved.
 * @property {date} [properties.occuredTime] Timestamp for when last change in
 * health status occurred.
 * @property {string} [properties.reasonChronicity] Chronicity of the
 * availability transition. Possible values include: 'Transient', 'Persistent'
 * @property {date} [properties.reportedTime] Timestamp for when the health was
 * last checked.
 * @property {object} [properties.recentlyResolvedState] An annotation
 * describing a change in the availabilityState to Available from Unavailable
 * with a reasonType of type Unplanned
 * @property {date} [properties.recentlyResolvedState.unavailableOccurredTime]
 * Timestamp for when the availabilityState changed to Unavailable
 * @property {date} [properties.recentlyResolvedState.resolvedTime] Timestamp
 * when the availabilityState changes to Available.
 * @property {string} [properties.recentlyResolvedState.unavailabilitySummary]
 * Brief description of cause of the resource becoming unavailable.
 * @property {array} [properties.recommendedActions] Lists actions the user can
 * take based on the current availabilityState of the resource.
 * @property {array} [properties.serviceImpactingEvents] Lists the service
 * impacting events that may be affecting the health of the resource.
 */
export interface AvailabilityStatus {
  id?: string;
  name?: string;
  type?: string;
  location?: string;
  properties?: AvailabilityStatusProperties;
}

/**
 * @class
 * Initializes a new instance of the OperationDisplay class.
 * @constructor
 * Properties of the operation.
 *
 * @property {string} [provider] Provider name.
 * @property {string} [resource] Resource name.
 * @property {string} [operation] Operation name.
 * @property {string} [description] Description of the operation.
 */
export interface OperationDisplay {
  provider?: string;
  resource?: string;
  operation?: string;
  description?: string;
}

/**
 * @class
 * Initializes a new instance of the Operation class.
 * @constructor
 * Operation available in the resourcehealth resource provider.
 *
 * @property {string} [name] Name of the operation.
 * @property {object} [display] Properties of the operation.
 * @property {string} [display.provider] Provider name.
 * @property {string} [display.resource] Resource name.
 * @property {string} [display.operation] Operation name.
 * @property {string} [display.description] Description of the operation.
 */
export interface Operation {
  name?: string;
  display?: OperationDisplay;
}

/**
 * @class
 * Initializes a new instance of the OperationListResult class.
 * @constructor
 * Lists the operations response.
 *
 * @property {array} value List of operations available in the resourcehealth
 * resource provider.
 */
export interface OperationListResult {
  value: Operation[];
}

/**
 * @class
 * Initializes a new instance of the ErrorResponse class.
 * @constructor
 * Error details.
 *
 * @property {string} [code] The error code.
 * @property {string} [message] The error message.
 * @property {string} [details] The error details.
 */
export interface ErrorResponse {
  readonly code?: string;
  readonly message?: string;
  readonly details?: string;
}


/**
 * @class
 * Initializes a new instance of the AvailabilityStatusListResult class.
 * @constructor
 * The List availabilityStatus operation response.
 *
 * @property {string} [nextLink] The URI to fetch the next page of
 * availabilityStatuses. Call ListNext() with this URI to fetch the next page
 * of availabilityStatuses.
 */
export interface AvailabilityStatusListResult extends Array<AvailabilityStatus> {
  nextLink?: string;
}
