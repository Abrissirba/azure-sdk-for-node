/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Virtual Machine Scale Set OS Upgrade History operation response.
 *
 */
class UpgradeOperationHistoricalStatusInfo {
  /**
   * Create a UpgradeOperationHistoricalStatusInfo.
   * @member {object} [properties] Information about the properties of the
   * upgrade operation.
   * @member {object} [properties.runningStatus] Information about the overall
   * status of the upgrade operation.
   * @member {string} [properties.runningStatus.code] Code indicating the
   * current status of the upgrade. Possible values include: 'RollingForward',
   * 'Cancelled', 'Completed', 'Faulted'
   * @member {date} [properties.runningStatus.startTime] Start time of the
   * upgrade.
   * @member {date} [properties.runningStatus.endTime] Start time of the
   * upgrade.
   * @member {object} [properties.progress] Counts of the VM's in each state.
   * @member {number} [properties.progress.successfulInstanceCount] The number
   * of instances that have been successfully upgraded.
   * @member {number} [properties.progress.failedInstanceCount] The number of
   * instances that have failed to be upgraded successfully.
   * @member {number} [properties.progress.inProgressInstanceCount] The number
   * of instances that are currently being upgraded.
   * @member {number} [properties.progress.pendingInstanceCount] The number of
   * instances that have not yet begun to be upgraded.
   * @member {object} [properties.error] Error Details for this upgrade if
   * there are any.
   * @member {array} [properties.error.details] The Api error details
   * @member {object} [properties.error.innererror] The Api inner error
   * @member {string} [properties.error.innererror.exceptiontype] The exception
   * type.
   * @member {string} [properties.error.innererror.errordetail] The internal
   * error message or exception dump.
   * @member {string} [properties.error.code] The error code.
   * @member {string} [properties.error.target] The target of the particular
   * error.
   * @member {string} [properties.error.message] The error message.
   * @member {string} [properties.startedBy] Error Details for this upgrade if
   * there are any. Possible values include: 'Unknown', 'User', 'Platform'
   * @member {object} [properties.targetImageReference] Error Details for this
   * upgrade if there are any.
   * @member {string} [properties.targetImageReference.publisher] Image
   * publisher
   * @member {string} [properties.targetImageReference.offer] Offer type
   * @member {string} [properties.targetImageReference.sku] Sku type
   * @member {string} [properties.targetImageReference.version] Version of the
   * image
   * @member {string} [properties.targetImageReference.uri] Specifies the
   * virtual hard disk's uri.
   * @member {string} [type] Resource type
   * @member {string} [location] Resource location
   */
  constructor() {
  }

  /**
   * Defines the metadata of UpgradeOperationHistoricalStatusInfo
   *
   * @returns {object} metadata of UpgradeOperationHistoricalStatusInfo
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'UpgradeOperationHistoricalStatusInfo',
      type: {
        name: 'Composite',
        className: 'UpgradeOperationHistoricalStatusInfo',
        modelProperties: {
          properties: {
            required: false,
            readOnly: true,
            serializedName: 'properties',
            type: {
              name: 'Composite',
              className: 'UpgradeOperationHistoricalStatusInfoProperties'
            }
          },
          type: {
            required: false,
            readOnly: true,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          location: {
            required: false,
            serializedName: 'location',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = UpgradeOperationHistoricalStatusInfo;
