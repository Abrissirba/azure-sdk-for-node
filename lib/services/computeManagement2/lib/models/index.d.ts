/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { BaseResource } from 'ms-rest-azure';
import { CloudError } from 'ms-rest-azure';
import * as moment from 'moment';

export { BaseResource } from 'ms-rest-azure';
export { CloudError } from 'ms-rest-azure';


/**
 * @class
 * Initializes a new instance of the ComputeOperationValue class.
 * @constructor
 * Describes the properties of a Compute Operation value.
 *
 * @property {string} [origin] The origin of the compute operation.
 * @property {string} [name] The name of the compute operation.
 * @property {string} [operation] The display name of the compute operation.
 * @property {string} [resource] The display name of the resource the operation
 * applies to.
 * @property {string} [description] The description of the operation.
 * @property {string} [provider] The resource provider for the operation.
 */
export interface ComputeOperationValue {
  readonly origin?: string;
  readonly name?: string;
  readonly operation?: string;
  readonly resource?: string;
  readonly description?: string;
  readonly provider?: string;
}

/**
 * @class
 * Initializes a new instance of the InstanceViewStatus class.
 * @constructor
 * Instance view status.
 *
 * @property {string} [code] The status code.
 * @property {string} [level] The level code. Possible values include: 'Info',
 * 'Warning', 'Error'
 * @property {string} [displayStatus] The short localizable label for the
 * status.
 * @property {string} [message] The detailed status message, including for
 * alerts and error messages.
 * @property {date} [time] The time of the status.
 */
export interface InstanceViewStatus {
  code?: string;
  level?: string;
  displayStatus?: string;
  message?: string;
  time?: Date;
}

/**
 * @class
 * Initializes a new instance of the SubResource class.
 * @constructor
 * @property {string} [id] Resource Id
 */
export interface SubResource extends BaseResource {
  id?: string;
}

/**
 * @class
 * Initializes a new instance of the Sku class.
 * @constructor
 * Describes a virtual machine scale set sku.
 *
 * @property {string} [name] The sku name.
 * @property {string} [tier] Specifies the tier of virtual machines in a scale
 * set.<br /><br /> Possible Values:<br /><br /> **Standard**<br /><br />
 * **Basic**
 * @property {number} [capacity] Specifies the number of virtual machines in
 * the scale set.
 */
export interface Sku {
  name?: string;
  tier?: string;
  capacity?: number;
}

/**
 * @class
 * Initializes a new instance of the Resource class.
 * @constructor
 * The Resource model definition.
 *
 * @property {string} [id] Resource Id
 * @property {string} [name] Resource name
 * @property {string} [type] Resource type
 * @property {string} location Resource location
 * @property {object} [tags] Resource tags
 */
export interface Resource extends BaseResource {
  readonly id?: string;
  readonly name?: string;
  readonly type?: string;
  location: string;
  tags?: { [propertyName: string]: string };
}

/**
 * @class
 * Initializes a new instance of the AvailabilitySet class.
 * @constructor
 * Specifies information about the availability set that the virtual machine
 * should be assigned to. Virtual machines specified in the same availability
 * set are allocated to different nodes to maximize availability. For more
 * information about availability sets, see [Manage the availability of virtual
 * machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-manage-availability?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
 * <br><br> For more information on Azure planned maintainance, see [Planned
 * maintenance for virtual machines in
 * Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-planned-maintenance?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json)
 * <br><br> Currently, a VM can only be added to availability set at creation
 * time. An existing VM cannot be added to an availability set.
 *
 * @property {number} [platformUpdateDomainCount] Update Domain count.
 * @property {number} [platformFaultDomainCount] Fault Domain count.
 * @property {array} [virtualMachines] A list of references to all virtual
 * machines in the availability set.
 * @property {array} [statuses] The resource status information.
 * @property {object} [sku] Sku of the availability set, only name is required
 * to be set. See AvailabilitySetSkuTypes for possible set of values. Use
 * 'Aligned' for virtual machines with managed disks and 'Classic' for virtual
 * machines with unmanaged disks. Default value is 'Classic'.
 * @property {string} [sku.name] The sku name.
 * @property {string} [sku.tier] Specifies the tier of virtual machines in a
 * scale set.<br /><br /> Possible Values:<br /><br /> **Standard**<br /><br />
 * **Basic**
 * @property {number} [sku.capacity] Specifies the number of virtual machines
 * in the scale set.
 */
export interface AvailabilitySet extends Resource {
  platformUpdateDomainCount?: number;
  platformFaultDomainCount?: number;
  virtualMachines?: SubResource[];
  readonly statuses?: InstanceViewStatus[];
  sku?: Sku;
}

/**
 * @class
 * Initializes a new instance of the UpdateResource class.
 * @constructor
 * The Update Resource model definition.
 *
 * @property {object} [tags] Resource tags
 */
export interface UpdateResource extends BaseResource {
  tags?: { [propertyName: string]: string };
}

/**
 * @class
 * Initializes a new instance of the AvailabilitySetUpdate class.
 * @constructor
 * Specifies information about the availability set that the virtual machine
 * should be assigned to. Only tags may be updated.
 *
 * @property {number} [platformUpdateDomainCount] Update Domain count.
 * @property {number} [platformFaultDomainCount] Fault Domain count.
 * @property {array} [virtualMachines] A list of references to all virtual
 * machines in the availability set.
 * @property {array} [statuses] The resource status information.
 * @property {object} [sku] Sku of the availability set
 * @property {string} [sku.name] The sku name.
 * @property {string} [sku.tier] Specifies the tier of virtual machines in a
 * scale set.<br /><br /> Possible Values:<br /><br /> **Standard**<br /><br />
 * **Basic**
 * @property {number} [sku.capacity] Specifies the number of virtual machines
 * in the scale set.
 */
export interface AvailabilitySetUpdate extends UpdateResource {
  platformUpdateDomainCount?: number;
  platformFaultDomainCount?: number;
  virtualMachines?: SubResource[];
  readonly statuses?: InstanceViewStatus[];
  sku?: Sku;
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineSize class.
 * @constructor
 * Describes the properties of a VM size.
 *
 * @property {string} [name] The name of the virtual machine size.
 * @property {number} [numberOfCores] The number of cores supported by the
 * virtual machine size.
 * @property {number} [osDiskSizeInMB] The OS disk size, in MB, allowed by the
 * virtual machine size.
 * @property {number} [resourceDiskSizeInMB] The resource disk size, in MB,
 * allowed by the virtual machine size.
 * @property {number} [memoryInMB] The amount of memory, in MB, supported by
 * the virtual machine size.
 * @property {number} [maxDataDiskCount] The maximum number of data disks that
 * can be attached to the virtual machine size.
 */
export interface VirtualMachineSize {
  name?: string;
  numberOfCores?: number;
  osDiskSizeInMB?: number;
  resourceDiskSizeInMB?: number;
  memoryInMB?: number;
  maxDataDiskCount?: number;
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineExtensionImage class.
 * @constructor
 * Describes a Virtual Machine Extension Image.
 *
 * @property {string} operatingSystem The operating system this extension
 * supports.
 * @property {string} computeRole The type of role (IaaS or PaaS) this
 * extension supports.
 * @property {string} handlerSchema The schema defined by publisher, where
 * extension consumers should provide settings in a matching schema.
 * @property {boolean} [vmScaleSetEnabled] Whether the extension can be used on
 * xRP VMScaleSets. By default existing extensions are usable on scalesets, but
 * there might be cases where a publisher wants to explicitly indicate the
 * extension is only enabled for CRP VMs but not VMSS.
 * @property {boolean} [supportsMultipleExtensions] Whether the handler can
 * support multiple extensions.
 */
export interface VirtualMachineExtensionImage extends Resource {
  operatingSystem: string;
  computeRole: string;
  handlerSchema: string;
  vmScaleSetEnabled?: boolean;
  supportsMultipleExtensions?: boolean;
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineImageResource class.
 * @constructor
 * Virtual machine image resource information.
 *
 * @property {string} name The name of the resource.
 * @property {string} location The supported Azure location of the resource.
 * @property {object} [tags] Specifies the tags that are assigned to the
 * virtual machine. For more information about using tags, see [Using tags to
 * organize your Azure
 * resources](https://docs.microsoft.com/azure/azure-resource-manager/resource-group-using-tags.md).
 */
export interface VirtualMachineImageResource extends SubResource {
  name: string;
  location: string;
  tags?: { [propertyName: string]: string };
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineExtensionInstanceView class.
 * @constructor
 * The instance view of a virtual machine extension.
 *
 * @property {string} [name] The virtual machine extension name.
 * @property {string} [type] Specifies the type of the extension; an example is
 * "CustomScriptExtension".
 * @property {string} [typeHandlerVersion] Specifies the version of the script
 * handler.
 * @property {array} [substatuses] The resource status information.
 * @property {array} [statuses] The resource status information.
 */
export interface VirtualMachineExtensionInstanceView {
  name?: string;
  type?: string;
  typeHandlerVersion?: string;
  substatuses?: InstanceViewStatus[];
  statuses?: InstanceViewStatus[];
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineExtension class.
 * @constructor
 * Describes a Virtual Machine Extension.
 *
 * @property {string} [forceUpdateTag] How the extension handler should be
 * forced to update even if the extension configuration has not changed.
 * @property {string} [publisher] The name of the extension handler publisher.
 * @property {string} [virtualMachineExtensionType] Specifies the type of the
 * extension; an example is "CustomScriptExtension".
 * @property {string} [typeHandlerVersion] Specifies the version of the script
 * handler.
 * @property {boolean} [autoUpgradeMinorVersion] Indicates whether the
 * extension should use a newer minor version if one is available at deployment
 * time. Once deployed, however, the extension will not upgrade minor versions
 * unless redeployed, even with this property set to true.
 * @property {object} [settings] Json formatted public settings for the
 * extension.
 * @property {object} [protectedSettings] The extension can contain either
 * protectedSettings or protectedSettingsFromKeyVault or no protected settings
 * at all.
 * @property {string} [provisioningState] The provisioning state, which only
 * appears in the response.
 * @property {object} [instanceView] The virtual machine extension instance
 * view.
 * @property {string} [instanceView.name] The virtual machine extension name.
 * @property {string} [instanceView.type] Specifies the type of the extension;
 * an example is "CustomScriptExtension".
 * @property {string} [instanceView.typeHandlerVersion] Specifies the version
 * of the script handler.
 * @property {array} [instanceView.substatuses] The resource status
 * information.
 * @property {array} [instanceView.statuses] The resource status information.
 */
export interface VirtualMachineExtension extends Resource {
  forceUpdateTag?: string;
  publisher?: string;
  virtualMachineExtensionType?: string;
  typeHandlerVersion?: string;
  autoUpgradeMinorVersion?: boolean;
  settings?: any;
  protectedSettings?: any;
  readonly provisioningState?: string;
  instanceView?: VirtualMachineExtensionInstanceView;
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineExtensionUpdate class.
 * @constructor
 * Describes a Virtual Machine Extension.
 *
 * @property {string} [forceUpdateTag] How the extension handler should be
 * forced to update even if the extension configuration has not changed.
 * @property {string} [publisher] The name of the extension handler publisher.
 * @property {string} [type] Specifies the type of the extension; an example is
 * "CustomScriptExtension".
 * @property {string} [typeHandlerVersion] Specifies the version of the script
 * handler.
 * @property {boolean} [autoUpgradeMinorVersion] Indicates whether the
 * extension should use a newer minor version if one is available at deployment
 * time. Once deployed, however, the extension will not upgrade minor versions
 * unless redeployed, even with this property set to true.
 * @property {object} [settings] Json formatted public settings for the
 * extension.
 * @property {object} [protectedSettings] The extension can contain either
 * protectedSettings or protectedSettingsFromKeyVault or no protected settings
 * at all.
 */
export interface VirtualMachineExtensionUpdate extends UpdateResource {
  forceUpdateTag?: string;
  publisher?: string;
  type?: string;
  typeHandlerVersion?: string;
  autoUpgradeMinorVersion?: boolean;
  settings?: any;
  protectedSettings?: any;
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineExtensionsListResult class.
 * @constructor
 * The List Extension operation response
 *
 * @property {array} [value] The list of extensions
 */
export interface VirtualMachineExtensionsListResult {
  value?: VirtualMachineExtension[];
}

/**
 * @class
 * Initializes a new instance of the PurchasePlan class.
 * @constructor
 * Used for establishing the purchase context of any 3rd Party artifact through
 * MarketPlace.
 *
 * @property {string} publisher The publisher ID.
 * @property {string} name The plan ID.
 * @property {string} product Specifies the product of the image from the
 * marketplace. This is the same value as Offer under the imageReference
 * element.
 */
export interface PurchasePlan {
  publisher: string;
  name: string;
  product: string;
}

/**
 * @class
 * Initializes a new instance of the OSDiskImage class.
 * @constructor
 * Contains the os disk image information.
 *
 * @property {string} operatingSystem The operating system of the osDiskImage.
 * Possible values include: 'Windows', 'Linux'
 */
export interface OSDiskImage {
  operatingSystem: string;
}

/**
 * @class
 * Initializes a new instance of the DataDiskImage class.
 * @constructor
 * Contains the data disk images information.
 *
 * @property {number} [lun] Specifies the logical unit number of the data disk.
 * This value is used to identify data disks within the VM and therefore must
 * be unique for each data disk attached to a VM.
 */
export interface DataDiskImage {
  readonly lun?: number;
}

/**
 * @class
 * Initializes a new instance of the AutomaticOSUpgradeProperties class.
 * @constructor
 * Describes automatic OS upgrade properties on the image.
 *
 * @property {boolean} automaticOSUpgradeSupported Specifies whether automatic
 * OS upgrade is supported on the image.
 */
export interface AutomaticOSUpgradeProperties {
  automaticOSUpgradeSupported: boolean;
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineImage class.
 * @constructor
 * Describes a Virtual Machine Image.
 *
 * @property {object} [plan]
 * @property {string} [plan.publisher] The publisher ID.
 * @property {string} [plan.name] The plan ID.
 * @property {string} [plan.product] Specifies the product of the image from
 * the marketplace. This is the same value as Offer under the imageReference
 * element.
 * @property {object} [osDiskImage]
 * @property {string} [osDiskImage.operatingSystem] The operating system of the
 * osDiskImage. Possible values include: 'Windows', 'Linux'
 * @property {array} [dataDiskImages]
 * @property {object} [automaticOSUpgradeProperties]
 * @property {boolean}
 * [automaticOSUpgradeProperties.automaticOSUpgradeSupported] Specifies whether
 * automatic OS upgrade is supported on the image.
 */
export interface VirtualMachineImage extends VirtualMachineImageResource {
  plan?: PurchasePlan;
  osDiskImage?: OSDiskImage;
  dataDiskImages?: DataDiskImage[];
  automaticOSUpgradeProperties?: AutomaticOSUpgradeProperties;
}

/**
 * @class
 * Initializes a new instance of the UsageName class.
 * @constructor
 * The Usage Names.
 *
 * @property {string} [value] The name of the resource.
 * @property {string} [localizedValue] The localized name of the resource.
 */
export interface UsageName {
  value?: string;
  localizedValue?: string;
}

/**
 * @class
 * Initializes a new instance of the Usage class.
 * @constructor
 * Describes Compute Resource Usage.
 *
 * @property {number} currentValue The current usage of the resource.
 * @property {number} limit The maximum permitted usage of the resource.
 * @property {object} name The name of the type of usage.
 * @property {string} [name.value] The name of the resource.
 * @property {string} [name.localizedValue] The localized name of the resource.
 */
export interface Usage {
  currentValue: number;
  limit: number;
  name: UsageName;
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineReimageParameters class.
 * @constructor
 * Paramaters for Reimaging Virtual Machine. Default value for OSDisk : true.
 *
 * @property {boolean} [tempDisk] Specified whether to reimage temp disk.
 * Default value: false.
 */
export interface VirtualMachineReimageParameters {
  tempDisk?: boolean;
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineCaptureParameters class.
 * @constructor
 * Capture Virtual Machine parameters.
 *
 * @property {string} vhdPrefix The captured virtual hard disk's name prefix.
 * @property {string} destinationContainerName The destination container name.
 * @property {boolean} overwriteVhds Specifies whether to overwrite the
 * destination virtual hard disk, in case of conflict.
 */
export interface VirtualMachineCaptureParameters {
  vhdPrefix: string;
  destinationContainerName: string;
  overwriteVhds: boolean;
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineCaptureResult class.
 * @constructor
 * Output of virtual machine capture operation.
 *
 * @property {string} [schema] the schema of the captured virtual machine
 * @property {string} [contentVersion] the version of the content
 * @property {object} [parameters] parameters of the captured virtual machine
 * @property {array} [resources] a list of resource items of the captured
 * virtual machine
 */
export interface VirtualMachineCaptureResult extends SubResource {
  readonly schema?: string;
  readonly contentVersion?: string;
  readonly parameters?: any;
  readonly resources?: any[];
}

/**
 * @class
 * Initializes a new instance of the Plan class.
 * @constructor
 * Specifies information about the marketplace image used to create the virtual
 * machine. This element is only used for marketplace images. Before you can
 * use a marketplace image from an API, you must enable the image for
 * programmatic use.  In the Azure portal, find the marketplace image that you
 * want to use and then click **Want to deploy programmatically, Get Started
 * ->**. Enter any required information and then click **Save**.
 *
 * @property {string} [name] The plan ID.
 * @property {string} [publisher] The publisher ID.
 * @property {string} [product] Specifies the product of the image from the
 * marketplace. This is the same value as Offer under the imageReference
 * element.
 * @property {string} [promotionCode] The promotion code.
 */
export interface Plan {
  name?: string;
  publisher?: string;
  product?: string;
  promotionCode?: string;
}

/**
 * @class
 * Initializes a new instance of the HardwareProfile class.
 * @constructor
 * Specifies the hardware settings for the virtual machine.
 *
 * @property {string} [vmSize] Specifies the size of the virtual machine. For
 * more information about virtual machine sizes, see [Sizes for virtual
 * machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-sizes?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
 * <br><br> The available VM sizes depend on region and availability set. For a
 * list of available sizes use these APIs:  <br><br> [List all available
 * virtual machine sizes in an availability
 * set](https://docs.microsoft.com/rest/api/compute/availabilitysets/listavailablesizes)
 * <br><br> [List all available virtual machine sizes in a
 * region](https://docs.microsoft.com/rest/api/compute/virtualmachinesizes/list)
 * <br><br> [List all available virtual machine sizes for
 * resizing](https://docs.microsoft.com/rest/api/compute/virtualmachines/listavailablesizes).
 * Possible values include: 'Basic_A0', 'Basic_A1', 'Basic_A2', 'Basic_A3',
 * 'Basic_A4', 'Standard_A0', 'Standard_A1', 'Standard_A2', 'Standard_A3',
 * 'Standard_A4', 'Standard_A5', 'Standard_A6', 'Standard_A7', 'Standard_A8',
 * 'Standard_A9', 'Standard_A10', 'Standard_A11', 'Standard_A1_v2',
 * 'Standard_A2_v2', 'Standard_A4_v2', 'Standard_A8_v2', 'Standard_A2m_v2',
 * 'Standard_A4m_v2', 'Standard_A8m_v2', 'Standard_B1s', 'Standard_B1ms',
 * 'Standard_B2s', 'Standard_B2ms', 'Standard_B4ms', 'Standard_B8ms',
 * 'Standard_D1', 'Standard_D2', 'Standard_D3', 'Standard_D4', 'Standard_D11',
 * 'Standard_D12', 'Standard_D13', 'Standard_D14', 'Standard_D1_v2',
 * 'Standard_D2_v2', 'Standard_D3_v2', 'Standard_D4_v2', 'Standard_D5_v2',
 * 'Standard_D2_v3', 'Standard_D4_v3', 'Standard_D8_v3', 'Standard_D16_v3',
 * 'Standard_D32_v3', 'Standard_D64_v3', 'Standard_D2s_v3', 'Standard_D4s_v3',
 * 'Standard_D8s_v3', 'Standard_D16s_v3', 'Standard_D32s_v3',
 * 'Standard_D64s_v3', 'Standard_D11_v2', 'Standard_D12_v2', 'Standard_D13_v2',
 * 'Standard_D14_v2', 'Standard_D15_v2', 'Standard_DS1', 'Standard_DS2',
 * 'Standard_DS3', 'Standard_DS4', 'Standard_DS11', 'Standard_DS12',
 * 'Standard_DS13', 'Standard_DS14', 'Standard_DS1_v2', 'Standard_DS2_v2',
 * 'Standard_DS3_v2', 'Standard_DS4_v2', 'Standard_DS5_v2', 'Standard_DS11_v2',
 * 'Standard_DS12_v2', 'Standard_DS13_v2', 'Standard_DS14_v2',
 * 'Standard_DS15_v2', 'Standard_DS13-4_v2', 'Standard_DS13-2_v2',
 * 'Standard_DS14-8_v2', 'Standard_DS14-4_v2', 'Standard_E2_v3',
 * 'Standard_E4_v3', 'Standard_E8_v3', 'Standard_E16_v3', 'Standard_E32_v3',
 * 'Standard_E64_v3', 'Standard_E2s_v3', 'Standard_E4s_v3', 'Standard_E8s_v3',
 * 'Standard_E16s_v3', 'Standard_E32s_v3', 'Standard_E64s_v3',
 * 'Standard_E32-16_v3', 'Standard_E32-8s_v3', 'Standard_E64-32s_v3',
 * 'Standard_E64-16s_v3', 'Standard_F1', 'Standard_F2', 'Standard_F4',
 * 'Standard_F8', 'Standard_F16', 'Standard_F1s', 'Standard_F2s',
 * 'Standard_F4s', 'Standard_F8s', 'Standard_F16s', 'Standard_F2s_v2',
 * 'Standard_F4s_v2', 'Standard_F8s_v2', 'Standard_F16s_v2',
 * 'Standard_F32s_v2', 'Standard_F64s_v2', 'Standard_F72s_v2', 'Standard_G1',
 * 'Standard_G2', 'Standard_G3', 'Standard_G4', 'Standard_G5', 'Standard_GS1',
 * 'Standard_GS2', 'Standard_GS3', 'Standard_GS4', 'Standard_GS5',
 * 'Standard_GS4-8', 'Standard_GS4-4', 'Standard_GS5-16', 'Standard_GS5-8',
 * 'Standard_H8', 'Standard_H16', 'Standard_H8m', 'Standard_H16m',
 * 'Standard_H16r', 'Standard_H16mr', 'Standard_L4s', 'Standard_L8s',
 * 'Standard_L16s', 'Standard_L32s', 'Standard_M64s', 'Standard_M64ms',
 * 'Standard_M128s', 'Standard_M128ms', 'Standard_M64-32ms',
 * 'Standard_M64-16ms', 'Standard_M128-64ms', 'Standard_M128-32ms',
 * 'Standard_NC6', 'Standard_NC12', 'Standard_NC24', 'Standard_NC24r',
 * 'Standard_NC6s_v2', 'Standard_NC12s_v2', 'Standard_NC24s_v2',
 * 'Standard_NC24rs_v2', 'Standard_NC6s_v3', 'Standard_NC12s_v3',
 * 'Standard_NC24s_v3', 'Standard_NC24rs_v3', 'Standard_ND6s',
 * 'Standard_ND12s', 'Standard_ND24s', 'Standard_ND24rs', 'Standard_NV6',
 * 'Standard_NV12', 'Standard_NV24'
 */
export interface HardwareProfile {
  vmSize?: string;
}

/**
 * @class
 * Initializes a new instance of the ImageReference class.
 * @constructor
 * Specifies information about the image to use. You can specify information
 * about platform images, marketplace images, or virtual machine images. This
 * element is required when you want to use a platform image, marketplace
 * image, or virtual machine image, but is not used in other creation
 * operations.
 *
 * @property {string} [publisher] The image publisher.
 * @property {string} [offer] Specifies the offer of the platform image or
 * marketplace image used to create the virtual machine.
 * @property {string} [sku] The image SKU.
 * @property {string} [version] Specifies the version of the platform image or
 * marketplace image used to create the virtual machine. The allowed formats
 * are Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal
 * numbers. Specify 'latest' to use the latest version of an image available at
 * deploy time. Even if you use 'latest', the VM image will not automatically
 * update after deploy time even if a new version becomes available.
 */
export interface ImageReference extends SubResource {
  publisher?: string;
  offer?: string;
  sku?: string;
  version?: string;
}

/**
 * @class
 * Initializes a new instance of the KeyVaultSecretReference class.
 * @constructor
 * Describes a reference to Key Vault Secret
 *
 * @property {string} secretUrl The URL referencing a secret in a Key Vault.
 * @property {object} sourceVault The relative URL of the Key Vault containing
 * the secret.
 * @property {string} [sourceVault.id] Resource Id
 */
export interface KeyVaultSecretReference {
  secretUrl: string;
  sourceVault: SubResource;
}

/**
 * @class
 * Initializes a new instance of the KeyVaultKeyReference class.
 * @constructor
 * Describes a reference to Key Vault Key
 *
 * @property {string} keyUrl The URL referencing a key encryption key in Key
 * Vault.
 * @property {object} sourceVault The relative URL of the Key Vault containing
 * the key.
 * @property {string} [sourceVault.id] Resource Id
 */
export interface KeyVaultKeyReference {
  keyUrl: string;
  sourceVault: SubResource;
}

/**
 * @class
 * Initializes a new instance of the DiskEncryptionSettings class.
 * @constructor
 * Describes a Encryption Settings for a Disk
 *
 * @property {object} [diskEncryptionKey] Specifies the location of the disk
 * encryption key, which is a Key Vault Secret.
 * @property {string} [diskEncryptionKey.secretUrl] The URL referencing a
 * secret in a Key Vault.
 * @property {object} [diskEncryptionKey.sourceVault] The relative URL of the
 * Key Vault containing the secret.
 * @property {string} [diskEncryptionKey.sourceVault.id] Resource Id
 * @property {object} [keyEncryptionKey] Specifies the location of the key
 * encryption key in Key Vault.
 * @property {string} [keyEncryptionKey.keyUrl] The URL referencing a key
 * encryption key in Key Vault.
 * @property {object} [keyEncryptionKey.sourceVault] The relative URL of the
 * Key Vault containing the key.
 * @property {string} [keyEncryptionKey.sourceVault.id] Resource Id
 * @property {boolean} [enabled] Specifies whether disk encryption should be
 * enabled on the virtual machine.
 */
export interface DiskEncryptionSettings {
  diskEncryptionKey?: KeyVaultSecretReference;
  keyEncryptionKey?: KeyVaultKeyReference;
  enabled?: boolean;
}

/**
 * @class
 * Initializes a new instance of the VirtualHardDisk class.
 * @constructor
 * Describes the uri of a disk.
 *
 * @property {string} [uri] Specifies the virtual hard disk's uri.
 */
export interface VirtualHardDisk {
  uri?: string;
}

/**
 * @class
 * Initializes a new instance of the DiffDiskSettings class.
 * @constructor
 * Describes the parameters of differencing disk settings that can be be
 * specified for operating system disk. <br><br> NOTE: The differencing disk
 * settings can only be specified for managed disk.
 *
 * @property {string} [option] Specifies the differencing disk settings for
 * operating system disk. Possible values include: 'Local'
 */
export interface DiffDiskSettings {
  option?: string;
}

/**
 * @class
 * Initializes a new instance of the ManagedDiskParameters class.
 * @constructor
 * The parameters of a managed disk.
 *
 * @property {string} [storageAccountType] Specifies the storage account type
 * for the managed disk. NOTE: UltraSSD_LRS can only be used with data disks,
 * it cannot be used with OS Disk. Possible values include: 'Standard_LRS',
 * 'Premium_LRS', 'StandardSSD_LRS', 'UltraSSD_LRS'
 */
export interface ManagedDiskParameters extends SubResource {
  storageAccountType?: string;
}

/**
 * @class
 * Initializes a new instance of the OSDisk class.
 * @constructor
 * Specifies information about the operating system disk used by the virtual
 * machine. <br><br> For more information about disks, see [About disks and
 * VHDs for Azure virtual
 * machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
 *
 * @property {string} [osType] This property allows you to specify the type of
 * the OS that is included in the disk if creating a VM from user-image or a
 * specialized VHD. <br><br> Possible values are: <br><br> **Windows** <br><br>
 * **Linux**. Possible values include: 'Windows', 'Linux'
 * @property {object} [encryptionSettings] Specifies the encryption settings
 * for the OS Disk. <br><br> Minimum api-version: 2015-06-15
 * @property {object} [encryptionSettings.diskEncryptionKey] Specifies the
 * location of the disk encryption key, which is a Key Vault Secret.
 * @property {string} [encryptionSettings.diskEncryptionKey.secretUrl] The URL
 * referencing a secret in a Key Vault.
 * @property {object} [encryptionSettings.diskEncryptionKey.sourceVault] The
 * relative URL of the Key Vault containing the secret.
 * @property {string} [encryptionSettings.diskEncryptionKey.sourceVault.id]
 * Resource Id
 * @property {object} [encryptionSettings.keyEncryptionKey] Specifies the
 * location of the key encryption key in Key Vault.
 * @property {string} [encryptionSettings.keyEncryptionKey.keyUrl] The URL
 * referencing a key encryption key in Key Vault.
 * @property {object} [encryptionSettings.keyEncryptionKey.sourceVault] The
 * relative URL of the Key Vault containing the key.
 * @property {string} [encryptionSettings.keyEncryptionKey.sourceVault.id]
 * Resource Id
 * @property {boolean} [encryptionSettings.enabled] Specifies whether disk
 * encryption should be enabled on the virtual machine.
 * @property {string} [name] The disk name.
 * @property {object} [vhd] The virtual hard disk.
 * @property {string} [vhd.uri] Specifies the virtual hard disk's uri.
 * @property {object} [image] The source user image virtual hard disk. The
 * virtual hard disk will be copied before being attached to the virtual
 * machine. If SourceImage is provided, the destination virtual hard drive must
 * not exist.
 * @property {string} [image.uri] Specifies the virtual hard disk's uri.
 * @property {string} [caching] Specifies the caching requirements. <br><br>
 * Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br>
 * **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly for
 * Premium storage**. Possible values include: 'None', 'ReadOnly', 'ReadWrite'
 * @property {boolean} [writeAcceleratorEnabled] Specifies whether
 * writeAccelerator should be enabled or disabled on the disk.
 * @property {object} [diffDiskSettings] Specifies the differencing Disk
 * Settings for the operating system disk used by the virtual machine.
 * @property {string} [diffDiskSettings.option] Specifies the differencing disk
 * settings for operating system disk. Possible values include: 'Local'
 * @property {string} createOption Specifies how the virtual machine should be
 * created.<br><br> Possible values are:<br><br> **Attach** \u2013 This value
 * is used when you are using a specialized disk to create the virtual
 * machine.<br><br> **FromImage** \u2013 This value is used when you are using
 * an image to create the virtual machine. If you are using a platform image,
 * you also use the imageReference element described above. If you are using a
 * marketplace image, you  also use the plan element previously described.
 * Possible values include: 'FromImage', 'Empty', 'Attach'
 * @property {number} [diskSizeGB] Specifies the size of an empty data disk in
 * gigabytes. This element can be used to overwrite the size of the disk in a
 * virtual machine image. <br><br> This value cannot be larger than 1023 GB
 * @property {object} [managedDisk] The managed disk parameters.
 * @property {string} [managedDisk.storageAccountType] Specifies the storage
 * account type for the managed disk. NOTE: UltraSSD_LRS can only be used with
 * data disks, it cannot be used with OS Disk. Possible values include:
 * 'Standard_LRS', 'Premium_LRS', 'StandardSSD_LRS', 'UltraSSD_LRS'
 */
export interface OSDisk {
  osType?: string;
  encryptionSettings?: DiskEncryptionSettings;
  name?: string;
  vhd?: VirtualHardDisk;
  image?: VirtualHardDisk;
  caching?: string;
  writeAcceleratorEnabled?: boolean;
  diffDiskSettings?: DiffDiskSettings;
  createOption: string;
  diskSizeGB?: number;
  managedDisk?: ManagedDiskParameters;
}

/**
 * @class
 * Initializes a new instance of the DataDisk class.
 * @constructor
 * Describes a data disk.
 *
 * @property {number} lun Specifies the logical unit number of the data disk.
 * This value is used to identify data disks within the VM and therefore must
 * be unique for each data disk attached to a VM.
 * @property {string} [name] The disk name.
 * @property {object} [vhd] The virtual hard disk.
 * @property {string} [vhd.uri] Specifies the virtual hard disk's uri.
 * @property {object} [image] The source user image virtual hard disk. The
 * virtual hard disk will be copied before being attached to the virtual
 * machine. If SourceImage is provided, the destination virtual hard drive must
 * not exist.
 * @property {string} [image.uri] Specifies the virtual hard disk's uri.
 * @property {string} [caching] Specifies the caching requirements. <br><br>
 * Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br>
 * **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly for
 * Premium storage**. Possible values include: 'None', 'ReadOnly', 'ReadWrite'
 * @property {boolean} [writeAcceleratorEnabled] Specifies whether
 * writeAccelerator should be enabled or disabled on the disk.
 * @property {string} createOption Specifies how the virtual machine should be
 * created.<br><br> Possible values are:<br><br> **Attach** \u2013 This value
 * is used when you are using a specialized disk to create the virtual
 * machine.<br><br> **FromImage** \u2013 This value is used when you are using
 * an image to create the virtual machine. If you are using a platform image,
 * you also use the imageReference element described above. If you are using a
 * marketplace image, you  also use the plan element previously described.
 * Possible values include: 'FromImage', 'Empty', 'Attach'
 * @property {number} [diskSizeGB] Specifies the size of an empty data disk in
 * gigabytes. This element can be used to overwrite the size of the disk in a
 * virtual machine image. <br><br> This value cannot be larger than 1023 GB
 * @property {object} [managedDisk] The managed disk parameters.
 * @property {string} [managedDisk.storageAccountType] Specifies the storage
 * account type for the managed disk. NOTE: UltraSSD_LRS can only be used with
 * data disks, it cannot be used with OS Disk. Possible values include:
 * 'Standard_LRS', 'Premium_LRS', 'StandardSSD_LRS', 'UltraSSD_LRS'
 */
export interface DataDisk {
  lun: number;
  name?: string;
  vhd?: VirtualHardDisk;
  image?: VirtualHardDisk;
  caching?: string;
  writeAcceleratorEnabled?: boolean;
  createOption: string;
  diskSizeGB?: number;
  managedDisk?: ManagedDiskParameters;
}

/**
 * @class
 * Initializes a new instance of the StorageProfile class.
 * @constructor
 * Specifies the storage settings for the virtual machine disks.
 *
 * @property {object} [imageReference] Specifies information about the image to
 * use. You can specify information about platform images, marketplace images,
 * or virtual machine images. This element is required when you want to use a
 * platform image, marketplace image, or virtual machine image, but is not used
 * in other creation operations.
 * @property {string} [imageReference.publisher] The image publisher.
 * @property {string} [imageReference.offer] Specifies the offer of the
 * platform image or marketplace image used to create the virtual machine.
 * @property {string} [imageReference.sku] The image SKU.
 * @property {string} [imageReference.version] Specifies the version of the
 * platform image or marketplace image used to create the virtual machine. The
 * allowed formats are Major.Minor.Build or 'latest'. Major, Minor, and Build
 * are decimal numbers. Specify 'latest' to use the latest version of an image
 * available at deploy time. Even if you use 'latest', the VM image will not
 * automatically update after deploy time even if a new version becomes
 * available.
 * @property {object} [osDisk] Specifies information about the operating system
 * disk used by the virtual machine. <br><br> For more information about disks,
 * see [About disks and VHDs for Azure virtual
 * machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
 * @property {string} [osDisk.osType] This property allows you to specify the
 * type of the OS that is included in the disk if creating a VM from user-image
 * or a specialized VHD. <br><br> Possible values are: <br><br> **Windows**
 * <br><br> **Linux**. Possible values include: 'Windows', 'Linux'
 * @property {object} [osDisk.encryptionSettings] Specifies the encryption
 * settings for the OS Disk. <br><br> Minimum api-version: 2015-06-15
 * @property {object} [osDisk.encryptionSettings.diskEncryptionKey] Specifies
 * the location of the disk encryption key, which is a Key Vault Secret.
 * @property {string} [osDisk.encryptionSettings.diskEncryptionKey.secretUrl]
 * The URL referencing a secret in a Key Vault.
 * @property {object} [osDisk.encryptionSettings.diskEncryptionKey.sourceVault]
 * The relative URL of the Key Vault containing the secret.
 * @property {string}
 * [osDisk.encryptionSettings.diskEncryptionKey.sourceVault.id] Resource Id
 * @property {object} [osDisk.encryptionSettings.keyEncryptionKey] Specifies
 * the location of the key encryption key in Key Vault.
 * @property {string} [osDisk.encryptionSettings.keyEncryptionKey.keyUrl] The
 * URL referencing a key encryption key in Key Vault.
 * @property {object} [osDisk.encryptionSettings.keyEncryptionKey.sourceVault]
 * The relative URL of the Key Vault containing the key.
 * @property {string}
 * [osDisk.encryptionSettings.keyEncryptionKey.sourceVault.id] Resource Id
 * @property {boolean} [osDisk.encryptionSettings.enabled] Specifies whether
 * disk encryption should be enabled on the virtual machine.
 * @property {string} [osDisk.name] The disk name.
 * @property {object} [osDisk.vhd] The virtual hard disk.
 * @property {string} [osDisk.vhd.uri] Specifies the virtual hard disk's uri.
 * @property {object} [osDisk.image] The source user image virtual hard disk.
 * The virtual hard disk will be copied before being attached to the virtual
 * machine. If SourceImage is provided, the destination virtual hard drive must
 * not exist.
 * @property {string} [osDisk.image.uri] Specifies the virtual hard disk's uri.
 * @property {string} [osDisk.caching] Specifies the caching requirements.
 * <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly**
 * <br><br> **ReadWrite** <br><br> Default: **None for Standard storage.
 * ReadOnly for Premium storage**. Possible values include: 'None', 'ReadOnly',
 * 'ReadWrite'
 * @property {boolean} [osDisk.writeAcceleratorEnabled] Specifies whether
 * writeAccelerator should be enabled or disabled on the disk.
 * @property {object} [osDisk.diffDiskSettings] Specifies the differencing Disk
 * Settings for the operating system disk used by the virtual machine.
 * @property {string} [osDisk.diffDiskSettings.option] Specifies the
 * differencing disk settings for operating system disk. Possible values
 * include: 'Local'
 * @property {string} [osDisk.createOption] Specifies how the virtual machine
 * should be created.<br><br> Possible values are:<br><br> **Attach** \u2013
 * This value is used when you are using a specialized disk to create the
 * virtual machine.<br><br> **FromImage** \u2013 This value is used when you
 * are using an image to create the virtual machine. If you are using a
 * platform image, you also use the imageReference element described above. If
 * you are using a marketplace image, you  also use the plan element previously
 * described. Possible values include: 'FromImage', 'Empty', 'Attach'
 * @property {number} [osDisk.diskSizeGB] Specifies the size of an empty data
 * disk in gigabytes. This element can be used to overwrite the size of the
 * disk in a virtual machine image. <br><br> This value cannot be larger than
 * 1023 GB
 * @property {object} [osDisk.managedDisk] The managed disk parameters.
 * @property {string} [osDisk.managedDisk.storageAccountType] Specifies the
 * storage account type for the managed disk. NOTE: UltraSSD_LRS can only be
 * used with data disks, it cannot be used with OS Disk. Possible values
 * include: 'Standard_LRS', 'Premium_LRS', 'StandardSSD_LRS', 'UltraSSD_LRS'
 * @property {array} [dataDisks] Specifies the parameters that are used to add
 * a data disk to a virtual machine. <br><br> For more information about disks,
 * see [About disks and VHDs for Azure virtual
 * machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
 */
export interface StorageProfile {
  imageReference?: ImageReference;
  osDisk?: OSDisk;
  dataDisks?: DataDisk[];
}

/**
 * @class
 * Initializes a new instance of the AdditionalCapabilities class.
 * @constructor
 * Enables or disables a capability on the virtual machine or virtual machine
 * scale set.
 *
 * @property {boolean} [ultraSSDEnabled] The flag that enables or disables a
 * capability to have one or more managed data disks with UltraSSD_LRS storage
 * account type on the VM or VMSS. Managed disks with storage account type
 * UltraSSD_LRS can be added to a virtual machine or virtual machine scale set
 * only if this property is enabled.
 */
export interface AdditionalCapabilities {
  ultraSSDEnabled?: boolean;
}

/**
 * @class
 * Initializes a new instance of the AdditionalUnattendContent class.
 * @constructor
 * Specifies additional XML formatted information that can be included in the
 * Unattend.xml file, which is used by Windows Setup. Contents are defined by
 * setting name, component name, and the pass in which the content is applied.
 *
 * @property {string} [passName] The pass name. Currently, the only allowable
 * value is OobeSystem. Possible values include: 'OobeSystem'
 * @property {string} [componentName] The component name. Currently, the only
 * allowable value is Microsoft-Windows-Shell-Setup. Possible values include:
 * 'Microsoft-Windows-Shell-Setup'
 * @property {string} [settingName] Specifies the name of the setting to which
 * the content applies. Possible values are: FirstLogonCommands and AutoLogon.
 * Possible values include: 'AutoLogon', 'FirstLogonCommands'
 * @property {string} [content] Specifies the XML formatted content that is
 * added to the unattend.xml file for the specified path and component. The XML
 * must be less than 4KB and must include the root element for the setting or
 * feature that is being inserted.
 */
export interface AdditionalUnattendContent {
  passName?: string;
  componentName?: string;
  settingName?: string;
  content?: string;
}

/**
 * @class
 * Initializes a new instance of the WinRMListener class.
 * @constructor
 * Describes Protocol and thumbprint of Windows Remote Management listener
 *
 * @property {string} [protocol] Specifies the protocol of listener. <br><br>
 * Possible values are: <br>**http** <br><br> **https**. Possible values
 * include: 'Http', 'Https'
 * @property {string} [certificateUrl] This is the URL of a certificate that
 * has been uploaded to Key Vault as a secret. For adding a secret to the Key
 * Vault, see [Add a key or secret to the key
 * vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add).
 * In this case, your certificate needs to be It is the Base64 encoding of the
 * following JSON Object which is encoded in UTF-8: <br><br> {<br>
 * "data":"<Base64-encoded-certificate>",<br>  "dataType":"pfx",<br>
 * "password":"<pfx-file-password>"<br>}
 */
export interface WinRMListener {
  protocol?: string;
  certificateUrl?: string;
}

/**
 * @class
 * Initializes a new instance of the WinRMConfiguration class.
 * @constructor
 * Describes Windows Remote Management configuration of the VM
 *
 * @property {array} [listeners] The list of Windows Remote Management
 * listeners
 */
export interface WinRMConfiguration {
  listeners?: WinRMListener[];
}

/**
 * @class
 * Initializes a new instance of the WindowsConfiguration class.
 * @constructor
 * Specifies Windows operating system settings on the virtual machine.
 *
 * @property {boolean} [provisionVMAgent] Indicates whether virtual machine
 * agent should be provisioned on the virtual machine. <br><br> When this
 * property is not specified in the request body, default behavior is to set it
 * to true.  This will ensure that VM Agent is installed on the VM so that
 * extensions can be added to the VM later.
 * @property {boolean} [enableAutomaticUpdates] Indicates whether virtual
 * machine is enabled for automatic updates.
 * @property {string} [timeZone] Specifies the time zone of the virtual
 * machine. e.g. "Pacific Standard Time"
 * @property {array} [additionalUnattendContent] Specifies additional base-64
 * encoded XML formatted information that can be included in the Unattend.xml
 * file, which is used by Windows Setup.
 * @property {object} [winRM] Specifies the Windows Remote Management
 * listeners. This enables remote Windows PowerShell.
 * @property {array} [winRM.listeners] The list of Windows Remote Management
 * listeners
 */
export interface WindowsConfiguration {
  provisionVMAgent?: boolean;
  enableAutomaticUpdates?: boolean;
  timeZone?: string;
  additionalUnattendContent?: AdditionalUnattendContent[];
  winRM?: WinRMConfiguration;
}

/**
 * @class
 * Initializes a new instance of the SshPublicKey class.
 * @constructor
 * Contains information about SSH certificate public key and the path on the
 * Linux VM where the public key is placed.
 *
 * @property {string} [path] Specifies the full path on the created VM where
 * ssh public key is stored. If the file already exists, the specified key is
 * appended to the file. Example: /home/user/.ssh/authorized_keys
 * @property {string} [keyData] SSH public key certificate used to authenticate
 * with the VM through ssh. The key needs to be at least 2048-bit and in
 * ssh-rsa format. <br><br> For creating ssh keys, see [Create SSH keys on
 * Linux and Mac for Linux VMs in
 * Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-mac-create-ssh-keys?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json).
 */
export interface SshPublicKey {
  path?: string;
  keyData?: string;
}

/**
 * @class
 * Initializes a new instance of the SshConfiguration class.
 * @constructor
 * SSH configuration for Linux based VMs running on Azure
 *
 * @property {array} [publicKeys] The list of SSH public keys used to
 * authenticate with linux based VMs.
 */
export interface SshConfiguration {
  publicKeys?: SshPublicKey[];
}

/**
 * @class
 * Initializes a new instance of the LinuxConfiguration class.
 * @constructor
 * Specifies the Linux operating system settings on the virtual machine.
 * <br><br>For a list of supported Linux distributions, see [Linux on
 * Azure-Endorsed
 * Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-endorsed-distros?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
 * <br><br> For running non-endorsed distributions, see [Information for
 * Non-Endorsed
 * Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-create-upload-generic?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json).
 *
 * @property {boolean} [disablePasswordAuthentication] Specifies whether
 * password authentication should be disabled.
 * @property {object} [ssh] Specifies the ssh key configuration for a Linux OS.
 * @property {array} [ssh.publicKeys] The list of SSH public keys used to
 * authenticate with linux based VMs.
 * @property {boolean} [provisionVMAgent] Indicates whether virtual machine
 * agent should be provisioned on the virtual machine. <br><br> When this
 * property is not specified in the request body, default behavior is to set it
 * to true.  This will ensure that VM Agent is installed on the VM so that
 * extensions can be added to the VM later.
 */
export interface LinuxConfiguration {
  disablePasswordAuthentication?: boolean;
  ssh?: SshConfiguration;
  provisionVMAgent?: boolean;
}

/**
 * @class
 * Initializes a new instance of the VaultCertificate class.
 * @constructor
 * Describes a single certificate reference in a Key Vault, and where the
 * certificate should reside on the VM.
 *
 * @property {string} [certificateUrl] This is the URL of a certificate that
 * has been uploaded to Key Vault as a secret. For adding a secret to the Key
 * Vault, see [Add a key or secret to the key
 * vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add).
 * In this case, your certificate needs to be It is the Base64 encoding of the
 * following JSON Object which is encoded in UTF-8: <br><br> {<br>
 * "data":"<Base64-encoded-certificate>",<br>  "dataType":"pfx",<br>
 * "password":"<pfx-file-password>"<br>}
 * @property {string} [certificateStore] For Windows VMs, specifies the
 * certificate store on the Virtual Machine to which the certificate should be
 * added. The specified certificate store is implicitly in the LocalMachine
 * account. <br><br>For Linux VMs, the certificate file is placed under the
 * /var/lib/waagent directory, with the file name <UppercaseThumbprint>.crt for
 * the X509 certificate file and <UppercaseThumbpring>.prv for private key.
 * Both of these files are .pem formatted.
 */
export interface VaultCertificate {
  certificateUrl?: string;
  certificateStore?: string;
}

/**
 * @class
 * Initializes a new instance of the VaultSecretGroup class.
 * @constructor
 * Describes a set of certificates which are all in the same Key Vault.
 *
 * @property {object} [sourceVault] The relative URL of the Key Vault
 * containing all of the certificates in VaultCertificates.
 * @property {string} [sourceVault.id] Resource Id
 * @property {array} [vaultCertificates] The list of key vault references in
 * SourceVault which contain certificates.
 */
export interface VaultSecretGroup {
  sourceVault?: SubResource;
  vaultCertificates?: VaultCertificate[];
}

/**
 * @class
 * Initializes a new instance of the OSProfile class.
 * @constructor
 * Specifies the operating system settings for the virtual machine.
 *
 * @property {string} [computerName] Specifies the host OS name of the virtual
 * machine. <br><br> **Max-length (Windows):** 15 characters <br><br>
 * **Max-length (Linux):** 64 characters. <br><br> For naming conventions and
 * restrictions see [Azure infrastructure services implementation
 * guidelines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-infrastructure-subscription-accounts-guidelines?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json#1-naming-conventions).
 * @property {string} [adminUsername] Specifies the name of the administrator
 * account. <br><br> **Windows-only restriction:** Cannot end in "." <br><br>
 * **Disallowed values:** "administrator", "admin", "user", "user1", "test",
 * "user2", "test1", "user3", "admin1", "1", "123", "a", "actuser", "adm",
 * "admin2", "aspnet", "backup", "console", "david", "guest", "john", "owner",
 * "root", "server", "sql", "support", "support_388945a0", "sys", "test2",
 * "test3", "user4", "user5". <br><br> **Minimum-length (Linux):** 1  character
 * <br><br> **Max-length (Linux):** 64 characters <br><br> **Max-length
 * (Windows):** 20 characters  <br><br><li> For root access to the Linux VM,
 * see [Using root privileges on Linux virtual machines in
 * Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-use-root-privileges?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)<br><li>
 * For a list of built-in system users on Linux that should not be used in this
 * field, see [Selecting User Names for Linux on
 * Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-usernames?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
 * @property {string} [adminPassword] Specifies the password of the
 * administrator account. <br><br> **Minimum-length (Windows):** 8 characters
 * <br><br> **Minimum-length (Linux):** 6 characters <br><br> **Max-length
 * (Windows):** 123 characters <br><br> **Max-length (Linux):** 72 characters
 * <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be
 * fulfilled <br> Has lower characters <br>Has upper characters <br> Has a
 * digit <br> Has a special character (Regex match [\W_]) <br><br> **Disallowed
 * values:** "abc@123", "P@$$w0rd", "P@ssw0rd", "P@ssword123", "Pa$$word",
 * "pass@word1", "Password!", "Password1", "Password22", "iloveyou!" <br><br>
 * For resetting the password, see [How to reset the Remote Desktop service or
 * its login password in a Windows
 * VM](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-reset-rdp?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json)
 * <br><br> For resetting root password, see [Manage users, SSH, and check or
 * repair disks on Azure Linux VMs using the VMAccess
 * Extension](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-vmaccess-extension?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json#reset-root-password)
 * @property {string} [customData] Specifies a base-64 encoded string of custom
 * data. The base-64 encoded string is decoded to a binary array that is saved
 * as a file on the Virtual Machine. The maximum length of the binary array is
 * 65535 bytes. <br><br> For using cloud-init for your VM, see [Using
 * cloud-init to customize a Linux VM during
 * creation](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-cloud-init?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
 * @property {object} [windowsConfiguration] Specifies Windows operating system
 * settings on the virtual machine.
 * @property {boolean} [windowsConfiguration.provisionVMAgent] Indicates
 * whether virtual machine agent should be provisioned on the virtual machine.
 * <br><br> When this property is not specified in the request body, default
 * behavior is to set it to true.  This will ensure that VM Agent is installed
 * on the VM so that extensions can be added to the VM later.
 * @property {boolean} [windowsConfiguration.enableAutomaticUpdates] Indicates
 * whether virtual machine is enabled for automatic updates.
 * @property {string} [windowsConfiguration.timeZone] Specifies the time zone
 * of the virtual machine. e.g. "Pacific Standard Time"
 * @property {array} [windowsConfiguration.additionalUnattendContent] Specifies
 * additional base-64 encoded XML formatted information that can be included in
 * the Unattend.xml file, which is used by Windows Setup.
 * @property {object} [windowsConfiguration.winRM] Specifies the Windows Remote
 * Management listeners. This enables remote Windows PowerShell.
 * @property {array} [windowsConfiguration.winRM.listeners] The list of Windows
 * Remote Management listeners
 * @property {object} [linuxConfiguration] Specifies the Linux operating system
 * settings on the virtual machine. <br><br>For a list of supported Linux
 * distributions, see [Linux on Azure-Endorsed
 * Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-endorsed-distros?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
 * <br><br> For running non-endorsed distributions, see [Information for
 * Non-Endorsed
 * Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-create-upload-generic?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json).
 * @property {boolean} [linuxConfiguration.disablePasswordAuthentication]
 * Specifies whether password authentication should be disabled.
 * @property {object} [linuxConfiguration.ssh] Specifies the ssh key
 * configuration for a Linux OS.
 * @property {array} [linuxConfiguration.ssh.publicKeys] The list of SSH public
 * keys used to authenticate with linux based VMs.
 * @property {boolean} [linuxConfiguration.provisionVMAgent] Indicates whether
 * virtual machine agent should be provisioned on the virtual machine. <br><br>
 * When this property is not specified in the request body, default behavior is
 * to set it to true.  This will ensure that VM Agent is installed on the VM so
 * that extensions can be added to the VM later.
 * @property {array} [secrets] Specifies set of certificates that should be
 * installed onto the virtual machine.
 * @property {boolean} [allowExtensionOperations] Specifies whether extension
 * operations should be allowed on the virtual machine. <br><br>This may only
 * be set to False when no extensions are present on the virtual machine.
 */
export interface OSProfile {
  computerName?: string;
  adminUsername?: string;
  adminPassword?: string;
  customData?: string;
  windowsConfiguration?: WindowsConfiguration;
  linuxConfiguration?: LinuxConfiguration;
  secrets?: VaultSecretGroup[];
  allowExtensionOperations?: boolean;
}

/**
 * @class
 * Initializes a new instance of the NetworkInterfaceReference class.
 * @constructor
 * Describes a network interface reference.
 *
 * @property {boolean} [primary] Specifies the primary network interface in
 * case the virtual machine has more than 1 network interface.
 */
export interface NetworkInterfaceReference extends SubResource {
  primary?: boolean;
}

/**
 * @class
 * Initializes a new instance of the NetworkProfile class.
 * @constructor
 * Specifies the network interfaces of the virtual machine.
 *
 * @property {array} [networkInterfaces] Specifies the list of resource Ids for
 * the network interfaces associated with the virtual machine.
 */
export interface NetworkProfile {
  networkInterfaces?: NetworkInterfaceReference[];
}

/**
 * @class
 * Initializes a new instance of the BootDiagnostics class.
 * @constructor
 * Boot Diagnostics is a debugging feature which allows you to view Console
 * Output and Screenshot to diagnose VM status. <br><br> You can easily view
 * the output of your console log. <br><br> Azure also enables you to see a
 * screenshot of the VM from the hypervisor.
 *
 * @property {boolean} [enabled] Whether boot diagnostics should be enabled on
 * the Virtual Machine.
 * @property {string} [storageUri] Uri of the storage account to use for
 * placing the console output and screenshot.
 */
export interface BootDiagnostics {
  enabled?: boolean;
  storageUri?: string;
}

/**
 * @class
 * Initializes a new instance of the DiagnosticsProfile class.
 * @constructor
 * Specifies the boot diagnostic settings state. <br><br>Minimum api-version:
 * 2015-06-15.
 *
 * @property {object} [bootDiagnostics] Boot Diagnostics is a debugging feature
 * which allows you to view Console Output and Screenshot to diagnose VM
 * status. <br><br> You can easily view the output of your console log.
 * <br><br> Azure also enables you to see a screenshot of the VM from the
 * hypervisor.
 * @property {boolean} [bootDiagnostics.enabled] Whether boot diagnostics
 * should be enabled on the Virtual Machine.
 * @property {string} [bootDiagnostics.storageUri] Uri of the storage account
 * to use for placing the console output and screenshot.
 */
export interface DiagnosticsProfile {
  bootDiagnostics?: BootDiagnostics;
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineExtensionHandlerInstanceView class.
 * @constructor
 * The instance view of a virtual machine extension handler.
 *
 * @property {string} [type] Specifies the type of the extension; an example is
 * "CustomScriptExtension".
 * @property {string} [typeHandlerVersion] Specifies the version of the script
 * handler.
 * @property {object} [status] The extension handler status.
 * @property {string} [status.code] The status code.
 * @property {string} [status.level] The level code. Possible values include:
 * 'Info', 'Warning', 'Error'
 * @property {string} [status.displayStatus] The short localizable label for
 * the status.
 * @property {string} [status.message] The detailed status message, including
 * for alerts and error messages.
 * @property {date} [status.time] The time of the status.
 */
export interface VirtualMachineExtensionHandlerInstanceView {
  type?: string;
  typeHandlerVersion?: string;
  status?: InstanceViewStatus;
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineAgentInstanceView class.
 * @constructor
 * The instance view of the VM Agent running on the virtual machine.
 *
 * @property {string} [vmAgentVersion] The VM Agent full version.
 * @property {array} [extensionHandlers] The virtual machine extension handler
 * instance view.
 * @property {array} [statuses] The resource status information.
 */
export interface VirtualMachineAgentInstanceView {
  vmAgentVersion?: string;
  extensionHandlers?: VirtualMachineExtensionHandlerInstanceView[];
  statuses?: InstanceViewStatus[];
}

/**
 * @class
 * Initializes a new instance of the DiskInstanceView class.
 * @constructor
 * The instance view of the disk.
 *
 * @property {string} [name] The disk name.
 * @property {array} [encryptionSettings] Specifies the encryption settings for
 * the OS Disk. <br><br> Minimum api-version: 2015-06-15
 * @property {array} [statuses] The resource status information.
 */
export interface DiskInstanceView {
  name?: string;
  encryptionSettings?: DiskEncryptionSettings[];
  statuses?: InstanceViewStatus[];
}

/**
 * @class
 * Initializes a new instance of the BootDiagnosticsInstanceView class.
 * @constructor
 * The instance view of a virtual machine boot diagnostics.
 *
 * @property {string} [consoleScreenshotBlobUri] The console screenshot blob
 * URI.
 * @property {string} [serialConsoleLogBlobUri] The Linux serial console log
 * blob Uri.
 * @property {object} [status] The boot diagnostics status information for the
 * VM. <br><br> NOTE: It will be set only if there are errors encountered in
 * enabling boot diagnostics.
 * @property {string} [status.code] The status code.
 * @property {string} [status.level] The level code. Possible values include:
 * 'Info', 'Warning', 'Error'
 * @property {string} [status.displayStatus] The short localizable label for
 * the status.
 * @property {string} [status.message] The detailed status message, including
 * for alerts and error messages.
 * @property {date} [status.time] The time of the status.
 */
export interface BootDiagnosticsInstanceView {
  readonly consoleScreenshotBlobUri?: string;
  readonly serialConsoleLogBlobUri?: string;
  readonly status?: InstanceViewStatus;
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineIdentityUserAssignedIdentitiesValue class.
 * @constructor
 * @property {string} [principalId] The principal id of user assigned identity.
 * @property {string} [clientId] The client id of user assigned identity.
 */
export interface VirtualMachineIdentityUserAssignedIdentitiesValue {
  readonly principalId?: string;
  readonly clientId?: string;
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineIdentity class.
 * @constructor
 * Identity for the virtual machine.
 *
 * @property {string} [principalId] The principal id of virtual machine
 * identity. This property will only be provided for a system assigned
 * identity.
 * @property {string} [tenantId] The tenant id associated with the virtual
 * machine. This property will only be provided for a system assigned identity.
 * @property {string} [type] The type of identity used for the virtual machine.
 * The type 'SystemAssigned, UserAssigned' includes both an implicitly created
 * identity and a set of user assigned identities. The type 'None' will remove
 * any identities from the virtual machine. Possible values include:
 * 'SystemAssigned', 'UserAssigned', 'SystemAssigned, UserAssigned', 'None'
 * @property {object} [userAssignedIdentities] The list of user identities
 * associated with the Virtual Machine. The user identity dictionary key
 * references will be ARM resource ids in the form:
 * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
 */
export interface VirtualMachineIdentity {
  readonly principalId?: string;
  readonly tenantId?: string;
  type?: string;
  userAssignedIdentities?: { [propertyName: string]: VirtualMachineIdentityUserAssignedIdentitiesValue };
}

/**
 * @class
 * Initializes a new instance of the MaintenanceRedeployStatus class.
 * @constructor
 * Maintenance Operation Status.
 *
 * @property {boolean} [isCustomerInitiatedMaintenanceAllowed] True, if
 * customer is allowed to perform Maintenance.
 * @property {date} [preMaintenanceWindowStartTime] Start Time for the Pre
 * Maintenance Window.
 * @property {date} [preMaintenanceWindowEndTime] End Time for the Pre
 * Maintenance Window.
 * @property {date} [maintenanceWindowStartTime] Start Time for the Maintenance
 * Window.
 * @property {date} [maintenanceWindowEndTime] End Time for the Maintenance
 * Window.
 * @property {string} [lastOperationResultCode] The Last Maintenance Operation
 * Result Code. Possible values include: 'None', 'RetryLater',
 * 'MaintenanceAborted', 'MaintenanceCompleted'
 * @property {string} [lastOperationMessage] Message returned for the last
 * Maintenance Operation.
 */
export interface MaintenanceRedeployStatus {
  isCustomerInitiatedMaintenanceAllowed?: boolean;
  preMaintenanceWindowStartTime?: Date;
  preMaintenanceWindowEndTime?: Date;
  maintenanceWindowStartTime?: Date;
  maintenanceWindowEndTime?: Date;
  lastOperationResultCode?: string;
  lastOperationMessage?: string;
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineInstanceView class.
 * @constructor
 * The instance view of a virtual machine.
 *
 * @property {number} [platformUpdateDomain] Specifies the update domain of the
 * virtual machine.
 * @property {number} [platformFaultDomain] Specifies the fault domain of the
 * virtual machine.
 * @property {string} [computerName] The computer name assigned to the virtual
 * machine.
 * @property {string} [osName] The Operating System running on the virtual
 * machine.
 * @property {string} [osVersion] The version of Operating System running on
 * the virtual machine.
 * @property {string} [rdpThumbPrint] The Remote desktop certificate
 * thumbprint.
 * @property {object} [vmAgent] The VM Agent running on the virtual machine.
 * @property {string} [vmAgent.vmAgentVersion] The VM Agent full version.
 * @property {array} [vmAgent.extensionHandlers] The virtual machine extension
 * handler instance view.
 * @property {array} [vmAgent.statuses] The resource status information.
 * @property {object} [maintenanceRedeployStatus] The Maintenance Operation
 * status on the virtual machine.
 * @property {boolean}
 * [maintenanceRedeployStatus.isCustomerInitiatedMaintenanceAllowed] True, if
 * customer is allowed to perform Maintenance.
 * @property {date} [maintenanceRedeployStatus.preMaintenanceWindowStartTime]
 * Start Time for the Pre Maintenance Window.
 * @property {date} [maintenanceRedeployStatus.preMaintenanceWindowEndTime] End
 * Time for the Pre Maintenance Window.
 * @property {date} [maintenanceRedeployStatus.maintenanceWindowStartTime]
 * Start Time for the Maintenance Window.
 * @property {date} [maintenanceRedeployStatus.maintenanceWindowEndTime] End
 * Time for the Maintenance Window.
 * @property {string} [maintenanceRedeployStatus.lastOperationResultCode] The
 * Last Maintenance Operation Result Code. Possible values include: 'None',
 * 'RetryLater', 'MaintenanceAborted', 'MaintenanceCompleted'
 * @property {string} [maintenanceRedeployStatus.lastOperationMessage] Message
 * returned for the last Maintenance Operation.
 * @property {array} [disks] The virtual machine disk information.
 * @property {array} [extensions] The extensions information.
 * @property {object} [bootDiagnostics] Boot Diagnostics is a debugging feature
 * which allows you to view Console Output and Screenshot to diagnose VM
 * status. <br><br> You can easily view the output of your console log.
 * <br><br> Azure also enables you to see a screenshot of the VM from the
 * hypervisor.
 * @property {string} [bootDiagnostics.consoleScreenshotBlobUri] The console
 * screenshot blob URI.
 * @property {string} [bootDiagnostics.serialConsoleLogBlobUri] The Linux
 * serial console log blob Uri.
 * @property {object} [bootDiagnostics.status] The boot diagnostics status
 * information for the VM. <br><br> NOTE: It will be set only if there are
 * errors encountered in enabling boot diagnostics.
 * @property {string} [bootDiagnostics.status.code] The status code.
 * @property {string} [bootDiagnostics.status.level] The level code. Possible
 * values include: 'Info', 'Warning', 'Error'
 * @property {string} [bootDiagnostics.status.displayStatus] The short
 * localizable label for the status.
 * @property {string} [bootDiagnostics.status.message] The detailed status
 * message, including for alerts and error messages.
 * @property {date} [bootDiagnostics.status.time] The time of the status.
 * @property {array} [statuses] The resource status information.
 */
export interface VirtualMachineInstanceView {
  platformUpdateDomain?: number;
  platformFaultDomain?: number;
  computerName?: string;
  osName?: string;
  osVersion?: string;
  rdpThumbPrint?: string;
  vmAgent?: VirtualMachineAgentInstanceView;
  maintenanceRedeployStatus?: MaintenanceRedeployStatus;
  disks?: DiskInstanceView[];
  extensions?: VirtualMachineExtensionInstanceView[];
  bootDiagnostics?: BootDiagnosticsInstanceView;
  statuses?: InstanceViewStatus[];
}

/**
 * @class
 * Initializes a new instance of the VirtualMachine class.
 * @constructor
 * Describes a Virtual Machine.
 *
 * @property {object} [plan] Specifies information about the marketplace image
 * used to create the virtual machine. This element is only used for
 * marketplace images. Before you can use a marketplace image from an API, you
 * must enable the image for programmatic use.  In the Azure portal, find the
 * marketplace image that you want to use and then click **Want to deploy
 * programmatically, Get Started ->**. Enter any required information and then
 * click **Save**.
 * @property {string} [plan.name] The plan ID.
 * @property {string} [plan.publisher] The publisher ID.
 * @property {string} [plan.product] Specifies the product of the image from
 * the marketplace. This is the same value as Offer under the imageReference
 * element.
 * @property {string} [plan.promotionCode] The promotion code.
 * @property {object} [hardwareProfile] Specifies the hardware settings for the
 * virtual machine.
 * @property {string} [hardwareProfile.vmSize] Specifies the size of the
 * virtual machine. For more information about virtual machine sizes, see
 * [Sizes for virtual
 * machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-sizes?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
 * <br><br> The available VM sizes depend on region and availability set. For a
 * list of available sizes use these APIs:  <br><br> [List all available
 * virtual machine sizes in an availability
 * set](https://docs.microsoft.com/rest/api/compute/availabilitysets/listavailablesizes)
 * <br><br> [List all available virtual machine sizes in a
 * region](https://docs.microsoft.com/rest/api/compute/virtualmachinesizes/list)
 * <br><br> [List all available virtual machine sizes for
 * resizing](https://docs.microsoft.com/rest/api/compute/virtualmachines/listavailablesizes).
 * Possible values include: 'Basic_A0', 'Basic_A1', 'Basic_A2', 'Basic_A3',
 * 'Basic_A4', 'Standard_A0', 'Standard_A1', 'Standard_A2', 'Standard_A3',
 * 'Standard_A4', 'Standard_A5', 'Standard_A6', 'Standard_A7', 'Standard_A8',
 * 'Standard_A9', 'Standard_A10', 'Standard_A11', 'Standard_A1_v2',
 * 'Standard_A2_v2', 'Standard_A4_v2', 'Standard_A8_v2', 'Standard_A2m_v2',
 * 'Standard_A4m_v2', 'Standard_A8m_v2', 'Standard_B1s', 'Standard_B1ms',
 * 'Standard_B2s', 'Standard_B2ms', 'Standard_B4ms', 'Standard_B8ms',
 * 'Standard_D1', 'Standard_D2', 'Standard_D3', 'Standard_D4', 'Standard_D11',
 * 'Standard_D12', 'Standard_D13', 'Standard_D14', 'Standard_D1_v2',
 * 'Standard_D2_v2', 'Standard_D3_v2', 'Standard_D4_v2', 'Standard_D5_v2',
 * 'Standard_D2_v3', 'Standard_D4_v3', 'Standard_D8_v3', 'Standard_D16_v3',
 * 'Standard_D32_v3', 'Standard_D64_v3', 'Standard_D2s_v3', 'Standard_D4s_v3',
 * 'Standard_D8s_v3', 'Standard_D16s_v3', 'Standard_D32s_v3',
 * 'Standard_D64s_v3', 'Standard_D11_v2', 'Standard_D12_v2', 'Standard_D13_v2',
 * 'Standard_D14_v2', 'Standard_D15_v2', 'Standard_DS1', 'Standard_DS2',
 * 'Standard_DS3', 'Standard_DS4', 'Standard_DS11', 'Standard_DS12',
 * 'Standard_DS13', 'Standard_DS14', 'Standard_DS1_v2', 'Standard_DS2_v2',
 * 'Standard_DS3_v2', 'Standard_DS4_v2', 'Standard_DS5_v2', 'Standard_DS11_v2',
 * 'Standard_DS12_v2', 'Standard_DS13_v2', 'Standard_DS14_v2',
 * 'Standard_DS15_v2', 'Standard_DS13-4_v2', 'Standard_DS13-2_v2',
 * 'Standard_DS14-8_v2', 'Standard_DS14-4_v2', 'Standard_E2_v3',
 * 'Standard_E4_v3', 'Standard_E8_v3', 'Standard_E16_v3', 'Standard_E32_v3',
 * 'Standard_E64_v3', 'Standard_E2s_v3', 'Standard_E4s_v3', 'Standard_E8s_v3',
 * 'Standard_E16s_v3', 'Standard_E32s_v3', 'Standard_E64s_v3',
 * 'Standard_E32-16_v3', 'Standard_E32-8s_v3', 'Standard_E64-32s_v3',
 * 'Standard_E64-16s_v3', 'Standard_F1', 'Standard_F2', 'Standard_F4',
 * 'Standard_F8', 'Standard_F16', 'Standard_F1s', 'Standard_F2s',
 * 'Standard_F4s', 'Standard_F8s', 'Standard_F16s', 'Standard_F2s_v2',
 * 'Standard_F4s_v2', 'Standard_F8s_v2', 'Standard_F16s_v2',
 * 'Standard_F32s_v2', 'Standard_F64s_v2', 'Standard_F72s_v2', 'Standard_G1',
 * 'Standard_G2', 'Standard_G3', 'Standard_G4', 'Standard_G5', 'Standard_GS1',
 * 'Standard_GS2', 'Standard_GS3', 'Standard_GS4', 'Standard_GS5',
 * 'Standard_GS4-8', 'Standard_GS4-4', 'Standard_GS5-16', 'Standard_GS5-8',
 * 'Standard_H8', 'Standard_H16', 'Standard_H8m', 'Standard_H16m',
 * 'Standard_H16r', 'Standard_H16mr', 'Standard_L4s', 'Standard_L8s',
 * 'Standard_L16s', 'Standard_L32s', 'Standard_M64s', 'Standard_M64ms',
 * 'Standard_M128s', 'Standard_M128ms', 'Standard_M64-32ms',
 * 'Standard_M64-16ms', 'Standard_M128-64ms', 'Standard_M128-32ms',
 * 'Standard_NC6', 'Standard_NC12', 'Standard_NC24', 'Standard_NC24r',
 * 'Standard_NC6s_v2', 'Standard_NC12s_v2', 'Standard_NC24s_v2',
 * 'Standard_NC24rs_v2', 'Standard_NC6s_v3', 'Standard_NC12s_v3',
 * 'Standard_NC24s_v3', 'Standard_NC24rs_v3', 'Standard_ND6s',
 * 'Standard_ND12s', 'Standard_ND24s', 'Standard_ND24rs', 'Standard_NV6',
 * 'Standard_NV12', 'Standard_NV24'
 * @property {object} [storageProfile] Specifies the storage settings for the
 * virtual machine disks.
 * @property {object} [storageProfile.imageReference] Specifies information
 * about the image to use. You can specify information about platform images,
 * marketplace images, or virtual machine images. This element is required when
 * you want to use a platform image, marketplace image, or virtual machine
 * image, but is not used in other creation operations.
 * @property {string} [storageProfile.imageReference.publisher] The image
 * publisher.
 * @property {string} [storageProfile.imageReference.offer] Specifies the offer
 * of the platform image or marketplace image used to create the virtual
 * machine.
 * @property {string} [storageProfile.imageReference.sku] The image SKU.
 * @property {string} [storageProfile.imageReference.version] Specifies the
 * version of the platform image or marketplace image used to create the
 * virtual machine. The allowed formats are Major.Minor.Build or 'latest'.
 * Major, Minor, and Build are decimal numbers. Specify 'latest' to use the
 * latest version of an image available at deploy time. Even if you use
 * 'latest', the VM image will not automatically update after deploy time even
 * if a new version becomes available.
 * @property {object} [storageProfile.osDisk] Specifies information about the
 * operating system disk used by the virtual machine. <br><br> For more
 * information about disks, see [About disks and VHDs for Azure virtual
 * machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
 * @property {string} [storageProfile.osDisk.osType] This property allows you
 * to specify the type of the OS that is included in the disk if creating a VM
 * from user-image or a specialized VHD. <br><br> Possible values are: <br><br>
 * **Windows** <br><br> **Linux**. Possible values include: 'Windows', 'Linux'
 * @property {object} [storageProfile.osDisk.encryptionSettings] Specifies the
 * encryption settings for the OS Disk. <br><br> Minimum api-version:
 * 2015-06-15
 * @property {object}
 * [storageProfile.osDisk.encryptionSettings.diskEncryptionKey] Specifies the
 * location of the disk encryption key, which is a Key Vault Secret.
 * @property {string}
 * [storageProfile.osDisk.encryptionSettings.diskEncryptionKey.secretUrl] The
 * URL referencing a secret in a Key Vault.
 * @property {object}
 * [storageProfile.osDisk.encryptionSettings.diskEncryptionKey.sourceVault] The
 * relative URL of the Key Vault containing the secret.
 * @property {string}
 * [storageProfile.osDisk.encryptionSettings.diskEncryptionKey.sourceVault.id]
 * Resource Id
 * @property {object}
 * [storageProfile.osDisk.encryptionSettings.keyEncryptionKey] Specifies the
 * location of the key encryption key in Key Vault.
 * @property {string}
 * [storageProfile.osDisk.encryptionSettings.keyEncryptionKey.keyUrl] The URL
 * referencing a key encryption key in Key Vault.
 * @property {object}
 * [storageProfile.osDisk.encryptionSettings.keyEncryptionKey.sourceVault] The
 * relative URL of the Key Vault containing the key.
 * @property {string}
 * [storageProfile.osDisk.encryptionSettings.keyEncryptionKey.sourceVault.id]
 * Resource Id
 * @property {boolean} [storageProfile.osDisk.encryptionSettings.enabled]
 * Specifies whether disk encryption should be enabled on the virtual machine.
 * @property {string} [storageProfile.osDisk.name] The disk name.
 * @property {object} [storageProfile.osDisk.vhd] The virtual hard disk.
 * @property {string} [storageProfile.osDisk.vhd.uri] Specifies the virtual
 * hard disk's uri.
 * @property {object} [storageProfile.osDisk.image] The source user image
 * virtual hard disk. The virtual hard disk will be copied before being
 * attached to the virtual machine. If SourceImage is provided, the destination
 * virtual hard drive must not exist.
 * @property {string} [storageProfile.osDisk.image.uri] Specifies the virtual
 * hard disk's uri.
 * @property {string} [storageProfile.osDisk.caching] Specifies the caching
 * requirements. <br><br> Possible values are: <br><br> **None** <br><br>
 * **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard
 * storage. ReadOnly for Premium storage**. Possible values include: 'None',
 * 'ReadOnly', 'ReadWrite'
 * @property {boolean} [storageProfile.osDisk.writeAcceleratorEnabled]
 * Specifies whether writeAccelerator should be enabled or disabled on the
 * disk.
 * @property {object} [storageProfile.osDisk.diffDiskSettings] Specifies the
 * differencing Disk Settings for the operating system disk used by the virtual
 * machine.
 * @property {string} [storageProfile.osDisk.diffDiskSettings.option] Specifies
 * the differencing disk settings for operating system disk. Possible values
 * include: 'Local'
 * @property {string} [storageProfile.osDisk.createOption] Specifies how the
 * virtual machine should be created.<br><br> Possible values are:<br><br>
 * **Attach** \u2013 This value is used when you are using a specialized disk
 * to create the virtual machine.<br><br> **FromImage** \u2013 This value is
 * used when you are using an image to create the virtual machine. If you are
 * using a platform image, you also use the imageReference element described
 * above. If you are using a marketplace image, you  also use the plan element
 * previously described. Possible values include: 'FromImage', 'Empty',
 * 'Attach'
 * @property {number} [storageProfile.osDisk.diskSizeGB] Specifies the size of
 * an empty data disk in gigabytes. This element can be used to overwrite the
 * size of the disk in a virtual machine image. <br><br> This value cannot be
 * larger than 1023 GB
 * @property {object} [storageProfile.osDisk.managedDisk] The managed disk
 * parameters.
 * @property {string} [storageProfile.osDisk.managedDisk.storageAccountType]
 * Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS
 * can only be used with data disks, it cannot be used with OS Disk. Possible
 * values include: 'Standard_LRS', 'Premium_LRS', 'StandardSSD_LRS',
 * 'UltraSSD_LRS'
 * @property {array} [storageProfile.dataDisks] Specifies the parameters that
 * are used to add a data disk to a virtual machine. <br><br> For more
 * information about disks, see [About disks and VHDs for Azure virtual
 * machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
 * @property {object} [additionalCapabilities] Specifies additional
 * capabilities enabled or disabled on the virtual machine.
 * @property {boolean} [additionalCapabilities.ultraSSDEnabled] The flag that
 * enables or disables a capability to have one or more managed data disks with
 * UltraSSD_LRS storage account type on the VM or VMSS. Managed disks with
 * storage account type UltraSSD_LRS can be added to a virtual machine or
 * virtual machine scale set only if this property is enabled.
 * @property {object} [osProfile] Specifies the operating system settings for
 * the virtual machine.
 * @property {string} [osProfile.computerName] Specifies the host OS name of
 * the virtual machine. <br><br> **Max-length (Windows):** 15 characters
 * <br><br> **Max-length (Linux):** 64 characters. <br><br> For naming
 * conventions and restrictions see [Azure infrastructure services
 * implementation
 * guidelines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-infrastructure-subscription-accounts-guidelines?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json#1-naming-conventions).
 * @property {string} [osProfile.adminUsername] Specifies the name of the
 * administrator account. <br><br> **Windows-only restriction:** Cannot end in
 * "." <br><br> **Disallowed values:** "administrator", "admin", "user",
 * "user1", "test", "user2", "test1", "user3", "admin1", "1", "123", "a",
 * "actuser", "adm", "admin2", "aspnet", "backup", "console", "david", "guest",
 * "john", "owner", "root", "server", "sql", "support", "support_388945a0",
 * "sys", "test2", "test3", "user4", "user5". <br><br> **Minimum-length
 * (Linux):** 1  character <br><br> **Max-length (Linux):** 64 characters
 * <br><br> **Max-length (Windows):** 20 characters  <br><br><li> For root
 * access to the Linux VM, see [Using root privileges on Linux virtual machines
 * in
 * Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-use-root-privileges?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)<br><li>
 * For a list of built-in system users on Linux that should not be used in this
 * field, see [Selecting User Names for Linux on
 * Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-usernames?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
 * @property {string} [osProfile.adminPassword] Specifies the password of the
 * administrator account. <br><br> **Minimum-length (Windows):** 8 characters
 * <br><br> **Minimum-length (Linux):** 6 characters <br><br> **Max-length
 * (Windows):** 123 characters <br><br> **Max-length (Linux):** 72 characters
 * <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be
 * fulfilled <br> Has lower characters <br>Has upper characters <br> Has a
 * digit <br> Has a special character (Regex match [\W_]) <br><br> **Disallowed
 * values:** "abc@123", "P@$$w0rd", "P@ssw0rd", "P@ssword123", "Pa$$word",
 * "pass@word1", "Password!", "Password1", "Password22", "iloveyou!" <br><br>
 * For resetting the password, see [How to reset the Remote Desktop service or
 * its login password in a Windows
 * VM](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-reset-rdp?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json)
 * <br><br> For resetting root password, see [Manage users, SSH, and check or
 * repair disks on Azure Linux VMs using the VMAccess
 * Extension](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-vmaccess-extension?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json#reset-root-password)
 * @property {string} [osProfile.customData] Specifies a base-64 encoded string
 * of custom data. The base-64 encoded string is decoded to a binary array that
 * is saved as a file on the Virtual Machine. The maximum length of the binary
 * array is 65535 bytes. <br><br> For using cloud-init for your VM, see [Using
 * cloud-init to customize a Linux VM during
 * creation](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-cloud-init?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
 * @property {object} [osProfile.windowsConfiguration] Specifies Windows
 * operating system settings on the virtual machine.
 * @property {boolean} [osProfile.windowsConfiguration.provisionVMAgent]
 * Indicates whether virtual machine agent should be provisioned on the virtual
 * machine. <br><br> When this property is not specified in the request body,
 * default behavior is to set it to true.  This will ensure that VM Agent is
 * installed on the VM so that extensions can be added to the VM later.
 * @property {boolean} [osProfile.windowsConfiguration.enableAutomaticUpdates]
 * Indicates whether virtual machine is enabled for automatic updates.
 * @property {string} [osProfile.windowsConfiguration.timeZone] Specifies the
 * time zone of the virtual machine. e.g. "Pacific Standard Time"
 * @property {array} [osProfile.windowsConfiguration.additionalUnattendContent]
 * Specifies additional base-64 encoded XML formatted information that can be
 * included in the Unattend.xml file, which is used by Windows Setup.
 * @property {object} [osProfile.windowsConfiguration.winRM] Specifies the
 * Windows Remote Management listeners. This enables remote Windows PowerShell.
 * @property {array} [osProfile.windowsConfiguration.winRM.listeners] The list
 * of Windows Remote Management listeners
 * @property {object} [osProfile.linuxConfiguration] Specifies the Linux
 * operating system settings on the virtual machine. <br><br>For a list of
 * supported Linux distributions, see [Linux on Azure-Endorsed
 * Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-endorsed-distros?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
 * <br><br> For running non-endorsed distributions, see [Information for
 * Non-Endorsed
 * Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-create-upload-generic?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json).
 * @property {boolean}
 * [osProfile.linuxConfiguration.disablePasswordAuthentication] Specifies
 * whether password authentication should be disabled.
 * @property {object} [osProfile.linuxConfiguration.ssh] Specifies the ssh key
 * configuration for a Linux OS.
 * @property {array} [osProfile.linuxConfiguration.ssh.publicKeys] The list of
 * SSH public keys used to authenticate with linux based VMs.
 * @property {boolean} [osProfile.linuxConfiguration.provisionVMAgent]
 * Indicates whether virtual machine agent should be provisioned on the virtual
 * machine. <br><br> When this property is not specified in the request body,
 * default behavior is to set it to true.  This will ensure that VM Agent is
 * installed on the VM so that extensions can be added to the VM later.
 * @property {array} [osProfile.secrets] Specifies set of certificates that
 * should be installed onto the virtual machine.
 * @property {boolean} [osProfile.allowExtensionOperations] Specifies whether
 * extension operations should be allowed on the virtual machine. <br><br>This
 * may only be set to False when no extensions are present on the virtual
 * machine.
 * @property {object} [networkProfile] Specifies the network interfaces of the
 * virtual machine.
 * @property {array} [networkProfile.networkInterfaces] Specifies the list of
 * resource Ids for the network interfaces associated with the virtual machine.
 * @property {object} [diagnosticsProfile] Specifies the boot diagnostic
 * settings state. <br><br>Minimum api-version: 2015-06-15.
 * @property {object} [diagnosticsProfile.bootDiagnostics] Boot Diagnostics is
 * a debugging feature which allows you to view Console Output and Screenshot
 * to diagnose VM status. <br><br> You can easily view the output of your
 * console log. <br><br> Azure also enables you to see a screenshot of the VM
 * from the hypervisor.
 * @property {boolean} [diagnosticsProfile.bootDiagnostics.enabled] Whether
 * boot diagnostics should be enabled on the Virtual Machine.
 * @property {string} [diagnosticsProfile.bootDiagnostics.storageUri] Uri of
 * the storage account to use for placing the console output and screenshot.
 * @property {object} [availabilitySet] Specifies information about the
 * availability set that the virtual machine should be assigned to. Virtual
 * machines specified in the same availability set are allocated to different
 * nodes to maximize availability. For more information about availability
 * sets, see [Manage the availability of virtual
 * machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-manage-availability?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
 * <br><br> For more information on Azure planned maintainance, see [Planned
 * maintenance for virtual machines in
 * Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-planned-maintenance?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json)
 * <br><br> Currently, a VM can only be added to availability set at creation
 * time. An existing VM cannot be added to an availability set.
 * @property {string} [availabilitySet.id] Resource Id
 * @property {string} [provisioningState] The provisioning state, which only
 * appears in the response.
 * @property {object} [instanceView] The virtual machine instance view.
 * @property {number} [instanceView.platformUpdateDomain] Specifies the update
 * domain of the virtual machine.
 * @property {number} [instanceView.platformFaultDomain] Specifies the fault
 * domain of the virtual machine.
 * @property {string} [instanceView.computerName] The computer name assigned to
 * the virtual machine.
 * @property {string} [instanceView.osName] The Operating System running on the
 * virtual machine.
 * @property {string} [instanceView.osVersion] The version of Operating System
 * running on the virtual machine.
 * @property {string} [instanceView.rdpThumbPrint] The Remote desktop
 * certificate thumbprint.
 * @property {object} [instanceView.vmAgent] The VM Agent running on the
 * virtual machine.
 * @property {string} [instanceView.vmAgent.vmAgentVersion] The VM Agent full
 * version.
 * @property {array} [instanceView.vmAgent.extensionHandlers] The virtual
 * machine extension handler instance view.
 * @property {array} [instanceView.vmAgent.statuses] The resource status
 * information.
 * @property {object} [instanceView.maintenanceRedeployStatus] The Maintenance
 * Operation status on the virtual machine.
 * @property {boolean}
 * [instanceView.maintenanceRedeployStatus.isCustomerInitiatedMaintenanceAllowed]
 * True, if customer is allowed to perform Maintenance.
 * @property {date}
 * [instanceView.maintenanceRedeployStatus.preMaintenanceWindowStartTime] Start
 * Time for the Pre Maintenance Window.
 * @property {date}
 * [instanceView.maintenanceRedeployStatus.preMaintenanceWindowEndTime] End
 * Time for the Pre Maintenance Window.
 * @property {date}
 * [instanceView.maintenanceRedeployStatus.maintenanceWindowStartTime] Start
 * Time for the Maintenance Window.
 * @property {date}
 * [instanceView.maintenanceRedeployStatus.maintenanceWindowEndTime] End Time
 * for the Maintenance Window.
 * @property {string}
 * [instanceView.maintenanceRedeployStatus.lastOperationResultCode] The Last
 * Maintenance Operation Result Code. Possible values include: 'None',
 * 'RetryLater', 'MaintenanceAborted', 'MaintenanceCompleted'
 * @property {string}
 * [instanceView.maintenanceRedeployStatus.lastOperationMessage] Message
 * returned for the last Maintenance Operation.
 * @property {array} [instanceView.disks] The virtual machine disk information.
 * @property {array} [instanceView.extensions] The extensions information.
 * @property {object} [instanceView.bootDiagnostics] Boot Diagnostics is a
 * debugging feature which allows you to view Console Output and Screenshot to
 * diagnose VM status. <br><br> You can easily view the output of your console
 * log. <br><br> Azure also enables you to see a screenshot of the VM from the
 * hypervisor.
 * @property {string} [instanceView.bootDiagnostics.consoleScreenshotBlobUri]
 * The console screenshot blob URI.
 * @property {string} [instanceView.bootDiagnostics.serialConsoleLogBlobUri]
 * The Linux serial console log blob Uri.
 * @property {object} [instanceView.bootDiagnostics.status] The boot
 * diagnostics status information for the VM. <br><br> NOTE: It will be set
 * only if there are errors encountered in enabling boot diagnostics.
 * @property {string} [instanceView.bootDiagnostics.status.code] The status
 * code.
 * @property {string} [instanceView.bootDiagnostics.status.level] The level
 * code. Possible values include: 'Info', 'Warning', 'Error'
 * @property {string} [instanceView.bootDiagnostics.status.displayStatus] The
 * short localizable label for the status.
 * @property {string} [instanceView.bootDiagnostics.status.message] The
 * detailed status message, including for alerts and error messages.
 * @property {date} [instanceView.bootDiagnostics.status.time] The time of the
 * status.
 * @property {array} [instanceView.statuses] The resource status information.
 * @property {string} [licenseType] Specifies that the image or disk that is
 * being used was licensed on-premises. This element is only used for images
 * that contain the Windows Server operating system. <br><br> Possible values
 * are: <br><br> Windows_Client <br><br> Windows_Server <br><br> If this
 * element is included in a request for an update, the value must match the
 * initial value. This value cannot be updated. <br><br> For more information,
 * see [Azure Hybrid Use Benefit for Windows
 * Server](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-hybrid-use-benefit-licensing?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json)
 * <br><br> Minimum api-version: 2015-06-15
 * @property {string} [vmId] Specifies the VM unique ID which is a 128-bits
 * identifier that is encoded and stored in all Azure IaaS VMs SMBIOS and can
 * be read using platform BIOS commands.
 * @property {array} [resources] The virtual machine child extension resources.
 * @property {object} [identity] The identity of the virtual machine, if
 * configured.
 * @property {string} [identity.principalId] The principal id of virtual
 * machine identity. This property will only be provided for a system assigned
 * identity.
 * @property {string} [identity.tenantId] The tenant id associated with the
 * virtual machine. This property will only be provided for a system assigned
 * identity.
 * @property {string} [identity.type] The type of identity used for the virtual
 * machine. The type 'SystemAssigned, UserAssigned' includes both an implicitly
 * created identity and a set of user assigned identities. The type 'None' will
 * remove any identities from the virtual machine. Possible values include:
 * 'SystemAssigned', 'UserAssigned', 'SystemAssigned, UserAssigned', 'None'
 * @property {object} [identity.userAssignedIdentities] The list of user
 * identities associated with the Virtual Machine. The user identity dictionary
 * key references will be ARM resource ids in the form:
 * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
 * @property {array} [zones] The virtual machine zones.
 */
export interface VirtualMachine extends Resource {
  plan?: Plan;
  hardwareProfile?: HardwareProfile;
  storageProfile?: StorageProfile;
  additionalCapabilities?: AdditionalCapabilities;
  osProfile?: OSProfile;
  networkProfile?: NetworkProfile;
  diagnosticsProfile?: DiagnosticsProfile;
  availabilitySet?: SubResource;
  readonly provisioningState?: string;
  readonly instanceView?: VirtualMachineInstanceView;
  licenseType?: string;
  readonly vmId?: string;
  readonly resources?: VirtualMachineExtension[];
  identity?: VirtualMachineIdentity;
  zones?: string[];
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineUpdate class.
 * @constructor
 * Describes a Virtual Machine Update.
 *
 * @property {object} [plan] Specifies information about the marketplace image
 * used to create the virtual machine. This element is only used for
 * marketplace images. Before you can use a marketplace image from an API, you
 * must enable the image for programmatic use.  In the Azure portal, find the
 * marketplace image that you want to use and then click **Want to deploy
 * programmatically, Get Started ->**. Enter any required information and then
 * click **Save**.
 * @property {string} [plan.name] The plan ID.
 * @property {string} [plan.publisher] The publisher ID.
 * @property {string} [plan.product] Specifies the product of the image from
 * the marketplace. This is the same value as Offer under the imageReference
 * element.
 * @property {string} [plan.promotionCode] The promotion code.
 * @property {object} [hardwareProfile] Specifies the hardware settings for the
 * virtual machine.
 * @property {string} [hardwareProfile.vmSize] Specifies the size of the
 * virtual machine. For more information about virtual machine sizes, see
 * [Sizes for virtual
 * machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-sizes?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
 * <br><br> The available VM sizes depend on region and availability set. For a
 * list of available sizes use these APIs:  <br><br> [List all available
 * virtual machine sizes in an availability
 * set](https://docs.microsoft.com/rest/api/compute/availabilitysets/listavailablesizes)
 * <br><br> [List all available virtual machine sizes in a
 * region](https://docs.microsoft.com/rest/api/compute/virtualmachinesizes/list)
 * <br><br> [List all available virtual machine sizes for
 * resizing](https://docs.microsoft.com/rest/api/compute/virtualmachines/listavailablesizes).
 * Possible values include: 'Basic_A0', 'Basic_A1', 'Basic_A2', 'Basic_A3',
 * 'Basic_A4', 'Standard_A0', 'Standard_A1', 'Standard_A2', 'Standard_A3',
 * 'Standard_A4', 'Standard_A5', 'Standard_A6', 'Standard_A7', 'Standard_A8',
 * 'Standard_A9', 'Standard_A10', 'Standard_A11', 'Standard_A1_v2',
 * 'Standard_A2_v2', 'Standard_A4_v2', 'Standard_A8_v2', 'Standard_A2m_v2',
 * 'Standard_A4m_v2', 'Standard_A8m_v2', 'Standard_B1s', 'Standard_B1ms',
 * 'Standard_B2s', 'Standard_B2ms', 'Standard_B4ms', 'Standard_B8ms',
 * 'Standard_D1', 'Standard_D2', 'Standard_D3', 'Standard_D4', 'Standard_D11',
 * 'Standard_D12', 'Standard_D13', 'Standard_D14', 'Standard_D1_v2',
 * 'Standard_D2_v2', 'Standard_D3_v2', 'Standard_D4_v2', 'Standard_D5_v2',
 * 'Standard_D2_v3', 'Standard_D4_v3', 'Standard_D8_v3', 'Standard_D16_v3',
 * 'Standard_D32_v3', 'Standard_D64_v3', 'Standard_D2s_v3', 'Standard_D4s_v3',
 * 'Standard_D8s_v3', 'Standard_D16s_v3', 'Standard_D32s_v3',
 * 'Standard_D64s_v3', 'Standard_D11_v2', 'Standard_D12_v2', 'Standard_D13_v2',
 * 'Standard_D14_v2', 'Standard_D15_v2', 'Standard_DS1', 'Standard_DS2',
 * 'Standard_DS3', 'Standard_DS4', 'Standard_DS11', 'Standard_DS12',
 * 'Standard_DS13', 'Standard_DS14', 'Standard_DS1_v2', 'Standard_DS2_v2',
 * 'Standard_DS3_v2', 'Standard_DS4_v2', 'Standard_DS5_v2', 'Standard_DS11_v2',
 * 'Standard_DS12_v2', 'Standard_DS13_v2', 'Standard_DS14_v2',
 * 'Standard_DS15_v2', 'Standard_DS13-4_v2', 'Standard_DS13-2_v2',
 * 'Standard_DS14-8_v2', 'Standard_DS14-4_v2', 'Standard_E2_v3',
 * 'Standard_E4_v3', 'Standard_E8_v3', 'Standard_E16_v3', 'Standard_E32_v3',
 * 'Standard_E64_v3', 'Standard_E2s_v3', 'Standard_E4s_v3', 'Standard_E8s_v3',
 * 'Standard_E16s_v3', 'Standard_E32s_v3', 'Standard_E64s_v3',
 * 'Standard_E32-16_v3', 'Standard_E32-8s_v3', 'Standard_E64-32s_v3',
 * 'Standard_E64-16s_v3', 'Standard_F1', 'Standard_F2', 'Standard_F4',
 * 'Standard_F8', 'Standard_F16', 'Standard_F1s', 'Standard_F2s',
 * 'Standard_F4s', 'Standard_F8s', 'Standard_F16s', 'Standard_F2s_v2',
 * 'Standard_F4s_v2', 'Standard_F8s_v2', 'Standard_F16s_v2',
 * 'Standard_F32s_v2', 'Standard_F64s_v2', 'Standard_F72s_v2', 'Standard_G1',
 * 'Standard_G2', 'Standard_G3', 'Standard_G4', 'Standard_G5', 'Standard_GS1',
 * 'Standard_GS2', 'Standard_GS3', 'Standard_GS4', 'Standard_GS5',
 * 'Standard_GS4-8', 'Standard_GS4-4', 'Standard_GS5-16', 'Standard_GS5-8',
 * 'Standard_H8', 'Standard_H16', 'Standard_H8m', 'Standard_H16m',
 * 'Standard_H16r', 'Standard_H16mr', 'Standard_L4s', 'Standard_L8s',
 * 'Standard_L16s', 'Standard_L32s', 'Standard_M64s', 'Standard_M64ms',
 * 'Standard_M128s', 'Standard_M128ms', 'Standard_M64-32ms',
 * 'Standard_M64-16ms', 'Standard_M128-64ms', 'Standard_M128-32ms',
 * 'Standard_NC6', 'Standard_NC12', 'Standard_NC24', 'Standard_NC24r',
 * 'Standard_NC6s_v2', 'Standard_NC12s_v2', 'Standard_NC24s_v2',
 * 'Standard_NC24rs_v2', 'Standard_NC6s_v3', 'Standard_NC12s_v3',
 * 'Standard_NC24s_v3', 'Standard_NC24rs_v3', 'Standard_ND6s',
 * 'Standard_ND12s', 'Standard_ND24s', 'Standard_ND24rs', 'Standard_NV6',
 * 'Standard_NV12', 'Standard_NV24'
 * @property {object} [storageProfile] Specifies the storage settings for the
 * virtual machine disks.
 * @property {object} [storageProfile.imageReference] Specifies information
 * about the image to use. You can specify information about platform images,
 * marketplace images, or virtual machine images. This element is required when
 * you want to use a platform image, marketplace image, or virtual machine
 * image, but is not used in other creation operations.
 * @property {string} [storageProfile.imageReference.publisher] The image
 * publisher.
 * @property {string} [storageProfile.imageReference.offer] Specifies the offer
 * of the platform image or marketplace image used to create the virtual
 * machine.
 * @property {string} [storageProfile.imageReference.sku] The image SKU.
 * @property {string} [storageProfile.imageReference.version] Specifies the
 * version of the platform image or marketplace image used to create the
 * virtual machine. The allowed formats are Major.Minor.Build or 'latest'.
 * Major, Minor, and Build are decimal numbers. Specify 'latest' to use the
 * latest version of an image available at deploy time. Even if you use
 * 'latest', the VM image will not automatically update after deploy time even
 * if a new version becomes available.
 * @property {object} [storageProfile.osDisk] Specifies information about the
 * operating system disk used by the virtual machine. <br><br> For more
 * information about disks, see [About disks and VHDs for Azure virtual
 * machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
 * @property {string} [storageProfile.osDisk.osType] This property allows you
 * to specify the type of the OS that is included in the disk if creating a VM
 * from user-image or a specialized VHD. <br><br> Possible values are: <br><br>
 * **Windows** <br><br> **Linux**. Possible values include: 'Windows', 'Linux'
 * @property {object} [storageProfile.osDisk.encryptionSettings] Specifies the
 * encryption settings for the OS Disk. <br><br> Minimum api-version:
 * 2015-06-15
 * @property {object}
 * [storageProfile.osDisk.encryptionSettings.diskEncryptionKey] Specifies the
 * location of the disk encryption key, which is a Key Vault Secret.
 * @property {string}
 * [storageProfile.osDisk.encryptionSettings.diskEncryptionKey.secretUrl] The
 * URL referencing a secret in a Key Vault.
 * @property {object}
 * [storageProfile.osDisk.encryptionSettings.diskEncryptionKey.sourceVault] The
 * relative URL of the Key Vault containing the secret.
 * @property {string}
 * [storageProfile.osDisk.encryptionSettings.diskEncryptionKey.sourceVault.id]
 * Resource Id
 * @property {object}
 * [storageProfile.osDisk.encryptionSettings.keyEncryptionKey] Specifies the
 * location of the key encryption key in Key Vault.
 * @property {string}
 * [storageProfile.osDisk.encryptionSettings.keyEncryptionKey.keyUrl] The URL
 * referencing a key encryption key in Key Vault.
 * @property {object}
 * [storageProfile.osDisk.encryptionSettings.keyEncryptionKey.sourceVault] The
 * relative URL of the Key Vault containing the key.
 * @property {string}
 * [storageProfile.osDisk.encryptionSettings.keyEncryptionKey.sourceVault.id]
 * Resource Id
 * @property {boolean} [storageProfile.osDisk.encryptionSettings.enabled]
 * Specifies whether disk encryption should be enabled on the virtual machine.
 * @property {string} [storageProfile.osDisk.name] The disk name.
 * @property {object} [storageProfile.osDisk.vhd] The virtual hard disk.
 * @property {string} [storageProfile.osDisk.vhd.uri] Specifies the virtual
 * hard disk's uri.
 * @property {object} [storageProfile.osDisk.image] The source user image
 * virtual hard disk. The virtual hard disk will be copied before being
 * attached to the virtual machine. If SourceImage is provided, the destination
 * virtual hard drive must not exist.
 * @property {string} [storageProfile.osDisk.image.uri] Specifies the virtual
 * hard disk's uri.
 * @property {string} [storageProfile.osDisk.caching] Specifies the caching
 * requirements. <br><br> Possible values are: <br><br> **None** <br><br>
 * **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard
 * storage. ReadOnly for Premium storage**. Possible values include: 'None',
 * 'ReadOnly', 'ReadWrite'
 * @property {boolean} [storageProfile.osDisk.writeAcceleratorEnabled]
 * Specifies whether writeAccelerator should be enabled or disabled on the
 * disk.
 * @property {object} [storageProfile.osDisk.diffDiskSettings] Specifies the
 * differencing Disk Settings for the operating system disk used by the virtual
 * machine.
 * @property {string} [storageProfile.osDisk.diffDiskSettings.option] Specifies
 * the differencing disk settings for operating system disk. Possible values
 * include: 'Local'
 * @property {string} [storageProfile.osDisk.createOption] Specifies how the
 * virtual machine should be created.<br><br> Possible values are:<br><br>
 * **Attach** \u2013 This value is used when you are using a specialized disk
 * to create the virtual machine.<br><br> **FromImage** \u2013 This value is
 * used when you are using an image to create the virtual machine. If you are
 * using a platform image, you also use the imageReference element described
 * above. If you are using a marketplace image, you  also use the plan element
 * previously described. Possible values include: 'FromImage', 'Empty',
 * 'Attach'
 * @property {number} [storageProfile.osDisk.diskSizeGB] Specifies the size of
 * an empty data disk in gigabytes. This element can be used to overwrite the
 * size of the disk in a virtual machine image. <br><br> This value cannot be
 * larger than 1023 GB
 * @property {object} [storageProfile.osDisk.managedDisk] The managed disk
 * parameters.
 * @property {string} [storageProfile.osDisk.managedDisk.storageAccountType]
 * Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS
 * can only be used with data disks, it cannot be used with OS Disk. Possible
 * values include: 'Standard_LRS', 'Premium_LRS', 'StandardSSD_LRS',
 * 'UltraSSD_LRS'
 * @property {array} [storageProfile.dataDisks] Specifies the parameters that
 * are used to add a data disk to a virtual machine. <br><br> For more
 * information about disks, see [About disks and VHDs for Azure virtual
 * machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
 * @property {object} [additionalCapabilities] Specifies additional
 * capabilities enabled or disabled on the virtual machine.
 * @property {boolean} [additionalCapabilities.ultraSSDEnabled] The flag that
 * enables or disables a capability to have one or more managed data disks with
 * UltraSSD_LRS storage account type on the VM or VMSS. Managed disks with
 * storage account type UltraSSD_LRS can be added to a virtual machine or
 * virtual machine scale set only if this property is enabled.
 * @property {object} [osProfile] Specifies the operating system settings for
 * the virtual machine.
 * @property {string} [osProfile.computerName] Specifies the host OS name of
 * the virtual machine. <br><br> **Max-length (Windows):** 15 characters
 * <br><br> **Max-length (Linux):** 64 characters. <br><br> For naming
 * conventions and restrictions see [Azure infrastructure services
 * implementation
 * guidelines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-infrastructure-subscription-accounts-guidelines?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json#1-naming-conventions).
 * @property {string} [osProfile.adminUsername] Specifies the name of the
 * administrator account. <br><br> **Windows-only restriction:** Cannot end in
 * "." <br><br> **Disallowed values:** "administrator", "admin", "user",
 * "user1", "test", "user2", "test1", "user3", "admin1", "1", "123", "a",
 * "actuser", "adm", "admin2", "aspnet", "backup", "console", "david", "guest",
 * "john", "owner", "root", "server", "sql", "support", "support_388945a0",
 * "sys", "test2", "test3", "user4", "user5". <br><br> **Minimum-length
 * (Linux):** 1  character <br><br> **Max-length (Linux):** 64 characters
 * <br><br> **Max-length (Windows):** 20 characters  <br><br><li> For root
 * access to the Linux VM, see [Using root privileges on Linux virtual machines
 * in
 * Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-use-root-privileges?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)<br><li>
 * For a list of built-in system users on Linux that should not be used in this
 * field, see [Selecting User Names for Linux on
 * Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-usernames?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
 * @property {string} [osProfile.adminPassword] Specifies the password of the
 * administrator account. <br><br> **Minimum-length (Windows):** 8 characters
 * <br><br> **Minimum-length (Linux):** 6 characters <br><br> **Max-length
 * (Windows):** 123 characters <br><br> **Max-length (Linux):** 72 characters
 * <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be
 * fulfilled <br> Has lower characters <br>Has upper characters <br> Has a
 * digit <br> Has a special character (Regex match [\W_]) <br><br> **Disallowed
 * values:** "abc@123", "P@$$w0rd", "P@ssw0rd", "P@ssword123", "Pa$$word",
 * "pass@word1", "Password!", "Password1", "Password22", "iloveyou!" <br><br>
 * For resetting the password, see [How to reset the Remote Desktop service or
 * its login password in a Windows
 * VM](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-reset-rdp?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json)
 * <br><br> For resetting root password, see [Manage users, SSH, and check or
 * repair disks on Azure Linux VMs using the VMAccess
 * Extension](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-vmaccess-extension?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json#reset-root-password)
 * @property {string} [osProfile.customData] Specifies a base-64 encoded string
 * of custom data. The base-64 encoded string is decoded to a binary array that
 * is saved as a file on the Virtual Machine. The maximum length of the binary
 * array is 65535 bytes. <br><br> For using cloud-init for your VM, see [Using
 * cloud-init to customize a Linux VM during
 * creation](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-cloud-init?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
 * @property {object} [osProfile.windowsConfiguration] Specifies Windows
 * operating system settings on the virtual machine.
 * @property {boolean} [osProfile.windowsConfiguration.provisionVMAgent]
 * Indicates whether virtual machine agent should be provisioned on the virtual
 * machine. <br><br> When this property is not specified in the request body,
 * default behavior is to set it to true.  This will ensure that VM Agent is
 * installed on the VM so that extensions can be added to the VM later.
 * @property {boolean} [osProfile.windowsConfiguration.enableAutomaticUpdates]
 * Indicates whether virtual machine is enabled for automatic updates.
 * @property {string} [osProfile.windowsConfiguration.timeZone] Specifies the
 * time zone of the virtual machine. e.g. "Pacific Standard Time"
 * @property {array} [osProfile.windowsConfiguration.additionalUnattendContent]
 * Specifies additional base-64 encoded XML formatted information that can be
 * included in the Unattend.xml file, which is used by Windows Setup.
 * @property {object} [osProfile.windowsConfiguration.winRM] Specifies the
 * Windows Remote Management listeners. This enables remote Windows PowerShell.
 * @property {array} [osProfile.windowsConfiguration.winRM.listeners] The list
 * of Windows Remote Management listeners
 * @property {object} [osProfile.linuxConfiguration] Specifies the Linux
 * operating system settings on the virtual machine. <br><br>For a list of
 * supported Linux distributions, see [Linux on Azure-Endorsed
 * Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-endorsed-distros?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
 * <br><br> For running non-endorsed distributions, see [Information for
 * Non-Endorsed
 * Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-create-upload-generic?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json).
 * @property {boolean}
 * [osProfile.linuxConfiguration.disablePasswordAuthentication] Specifies
 * whether password authentication should be disabled.
 * @property {object} [osProfile.linuxConfiguration.ssh] Specifies the ssh key
 * configuration for a Linux OS.
 * @property {array} [osProfile.linuxConfiguration.ssh.publicKeys] The list of
 * SSH public keys used to authenticate with linux based VMs.
 * @property {boolean} [osProfile.linuxConfiguration.provisionVMAgent]
 * Indicates whether virtual machine agent should be provisioned on the virtual
 * machine. <br><br> When this property is not specified in the request body,
 * default behavior is to set it to true.  This will ensure that VM Agent is
 * installed on the VM so that extensions can be added to the VM later.
 * @property {array} [osProfile.secrets] Specifies set of certificates that
 * should be installed onto the virtual machine.
 * @property {boolean} [osProfile.allowExtensionOperations] Specifies whether
 * extension operations should be allowed on the virtual machine. <br><br>This
 * may only be set to False when no extensions are present on the virtual
 * machine.
 * @property {object} [networkProfile] Specifies the network interfaces of the
 * virtual machine.
 * @property {array} [networkProfile.networkInterfaces] Specifies the list of
 * resource Ids for the network interfaces associated with the virtual machine.
 * @property {object} [diagnosticsProfile] Specifies the boot diagnostic
 * settings state. <br><br>Minimum api-version: 2015-06-15.
 * @property {object} [diagnosticsProfile.bootDiagnostics] Boot Diagnostics is
 * a debugging feature which allows you to view Console Output and Screenshot
 * to diagnose VM status. <br><br> You can easily view the output of your
 * console log. <br><br> Azure also enables you to see a screenshot of the VM
 * from the hypervisor.
 * @property {boolean} [diagnosticsProfile.bootDiagnostics.enabled] Whether
 * boot diagnostics should be enabled on the Virtual Machine.
 * @property {string} [diagnosticsProfile.bootDiagnostics.storageUri] Uri of
 * the storage account to use for placing the console output and screenshot.
 * @property {object} [availabilitySet] Specifies information about the
 * availability set that the virtual machine should be assigned to. Virtual
 * machines specified in the same availability set are allocated to different
 * nodes to maximize availability. For more information about availability
 * sets, see [Manage the availability of virtual
 * machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-manage-availability?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
 * <br><br> For more information on Azure planned maintainance, see [Planned
 * maintenance for virtual machines in
 * Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-planned-maintenance?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json)
 * <br><br> Currently, a VM can only be added to availability set at creation
 * time. An existing VM cannot be added to an availability set.
 * @property {string} [availabilitySet.id] Resource Id
 * @property {string} [provisioningState] The provisioning state, which only
 * appears in the response.
 * @property {object} [instanceView] The virtual machine instance view.
 * @property {number} [instanceView.platformUpdateDomain] Specifies the update
 * domain of the virtual machine.
 * @property {number} [instanceView.platformFaultDomain] Specifies the fault
 * domain of the virtual machine.
 * @property {string} [instanceView.computerName] The computer name assigned to
 * the virtual machine.
 * @property {string} [instanceView.osName] The Operating System running on the
 * virtual machine.
 * @property {string} [instanceView.osVersion] The version of Operating System
 * running on the virtual machine.
 * @property {string} [instanceView.rdpThumbPrint] The Remote desktop
 * certificate thumbprint.
 * @property {object} [instanceView.vmAgent] The VM Agent running on the
 * virtual machine.
 * @property {string} [instanceView.vmAgent.vmAgentVersion] The VM Agent full
 * version.
 * @property {array} [instanceView.vmAgent.extensionHandlers] The virtual
 * machine extension handler instance view.
 * @property {array} [instanceView.vmAgent.statuses] The resource status
 * information.
 * @property {object} [instanceView.maintenanceRedeployStatus] The Maintenance
 * Operation status on the virtual machine.
 * @property {boolean}
 * [instanceView.maintenanceRedeployStatus.isCustomerInitiatedMaintenanceAllowed]
 * True, if customer is allowed to perform Maintenance.
 * @property {date}
 * [instanceView.maintenanceRedeployStatus.preMaintenanceWindowStartTime] Start
 * Time for the Pre Maintenance Window.
 * @property {date}
 * [instanceView.maintenanceRedeployStatus.preMaintenanceWindowEndTime] End
 * Time for the Pre Maintenance Window.
 * @property {date}
 * [instanceView.maintenanceRedeployStatus.maintenanceWindowStartTime] Start
 * Time for the Maintenance Window.
 * @property {date}
 * [instanceView.maintenanceRedeployStatus.maintenanceWindowEndTime] End Time
 * for the Maintenance Window.
 * @property {string}
 * [instanceView.maintenanceRedeployStatus.lastOperationResultCode] The Last
 * Maintenance Operation Result Code. Possible values include: 'None',
 * 'RetryLater', 'MaintenanceAborted', 'MaintenanceCompleted'
 * @property {string}
 * [instanceView.maintenanceRedeployStatus.lastOperationMessage] Message
 * returned for the last Maintenance Operation.
 * @property {array} [instanceView.disks] The virtual machine disk information.
 * @property {array} [instanceView.extensions] The extensions information.
 * @property {object} [instanceView.bootDiagnostics] Boot Diagnostics is a
 * debugging feature which allows you to view Console Output and Screenshot to
 * diagnose VM status. <br><br> You can easily view the output of your console
 * log. <br><br> Azure also enables you to see a screenshot of the VM from the
 * hypervisor.
 * @property {string} [instanceView.bootDiagnostics.consoleScreenshotBlobUri]
 * The console screenshot blob URI.
 * @property {string} [instanceView.bootDiagnostics.serialConsoleLogBlobUri]
 * The Linux serial console log blob Uri.
 * @property {object} [instanceView.bootDiagnostics.status] The boot
 * diagnostics status information for the VM. <br><br> NOTE: It will be set
 * only if there are errors encountered in enabling boot diagnostics.
 * @property {string} [instanceView.bootDiagnostics.status.code] The status
 * code.
 * @property {string} [instanceView.bootDiagnostics.status.level] The level
 * code. Possible values include: 'Info', 'Warning', 'Error'
 * @property {string} [instanceView.bootDiagnostics.status.displayStatus] The
 * short localizable label for the status.
 * @property {string} [instanceView.bootDiagnostics.status.message] The
 * detailed status message, including for alerts and error messages.
 * @property {date} [instanceView.bootDiagnostics.status.time] The time of the
 * status.
 * @property {array} [instanceView.statuses] The resource status information.
 * @property {string} [licenseType] Specifies that the image or disk that is
 * being used was licensed on-premises. This element is only used for images
 * that contain the Windows Server operating system. <br><br> Possible values
 * are: <br><br> Windows_Client <br><br> Windows_Server <br><br> If this
 * element is included in a request for an update, the value must match the
 * initial value. This value cannot be updated. <br><br> For more information,
 * see [Azure Hybrid Use Benefit for Windows
 * Server](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-hybrid-use-benefit-licensing?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json)
 * <br><br> Minimum api-version: 2015-06-15
 * @property {string} [vmId] Specifies the VM unique ID which is a 128-bits
 * identifier that is encoded and stored in all Azure IaaS VMs SMBIOS and can
 * be read using platform BIOS commands.
 * @property {object} [identity] The identity of the virtual machine, if
 * configured.
 * @property {string} [identity.principalId] The principal id of virtual
 * machine identity. This property will only be provided for a system assigned
 * identity.
 * @property {string} [identity.tenantId] The tenant id associated with the
 * virtual machine. This property will only be provided for a system assigned
 * identity.
 * @property {string} [identity.type] The type of identity used for the virtual
 * machine. The type 'SystemAssigned, UserAssigned' includes both an implicitly
 * created identity and a set of user assigned identities. The type 'None' will
 * remove any identities from the virtual machine. Possible values include:
 * 'SystemAssigned', 'UserAssigned', 'SystemAssigned, UserAssigned', 'None'
 * @property {object} [identity.userAssignedIdentities] The list of user
 * identities associated with the Virtual Machine. The user identity dictionary
 * key references will be ARM resource ids in the form:
 * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
 * @property {array} [zones] The virtual machine zones.
 */
export interface VirtualMachineUpdate extends UpdateResource {
  plan?: Plan;
  hardwareProfile?: HardwareProfile;
  storageProfile?: StorageProfile;
  additionalCapabilities?: AdditionalCapabilities;
  osProfile?: OSProfile;
  networkProfile?: NetworkProfile;
  diagnosticsProfile?: DiagnosticsProfile;
  availabilitySet?: SubResource;
  readonly provisioningState?: string;
  readonly instanceView?: VirtualMachineInstanceView;
  licenseType?: string;
  readonly vmId?: string;
  identity?: VirtualMachineIdentity;
  zones?: string[];
}

/**
 * @class
 * Initializes a new instance of the AutomaticOSUpgradePolicy class.
 * @constructor
 * The configuration parameters used for performing automatic OS upgrade.
 *
 * @property {boolean} [enableAutomaticOSUpgrade] Whether OS upgrades should
 * automatically be applied to scale set instances in a rolling fashion when a
 * newer version of the image becomes available. Default value is false.
 * @property {boolean} [disableAutomaticRollback] Whether OS image rollback
 * feature should be disabled. Default value is false.
 */
export interface AutomaticOSUpgradePolicy {
  enableAutomaticOSUpgrade?: boolean;
  disableAutomaticRollback?: boolean;
}

/**
 * @class
 * Initializes a new instance of the RollingUpgradePolicy class.
 * @constructor
 * The configuration parameters used while performing a rolling upgrade.
 *
 * @property {number} [maxBatchInstancePercent] The maximum percent of total
 * virtual machine instances that will be upgraded simultaneously by the
 * rolling upgrade in one batch. As this is a maximum, unhealthy instances in
 * previous or future batches can cause the percentage of instances in a batch
 * to decrease to ensure higher reliability. The default value for this
 * parameter is 20%.
 * @property {number} [maxUnhealthyInstancePercent] The maximum percentage of
 * the total virtual machine instances in the scale set that can be
 * simultaneously unhealthy, either as a result of being upgraded, or by being
 * found in an unhealthy state by the virtual machine health checks before the
 * rolling upgrade aborts. This constraint will be checked prior to starting
 * any batch. The default value for this parameter is 20%.
 * @property {number} [maxUnhealthyUpgradedInstancePercent] The maximum
 * percentage of upgraded virtual machine instances that can be found to be in
 * an unhealthy state. This check will happen after each batch is upgraded. If
 * this percentage is ever exceeded, the rolling update aborts. The default
 * value for this parameter is 20%.
 * @property {string} [pauseTimeBetweenBatches] The wait time between
 * completing the update for all virtual machines in one batch and starting the
 * next batch. The time duration should be specified in ISO 8601 format. The
 * default value is 0 seconds (PT0S).
 */
export interface RollingUpgradePolicy {
  maxBatchInstancePercent?: number;
  maxUnhealthyInstancePercent?: number;
  maxUnhealthyUpgradedInstancePercent?: number;
  pauseTimeBetweenBatches?: string;
}

/**
 * @class
 * Initializes a new instance of the UpgradePolicy class.
 * @constructor
 * Describes an upgrade policy - automatic, manual, or rolling.
 *
 * @property {string} [mode] Specifies the mode of an upgrade to virtual
 * machines in the scale set.<br /><br /> Possible values are:<br /><br />
 * **Manual** - You  control the application of updates to virtual machines in
 * the scale set. You do this by using the manualUpgrade action.<br /><br />
 * **Automatic** - All virtual machines in the scale set are  automatically
 * updated at the same time. Possible values include: 'Automatic', 'Manual',
 * 'Rolling'
 * @property {object} [rollingUpgradePolicy] The configuration parameters used
 * while performing a rolling upgrade.
 * @property {number} [rollingUpgradePolicy.maxBatchInstancePercent] The
 * maximum percent of total virtual machine instances that will be upgraded
 * simultaneously by the rolling upgrade in one batch. As this is a maximum,
 * unhealthy instances in previous or future batches can cause the percentage
 * of instances in a batch to decrease to ensure higher reliability. The
 * default value for this parameter is 20%.
 * @property {number} [rollingUpgradePolicy.maxUnhealthyInstancePercent] The
 * maximum percentage of the total virtual machine instances in the scale set
 * that can be simultaneously unhealthy, either as a result of being upgraded,
 * or by being found in an unhealthy state by the virtual machine health checks
 * before the rolling upgrade aborts. This constraint will be checked prior to
 * starting any batch. The default value for this parameter is 20%.
 * @property {number}
 * [rollingUpgradePolicy.maxUnhealthyUpgradedInstancePercent] The maximum
 * percentage of upgraded virtual machine instances that can be found to be in
 * an unhealthy state. This check will happen after each batch is upgraded. If
 * this percentage is ever exceeded, the rolling update aborts. The default
 * value for this parameter is 20%.
 * @property {string} [rollingUpgradePolicy.pauseTimeBetweenBatches] The wait
 * time between completing the update for all virtual machines in one batch and
 * starting the next batch. The time duration should be specified in ISO 8601
 * format. The default value is 0 seconds (PT0S).
 * @property {object} [automaticOSUpgradePolicy] Configuration parameters used
 * for performing automatic OS Upgrade.
 * @property {boolean} [automaticOSUpgradePolicy.enableAutomaticOSUpgrade]
 * Whether OS upgrades should automatically be applied to scale set instances
 * in a rolling fashion when a newer version of the image becomes available.
 * Default value is false.
 * @property {boolean} [automaticOSUpgradePolicy.disableAutomaticRollback]
 * Whether OS image rollback feature should be disabled. Default value is
 * false.
 */
export interface UpgradePolicy {
  mode?: string;
  rollingUpgradePolicy?: RollingUpgradePolicy;
  automaticOSUpgradePolicy?: AutomaticOSUpgradePolicy;
}

/**
 * @class
 * Initializes a new instance of the ImageOSDisk class.
 * @constructor
 * Describes an Operating System disk.
 *
 * @property {string} osType This property allows you to specify the type of
 * the OS that is included in the disk if creating a VM from a custom image.
 * <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**.
 * Possible values include: 'Windows', 'Linux'
 * @property {string} osState The OS State. Possible values include:
 * 'Generalized', 'Specialized'
 * @property {object} [snapshot] The snapshot.
 * @property {string} [snapshot.id] Resource Id
 * @property {object} [managedDisk] The managedDisk.
 * @property {string} [managedDisk.id] Resource Id
 * @property {string} [blobUri] The Virtual Hard Disk.
 * @property {string} [caching] Specifies the caching requirements. <br><br>
 * Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br>
 * **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly for
 * Premium storage**. Possible values include: 'None', 'ReadOnly', 'ReadWrite'
 * @property {number} [diskSizeGB] Specifies the size of empty data disks in
 * gigabytes. This element can be used to overwrite the name of the disk in a
 * virtual machine image. <br><br> This value cannot be larger than 1023 GB
 * @property {string} [storageAccountType] Specifies the storage account type
 * for the managed disk. UltraSSD_LRS cannot be used with OS Disk. Possible
 * values include: 'Standard_LRS', 'Premium_LRS', 'StandardSSD_LRS',
 * 'UltraSSD_LRS'
 */
export interface ImageOSDisk {
  osType: string;
  osState: string;
  snapshot?: SubResource;
  managedDisk?: SubResource;
  blobUri?: string;
  caching?: string;
  diskSizeGB?: number;
  storageAccountType?: string;
}

/**
 * @class
 * Initializes a new instance of the ImageDataDisk class.
 * @constructor
 * Describes a data disk.
 *
 * @property {number} lun Specifies the logical unit number of the data disk.
 * This value is used to identify data disks within the VM and therefore must
 * be unique for each data disk attached to a VM.
 * @property {object} [snapshot] The snapshot.
 * @property {string} [snapshot.id] Resource Id
 * @property {object} [managedDisk] The managedDisk.
 * @property {string} [managedDisk.id] Resource Id
 * @property {string} [blobUri] The Virtual Hard Disk.
 * @property {string} [caching] Specifies the caching requirements. <br><br>
 * Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br>
 * **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly for
 * Premium storage**. Possible values include: 'None', 'ReadOnly', 'ReadWrite'
 * @property {number} [diskSizeGB] Specifies the size of empty data disks in
 * gigabytes. This element can be used to overwrite the name of the disk in a
 * virtual machine image. <br><br> This value cannot be larger than 1023 GB
 * @property {string} [storageAccountType] Specifies the storage account type
 * for the managed disk. NOTE: UltraSSD_LRS can only be used with data disks,
 * it cannot be used with OS Disk. Possible values include: 'Standard_LRS',
 * 'Premium_LRS', 'StandardSSD_LRS', 'UltraSSD_LRS'
 */
export interface ImageDataDisk {
  lun: number;
  snapshot?: SubResource;
  managedDisk?: SubResource;
  blobUri?: string;
  caching?: string;
  diskSizeGB?: number;
  storageAccountType?: string;
}

/**
 * @class
 * Initializes a new instance of the ImageStorageProfile class.
 * @constructor
 * Describes a storage profile.
 *
 * @property {object} [osDisk] Specifies information about the operating system
 * disk used by the virtual machine. <br><br> For more information about disks,
 * see [About disks and VHDs for Azure virtual
 * machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
 * @property {string} [osDisk.osType] This property allows you to specify the
 * type of the OS that is included in the disk if creating a VM from a custom
 * image. <br><br> Possible values are: <br><br> **Windows** <br><br>
 * **Linux**. Possible values include: 'Windows', 'Linux'
 * @property {string} [osDisk.osState] The OS State. Possible values include:
 * 'Generalized', 'Specialized'
 * @property {object} [osDisk.snapshot] The snapshot.
 * @property {string} [osDisk.snapshot.id] Resource Id
 * @property {object} [osDisk.managedDisk] The managedDisk.
 * @property {string} [osDisk.managedDisk.id] Resource Id
 * @property {string} [osDisk.blobUri] The Virtual Hard Disk.
 * @property {string} [osDisk.caching] Specifies the caching requirements.
 * <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly**
 * <br><br> **ReadWrite** <br><br> Default: **None for Standard storage.
 * ReadOnly for Premium storage**. Possible values include: 'None', 'ReadOnly',
 * 'ReadWrite'
 * @property {number} [osDisk.diskSizeGB] Specifies the size of empty data
 * disks in gigabytes. This element can be used to overwrite the name of the
 * disk in a virtual machine image. <br><br> This value cannot be larger than
 * 1023 GB
 * @property {string} [osDisk.storageAccountType] Specifies the storage account
 * type for the managed disk. UltraSSD_LRS cannot be used with OS Disk.
 * Possible values include: 'Standard_LRS', 'Premium_LRS', 'StandardSSD_LRS',
 * 'UltraSSD_LRS'
 * @property {array} [dataDisks] Specifies the parameters that are used to add
 * a data disk to a virtual machine. <br><br> For more information about disks,
 * see [About disks and VHDs for Azure virtual
 * machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
 * @property {boolean} [zoneResilient] Specifies whether an image is zone
 * resilient or not. Default is false. Zone resilient images can be created
 * only in regions that provide Zone Redundant Storage (ZRS).
 */
export interface ImageStorageProfile {
  osDisk?: ImageOSDisk;
  dataDisks?: ImageDataDisk[];
  zoneResilient?: boolean;
}

/**
 * @class
 * Initializes a new instance of the Image class.
 * @constructor
 * The source user image virtual hard disk. The virtual hard disk will be
 * copied before being attached to the virtual machine. If SourceImage is
 * provided, the destination virtual hard drive must not exist.
 *
 * @property {object} [sourceVirtualMachine] The source virtual machine from
 * which Image is created.
 * @property {string} [sourceVirtualMachine.id] Resource Id
 * @property {object} [storageProfile] Specifies the storage settings for the
 * virtual machine disks.
 * @property {object} [storageProfile.osDisk] Specifies information about the
 * operating system disk used by the virtual machine. <br><br> For more
 * information about disks, see [About disks and VHDs for Azure virtual
 * machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
 * @property {string} [storageProfile.osDisk.osType] This property allows you
 * to specify the type of the OS that is included in the disk if creating a VM
 * from a custom image. <br><br> Possible values are: <br><br> **Windows**
 * <br><br> **Linux**. Possible values include: 'Windows', 'Linux'
 * @property {string} [storageProfile.osDisk.osState] The OS State. Possible
 * values include: 'Generalized', 'Specialized'
 * @property {object} [storageProfile.osDisk.snapshot] The snapshot.
 * @property {string} [storageProfile.osDisk.snapshot.id] Resource Id
 * @property {object} [storageProfile.osDisk.managedDisk] The managedDisk.
 * @property {string} [storageProfile.osDisk.managedDisk.id] Resource Id
 * @property {string} [storageProfile.osDisk.blobUri] The Virtual Hard Disk.
 * @property {string} [storageProfile.osDisk.caching] Specifies the caching
 * requirements. <br><br> Possible values are: <br><br> **None** <br><br>
 * **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard
 * storage. ReadOnly for Premium storage**. Possible values include: 'None',
 * 'ReadOnly', 'ReadWrite'
 * @property {number} [storageProfile.osDisk.diskSizeGB] Specifies the size of
 * empty data disks in gigabytes. This element can be used to overwrite the
 * name of the disk in a virtual machine image. <br><br> This value cannot be
 * larger than 1023 GB
 * @property {string} [storageProfile.osDisk.storageAccountType] Specifies the
 * storage account type for the managed disk. UltraSSD_LRS cannot be used with
 * OS Disk. Possible values include: 'Standard_LRS', 'Premium_LRS',
 * 'StandardSSD_LRS', 'UltraSSD_LRS'
 * @property {array} [storageProfile.dataDisks] Specifies the parameters that
 * are used to add a data disk to a virtual machine. <br><br> For more
 * information about disks, see [About disks and VHDs for Azure virtual
 * machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
 * @property {boolean} [storageProfile.zoneResilient] Specifies whether an
 * image is zone resilient or not. Default is false. Zone resilient images can
 * be created only in regions that provide Zone Redundant Storage (ZRS).
 * @property {string} [provisioningState] The provisioning state.
 */
export interface Image extends Resource {
  sourceVirtualMachine?: SubResource;
  storageProfile?: ImageStorageProfile;
  readonly provisioningState?: string;
}

/**
 * @class
 * Initializes a new instance of the ImageUpdate class.
 * @constructor
 * The source user image virtual hard disk. Only tags may be updated.
 *
 * @property {object} [sourceVirtualMachine] The source virtual machine from
 * which Image is created.
 * @property {string} [sourceVirtualMachine.id] Resource Id
 * @property {object} [storageProfile] Specifies the storage settings for the
 * virtual machine disks.
 * @property {object} [storageProfile.osDisk] Specifies information about the
 * operating system disk used by the virtual machine. <br><br> For more
 * information about disks, see [About disks and VHDs for Azure virtual
 * machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
 * @property {string} [storageProfile.osDisk.osType] This property allows you
 * to specify the type of the OS that is included in the disk if creating a VM
 * from a custom image. <br><br> Possible values are: <br><br> **Windows**
 * <br><br> **Linux**. Possible values include: 'Windows', 'Linux'
 * @property {string} [storageProfile.osDisk.osState] The OS State. Possible
 * values include: 'Generalized', 'Specialized'
 * @property {object} [storageProfile.osDisk.snapshot] The snapshot.
 * @property {string} [storageProfile.osDisk.snapshot.id] Resource Id
 * @property {object} [storageProfile.osDisk.managedDisk] The managedDisk.
 * @property {string} [storageProfile.osDisk.managedDisk.id] Resource Id
 * @property {string} [storageProfile.osDisk.blobUri] The Virtual Hard Disk.
 * @property {string} [storageProfile.osDisk.caching] Specifies the caching
 * requirements. <br><br> Possible values are: <br><br> **None** <br><br>
 * **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard
 * storage. ReadOnly for Premium storage**. Possible values include: 'None',
 * 'ReadOnly', 'ReadWrite'
 * @property {number} [storageProfile.osDisk.diskSizeGB] Specifies the size of
 * empty data disks in gigabytes. This element can be used to overwrite the
 * name of the disk in a virtual machine image. <br><br> This value cannot be
 * larger than 1023 GB
 * @property {string} [storageProfile.osDisk.storageAccountType] Specifies the
 * storage account type for the managed disk. UltraSSD_LRS cannot be used with
 * OS Disk. Possible values include: 'Standard_LRS', 'Premium_LRS',
 * 'StandardSSD_LRS', 'UltraSSD_LRS'
 * @property {array} [storageProfile.dataDisks] Specifies the parameters that
 * are used to add a data disk to a virtual machine. <br><br> For more
 * information about disks, see [About disks and VHDs for Azure virtual
 * machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
 * @property {boolean} [storageProfile.zoneResilient] Specifies whether an
 * image is zone resilient or not. Default is false. Zone resilient images can
 * be created only in regions that provide Zone Redundant Storage (ZRS).
 * @property {string} [provisioningState] The provisioning state.
 */
export interface ImageUpdate extends UpdateResource {
  sourceVirtualMachine?: SubResource;
  storageProfile?: ImageStorageProfile;
  readonly provisioningState?: string;
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineScaleSetIdentityUserAssignedIdentitiesValue class.
 * @constructor
 * @property {string} [principalId] The principal id of user assigned identity.
 * @property {string} [clientId] The client id of user assigned identity.
 */
export interface VirtualMachineScaleSetIdentityUserAssignedIdentitiesValue {
  readonly principalId?: string;
  readonly clientId?: string;
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineScaleSetIdentity class.
 * @constructor
 * Identity for the virtual machine scale set.
 *
 * @property {string} [principalId] The principal id of virtual machine scale
 * set identity. This property will only be provided for a system assigned
 * identity.
 * @property {string} [tenantId] The tenant id associated with the virtual
 * machine scale set. This property will only be provided for a system assigned
 * identity.
 * @property {string} [type] The type of identity used for the virtual machine
 * scale set. The type 'SystemAssigned, UserAssigned' includes both an
 * implicitly created identity and a set of user assigned identities. The type
 * 'None' will remove any identities from the virtual machine scale set.
 * Possible values include: 'SystemAssigned', 'UserAssigned', 'SystemAssigned,
 * UserAssigned', 'None'
 * @property {object} [userAssignedIdentities] The list of user identities
 * associated with the virtual machine scale set. The user identity dictionary
 * key references will be ARM resource ids in the form:
 * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
 */
export interface VirtualMachineScaleSetIdentity {
  readonly principalId?: string;
  readonly tenantId?: string;
  type?: string;
  userAssignedIdentities?: { [propertyName: string]: VirtualMachineScaleSetIdentityUserAssignedIdentitiesValue };
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineScaleSetOSProfile class.
 * @constructor
 * Describes a virtual machine scale set OS profile.
 *
 * @property {string} [computerNamePrefix] Specifies the computer name prefix
 * for all of the virtual machines in the scale set. Computer name prefixes
 * must be 1 to 15 characters long.
 * @property {string} [adminUsername] Specifies the name of the administrator
 * account. <br><br> **Windows-only restriction:** Cannot end in "." <br><br>
 * **Disallowed values:** "administrator", "admin", "user", "user1", "test",
 * "user2", "test1", "user3", "admin1", "1", "123", "a", "actuser", "adm",
 * "admin2", "aspnet", "backup", "console", "david", "guest", "john", "owner",
 * "root", "server", "sql", "support", "support_388945a0", "sys", "test2",
 * "test3", "user4", "user5". <br><br> **Minimum-length (Linux):** 1  character
 * <br><br> **Max-length (Linux):** 64 characters <br><br> **Max-length
 * (Windows):** 20 characters  <br><br><li> For root access to the Linux VM,
 * see [Using root privileges on Linux virtual machines in
 * Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-use-root-privileges?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)<br><li>
 * For a list of built-in system users on Linux that should not be used in this
 * field, see [Selecting User Names for Linux on
 * Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-usernames?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
 * @property {string} [adminPassword] Specifies the password of the
 * administrator account. <br><br> **Minimum-length (Windows):** 8 characters
 * <br><br> **Minimum-length (Linux):** 6 characters <br><br> **Max-length
 * (Windows):** 123 characters <br><br> **Max-length (Linux):** 72 characters
 * <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be
 * fulfilled <br> Has lower characters <br>Has upper characters <br> Has a
 * digit <br> Has a special character (Regex match [\W_]) <br><br> **Disallowed
 * values:** "abc@123", "P@$$w0rd", "P@ssw0rd", "P@ssword123", "Pa$$word",
 * "pass@word1", "Password!", "Password1", "Password22", "iloveyou!" <br><br>
 * For resetting the password, see [How to reset the Remote Desktop service or
 * its login password in a Windows
 * VM](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-reset-rdp?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json)
 * <br><br> For resetting root password, see [Manage users, SSH, and check or
 * repair disks on Azure Linux VMs using the VMAccess
 * Extension](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-vmaccess-extension?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json#reset-root-password)
 * @property {string} [customData] Specifies a base-64 encoded string of custom
 * data. The base-64 encoded string is decoded to a binary array that is saved
 * as a file on the Virtual Machine. The maximum length of the binary array is
 * 65535 bytes. <br><br> For using cloud-init for your VM, see [Using
 * cloud-init to customize a Linux VM during
 * creation](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-cloud-init?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
 * @property {object} [windowsConfiguration] Specifies Windows operating system
 * settings on the virtual machine.
 * @property {boolean} [windowsConfiguration.provisionVMAgent] Indicates
 * whether virtual machine agent should be provisioned on the virtual machine.
 * <br><br> When this property is not specified in the request body, default
 * behavior is to set it to true.  This will ensure that VM Agent is installed
 * on the VM so that extensions can be added to the VM later.
 * @property {boolean} [windowsConfiguration.enableAutomaticUpdates] Indicates
 * whether virtual machine is enabled for automatic updates.
 * @property {string} [windowsConfiguration.timeZone] Specifies the time zone
 * of the virtual machine. e.g. "Pacific Standard Time"
 * @property {array} [windowsConfiguration.additionalUnattendContent] Specifies
 * additional base-64 encoded XML formatted information that can be included in
 * the Unattend.xml file, which is used by Windows Setup.
 * @property {object} [windowsConfiguration.winRM] Specifies the Windows Remote
 * Management listeners. This enables remote Windows PowerShell.
 * @property {array} [windowsConfiguration.winRM.listeners] The list of Windows
 * Remote Management listeners
 * @property {object} [linuxConfiguration] Specifies the Linux operating system
 * settings on the virtual machine. <br><br>For a list of supported Linux
 * distributions, see [Linux on Azure-Endorsed
 * Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-endorsed-distros?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
 * <br><br> For running non-endorsed distributions, see [Information for
 * Non-Endorsed
 * Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-create-upload-generic?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json).
 * @property {boolean} [linuxConfiguration.disablePasswordAuthentication]
 * Specifies whether password authentication should be disabled.
 * @property {object} [linuxConfiguration.ssh] Specifies the ssh key
 * configuration for a Linux OS.
 * @property {array} [linuxConfiguration.ssh.publicKeys] The list of SSH public
 * keys used to authenticate with linux based VMs.
 * @property {boolean} [linuxConfiguration.provisionVMAgent] Indicates whether
 * virtual machine agent should be provisioned on the virtual machine. <br><br>
 * When this property is not specified in the request body, default behavior is
 * to set it to true.  This will ensure that VM Agent is installed on the VM so
 * that extensions can be added to the VM later.
 * @property {array} [secrets] Specifies set of certificates that should be
 * installed onto the virtual machines in the scale set.
 */
export interface VirtualMachineScaleSetOSProfile {
  computerNamePrefix?: string;
  adminUsername?: string;
  adminPassword?: string;
  customData?: string;
  windowsConfiguration?: WindowsConfiguration;
  linuxConfiguration?: LinuxConfiguration;
  secrets?: VaultSecretGroup[];
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineScaleSetUpdateOSProfile class.
 * @constructor
 * Describes a virtual machine scale set OS profile.
 *
 * @property {string} [customData] A base-64 encoded string of custom data.
 * @property {object} [windowsConfiguration] The Windows Configuration of the
 * OS profile.
 * @property {boolean} [windowsConfiguration.provisionVMAgent] Indicates
 * whether virtual machine agent should be provisioned on the virtual machine.
 * <br><br> When this property is not specified in the request body, default
 * behavior is to set it to true.  This will ensure that VM Agent is installed
 * on the VM so that extensions can be added to the VM later.
 * @property {boolean} [windowsConfiguration.enableAutomaticUpdates] Indicates
 * whether virtual machine is enabled for automatic updates.
 * @property {string} [windowsConfiguration.timeZone] Specifies the time zone
 * of the virtual machine. e.g. "Pacific Standard Time"
 * @property {array} [windowsConfiguration.additionalUnattendContent] Specifies
 * additional base-64 encoded XML formatted information that can be included in
 * the Unattend.xml file, which is used by Windows Setup.
 * @property {object} [windowsConfiguration.winRM] Specifies the Windows Remote
 * Management listeners. This enables remote Windows PowerShell.
 * @property {array} [windowsConfiguration.winRM.listeners] The list of Windows
 * Remote Management listeners
 * @property {object} [linuxConfiguration] The Linux Configuration of the OS
 * profile.
 * @property {boolean} [linuxConfiguration.disablePasswordAuthentication]
 * Specifies whether password authentication should be disabled.
 * @property {object} [linuxConfiguration.ssh] Specifies the ssh key
 * configuration for a Linux OS.
 * @property {array} [linuxConfiguration.ssh.publicKeys] The list of SSH public
 * keys used to authenticate with linux based VMs.
 * @property {boolean} [linuxConfiguration.provisionVMAgent] Indicates whether
 * virtual machine agent should be provisioned on the virtual machine. <br><br>
 * When this property is not specified in the request body, default behavior is
 * to set it to true.  This will ensure that VM Agent is installed on the VM so
 * that extensions can be added to the VM later.
 * @property {array} [secrets] The List of certificates for addition to the VM.
 */
export interface VirtualMachineScaleSetUpdateOSProfile {
  customData?: string;
  windowsConfiguration?: WindowsConfiguration;
  linuxConfiguration?: LinuxConfiguration;
  secrets?: VaultSecretGroup[];
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineScaleSetManagedDiskParameters class.
 * @constructor
 * Describes the parameters of a ScaleSet managed disk.
 *
 * @property {string} [storageAccountType] Specifies the storage account type
 * for the managed disk. NOTE: UltraSSD_LRS can only be used with data disks,
 * it cannot be used with OS Disk. Possible values include: 'Standard_LRS',
 * 'Premium_LRS', 'StandardSSD_LRS', 'UltraSSD_LRS'
 */
export interface VirtualMachineScaleSetManagedDiskParameters {
  storageAccountType?: string;
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineScaleSetOSDisk class.
 * @constructor
 * Describes a virtual machine scale set operating system disk.
 *
 * @property {string} [name] The disk name.
 * @property {string} [caching] Specifies the caching requirements. <br><br>
 * Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br>
 * **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly for
 * Premium storage**. Possible values include: 'None', 'ReadOnly', 'ReadWrite'
 * @property {boolean} [writeAcceleratorEnabled] Specifies whether
 * writeAccelerator should be enabled or disabled on the disk.
 * @property {string} createOption Specifies how the virtual machines in the
 * scale set should be created.<br><br> The only allowed value is:
 * **FromImage** \u2013 This value is used when you are using an image to
 * create the virtual machine. If you are using a platform image, you also use
 * the imageReference element described above. If you are using a marketplace
 * image, you  also use the plan element previously described. Possible values
 * include: 'FromImage', 'Empty', 'Attach'
 * @property {object} [diffDiskSettings] Specifies the differencing Disk
 * Settings for the operating system disk used by the virtual machine scale
 * set.
 * @property {string} [diffDiskSettings.option] Specifies the differencing disk
 * settings for operating system disk. Possible values include: 'Local'
 * @property {number} [diskSizeGB] Specifies the size of the operating system
 * disk in gigabytes. This element can be used to overwrite the size of the
 * disk in a virtual machine image. <br><br> This value cannot be larger than
 * 1023 GB
 * @property {string} [osType] This property allows you to specify the type of
 * the OS that is included in the disk if creating a VM from user-image or a
 * specialized VHD. <br><br> Possible values are: <br><br> **Windows** <br><br>
 * **Linux**. Possible values include: 'Windows', 'Linux'
 * @property {object} [image] Specifies information about the unmanaged user
 * image to base the scale set on.
 * @property {string} [image.uri] Specifies the virtual hard disk's uri.
 * @property {array} [vhdContainers] Specifies the container urls that are used
 * to store operating system disks for the scale set.
 * @property {object} [managedDisk] The managed disk parameters.
 * @property {string} [managedDisk.storageAccountType] Specifies the storage
 * account type for the managed disk. NOTE: UltraSSD_LRS can only be used with
 * data disks, it cannot be used with OS Disk. Possible values include:
 * 'Standard_LRS', 'Premium_LRS', 'StandardSSD_LRS', 'UltraSSD_LRS'
 */
export interface VirtualMachineScaleSetOSDisk {
  name?: string;
  caching?: string;
  writeAcceleratorEnabled?: boolean;
  createOption: string;
  diffDiskSettings?: DiffDiskSettings;
  diskSizeGB?: number;
  osType?: string;
  image?: VirtualHardDisk;
  vhdContainers?: string[];
  managedDisk?: VirtualMachineScaleSetManagedDiskParameters;
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineScaleSetUpdateOSDisk class.
 * @constructor
 * Describes virtual machine scale set operating system disk Update Object.
 * This should be used for Updating VMSS OS Disk.
 *
 * @property {string} [caching] The caching type. Possible values include:
 * 'None', 'ReadOnly', 'ReadWrite'
 * @property {boolean} [writeAcceleratorEnabled] Specifies whether
 * writeAccelerator should be enabled or disabled on the disk.
 * @property {number} [diskSizeGB] Specifies the size of the operating system
 * disk in gigabytes. This element can be used to overwrite the size of the
 * disk in a virtual machine image. <br><br> This value cannot be larger than
 * 1023 GB
 * @property {object} [image] The Source User Image VirtualHardDisk. This
 * VirtualHardDisk will be copied before using it to attach to the Virtual
 * Machine. If SourceImage is provided, the destination VirtualHardDisk should
 * not exist.
 * @property {string} [image.uri] Specifies the virtual hard disk's uri.
 * @property {array} [vhdContainers] The list of virtual hard disk container
 * uris.
 * @property {object} [managedDisk] The managed disk parameters.
 * @property {string} [managedDisk.storageAccountType] Specifies the storage
 * account type for the managed disk. NOTE: UltraSSD_LRS can only be used with
 * data disks, it cannot be used with OS Disk. Possible values include:
 * 'Standard_LRS', 'Premium_LRS', 'StandardSSD_LRS', 'UltraSSD_LRS'
 */
export interface VirtualMachineScaleSetUpdateOSDisk {
  caching?: string;
  writeAcceleratorEnabled?: boolean;
  diskSizeGB?: number;
  image?: VirtualHardDisk;
  vhdContainers?: string[];
  managedDisk?: VirtualMachineScaleSetManagedDiskParameters;
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineScaleSetDataDisk class.
 * @constructor
 * Describes a virtual machine scale set data disk.
 *
 * @property {string} [name] The disk name.
 * @property {number} lun Specifies the logical unit number of the data disk.
 * This value is used to identify data disks within the VM and therefore must
 * be unique for each data disk attached to a VM.
 * @property {string} [caching] Specifies the caching requirements. <br><br>
 * Possible values are: <br><br> **None** <br><br> **ReadOnly** <br><br>
 * **ReadWrite** <br><br> Default: **None for Standard storage. ReadOnly for
 * Premium storage**. Possible values include: 'None', 'ReadOnly', 'ReadWrite'
 * @property {boolean} [writeAcceleratorEnabled] Specifies whether
 * writeAccelerator should be enabled or disabled on the disk.
 * @property {string} createOption The create option. Possible values include:
 * 'FromImage', 'Empty', 'Attach'
 * @property {number} [diskSizeGB] Specifies the size of an empty data disk in
 * gigabytes. This element can be used to overwrite the size of the disk in a
 * virtual machine image. <br><br> This value cannot be larger than 1023 GB
 * @property {object} [managedDisk] The managed disk parameters.
 * @property {string} [managedDisk.storageAccountType] Specifies the storage
 * account type for the managed disk. NOTE: UltraSSD_LRS can only be used with
 * data disks, it cannot be used with OS Disk. Possible values include:
 * 'Standard_LRS', 'Premium_LRS', 'StandardSSD_LRS', 'UltraSSD_LRS'
 */
export interface VirtualMachineScaleSetDataDisk {
  name?: string;
  lun: number;
  caching?: string;
  writeAcceleratorEnabled?: boolean;
  createOption: string;
  diskSizeGB?: number;
  managedDisk?: VirtualMachineScaleSetManagedDiskParameters;
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineScaleSetStorageProfile class.
 * @constructor
 * Describes a virtual machine scale set storage profile.
 *
 * @property {object} [imageReference] Specifies information about the image to
 * use. You can specify information about platform images, marketplace images,
 * or virtual machine images. This element is required when you want to use a
 * platform image, marketplace image, or virtual machine image, but is not used
 * in other creation operations.
 * @property {string} [imageReference.publisher] The image publisher.
 * @property {string} [imageReference.offer] Specifies the offer of the
 * platform image or marketplace image used to create the virtual machine.
 * @property {string} [imageReference.sku] The image SKU.
 * @property {string} [imageReference.version] Specifies the version of the
 * platform image or marketplace image used to create the virtual machine. The
 * allowed formats are Major.Minor.Build or 'latest'. Major, Minor, and Build
 * are decimal numbers. Specify 'latest' to use the latest version of an image
 * available at deploy time. Even if you use 'latest', the VM image will not
 * automatically update after deploy time even if a new version becomes
 * available.
 * @property {object} [osDisk] Specifies information about the operating system
 * disk used by the virtual machines in the scale set. <br><br> For more
 * information about disks, see [About disks and VHDs for Azure virtual
 * machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
 * @property {string} [osDisk.name] The disk name.
 * @property {string} [osDisk.caching] Specifies the caching requirements.
 * <br><br> Possible values are: <br><br> **None** <br><br> **ReadOnly**
 * <br><br> **ReadWrite** <br><br> Default: **None for Standard storage.
 * ReadOnly for Premium storage**. Possible values include: 'None', 'ReadOnly',
 * 'ReadWrite'
 * @property {boolean} [osDisk.writeAcceleratorEnabled] Specifies whether
 * writeAccelerator should be enabled or disabled on the disk.
 * @property {string} [osDisk.createOption] Specifies how the virtual machines
 * in the scale set should be created.<br><br> The only allowed value is:
 * **FromImage** \u2013 This value is used when you are using an image to
 * create the virtual machine. If you are using a platform image, you also use
 * the imageReference element described above. If you are using a marketplace
 * image, you  also use the plan element previously described. Possible values
 * include: 'FromImage', 'Empty', 'Attach'
 * @property {object} [osDisk.diffDiskSettings] Specifies the differencing Disk
 * Settings for the operating system disk used by the virtual machine scale
 * set.
 * @property {string} [osDisk.diffDiskSettings.option] Specifies the
 * differencing disk settings for operating system disk. Possible values
 * include: 'Local'
 * @property {number} [osDisk.diskSizeGB] Specifies the size of the operating
 * system disk in gigabytes. This element can be used to overwrite the size of
 * the disk in a virtual machine image. <br><br> This value cannot be larger
 * than 1023 GB
 * @property {string} [osDisk.osType] This property allows you to specify the
 * type of the OS that is included in the disk if creating a VM from user-image
 * or a specialized VHD. <br><br> Possible values are: <br><br> **Windows**
 * <br><br> **Linux**. Possible values include: 'Windows', 'Linux'
 * @property {object} [osDisk.image] Specifies information about the unmanaged
 * user image to base the scale set on.
 * @property {string} [osDisk.image.uri] Specifies the virtual hard disk's uri.
 * @property {array} [osDisk.vhdContainers] Specifies the container urls that
 * are used to store operating system disks for the scale set.
 * @property {object} [osDisk.managedDisk] The managed disk parameters.
 * @property {string} [osDisk.managedDisk.storageAccountType] Specifies the
 * storage account type for the managed disk. NOTE: UltraSSD_LRS can only be
 * used with data disks, it cannot be used with OS Disk. Possible values
 * include: 'Standard_LRS', 'Premium_LRS', 'StandardSSD_LRS', 'UltraSSD_LRS'
 * @property {array} [dataDisks] Specifies the parameters that are used to add
 * data disks to the virtual machines in the scale set. <br><br> For more
 * information about disks, see [About disks and VHDs for Azure virtual
 * machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
 */
export interface VirtualMachineScaleSetStorageProfile {
  imageReference?: ImageReference;
  osDisk?: VirtualMachineScaleSetOSDisk;
  dataDisks?: VirtualMachineScaleSetDataDisk[];
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineScaleSetUpdateStorageProfile class.
 * @constructor
 * Describes a virtual machine scale set storage profile.
 *
 * @property {object} [imageReference] The image reference.
 * @property {string} [imageReference.publisher] The image publisher.
 * @property {string} [imageReference.offer] Specifies the offer of the
 * platform image or marketplace image used to create the virtual machine.
 * @property {string} [imageReference.sku] The image SKU.
 * @property {string} [imageReference.version] Specifies the version of the
 * platform image or marketplace image used to create the virtual machine. The
 * allowed formats are Major.Minor.Build or 'latest'. Major, Minor, and Build
 * are decimal numbers. Specify 'latest' to use the latest version of an image
 * available at deploy time. Even if you use 'latest', the VM image will not
 * automatically update after deploy time even if a new version becomes
 * available.
 * @property {object} [osDisk] The OS disk.
 * @property {string} [osDisk.caching] The caching type. Possible values
 * include: 'None', 'ReadOnly', 'ReadWrite'
 * @property {boolean} [osDisk.writeAcceleratorEnabled] Specifies whether
 * writeAccelerator should be enabled or disabled on the disk.
 * @property {number} [osDisk.diskSizeGB] Specifies the size of the operating
 * system disk in gigabytes. This element can be used to overwrite the size of
 * the disk in a virtual machine image. <br><br> This value cannot be larger
 * than 1023 GB
 * @property {object} [osDisk.image] The Source User Image VirtualHardDisk.
 * This VirtualHardDisk will be copied before using it to attach to the Virtual
 * Machine. If SourceImage is provided, the destination VirtualHardDisk should
 * not exist.
 * @property {string} [osDisk.image.uri] Specifies the virtual hard disk's uri.
 * @property {array} [osDisk.vhdContainers] The list of virtual hard disk
 * container uris.
 * @property {object} [osDisk.managedDisk] The managed disk parameters.
 * @property {string} [osDisk.managedDisk.storageAccountType] Specifies the
 * storage account type for the managed disk. NOTE: UltraSSD_LRS can only be
 * used with data disks, it cannot be used with OS Disk. Possible values
 * include: 'Standard_LRS', 'Premium_LRS', 'StandardSSD_LRS', 'UltraSSD_LRS'
 * @property {array} [dataDisks] The data disks.
 */
export interface VirtualMachineScaleSetUpdateStorageProfile {
  imageReference?: ImageReference;
  osDisk?: VirtualMachineScaleSetUpdateOSDisk;
  dataDisks?: VirtualMachineScaleSetDataDisk[];
}

/**
 * @class
 * Initializes a new instance of the ApiEntityReference class.
 * @constructor
 * The API entity reference.
 *
 * @property {string} [id] The ARM resource id in the form of
 * /subscriptions/{SubcriptionId}/resourceGroups/{ResourceGroupName}/...
 */
export interface ApiEntityReference {
  id?: string;
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings class.
 * @constructor
 * Describes a virtual machines scale sets network configuration's DNS
 * settings.
 *
 * @property {string} domainNameLabel The Domain name label.The concatenation
 * of the domain name label and vm index will be the domain name labels of the
 * PublicIPAddress resources that will be created
 */
export interface VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings {
  domainNameLabel: string;
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineScaleSetIpTag class.
 * @constructor
 * Contains the IP tag associated with the public IP address.
 *
 * @property {string} [ipTagType] IP tag type. Example: FirstPartyUsage.
 * @property {string} [tag] IP tag associated with the public IP. Example: SQL,
 * Storage etc.
 */
export interface VirtualMachineScaleSetIpTag {
  ipTagType?: string;
  tag?: string;
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineScaleSetPublicIPAddressConfiguration class.
 * @constructor
 * Describes a virtual machines scale set IP Configuration's PublicIPAddress
 * configuration
 *
 * @property {string} name The publicIP address configuration name.
 * @property {number} [idleTimeoutInMinutes] The idle timeout of the public IP
 * address.
 * @property {object} [dnsSettings] The dns settings to be applied on the
 * publicIP addresses .
 * @property {string} [dnsSettings.domainNameLabel] The Domain name label.The
 * concatenation of the domain name label and vm index will be the domain name
 * labels of the PublicIPAddress resources that will be created
 * @property {array} [ipTags] The list of IP tags associated with the public IP
 * address.
 * @property {object} [publicIPPrefix] The PublicIPPrefix from which to
 * allocate publicIP addresses.
 * @property {string} [publicIPPrefix.id] Resource Id
 */
export interface VirtualMachineScaleSetPublicIPAddressConfiguration {
  name: string;
  idleTimeoutInMinutes?: number;
  dnsSettings?: VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings;
  ipTags?: VirtualMachineScaleSetIpTag[];
  publicIPPrefix?: SubResource;
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineScaleSetUpdatePublicIPAddressConfiguration class.
 * @constructor
 * Describes a virtual machines scale set IP Configuration's PublicIPAddress
 * configuration
 *
 * @property {string} [name] The publicIP address configuration name.
 * @property {number} [idleTimeoutInMinutes] The idle timeout of the public IP
 * address.
 * @property {object} [dnsSettings] The dns settings to be applied on the
 * publicIP addresses .
 * @property {string} [dnsSettings.domainNameLabel] The Domain name label.The
 * concatenation of the domain name label and vm index will be the domain name
 * labels of the PublicIPAddress resources that will be created
 */
export interface VirtualMachineScaleSetUpdatePublicIPAddressConfiguration {
  name?: string;
  idleTimeoutInMinutes?: number;
  dnsSettings?: VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings;
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineScaleSetIPConfiguration class.
 * @constructor
 * Describes a virtual machine scale set network profile's IP configuration.
 *
 * @property {string} name The IP configuration name.
 * @property {object} [subnet] Specifies the identifier of the subnet.
 * @property {string} [subnet.id] The ARM resource id in the form of
 * /subscriptions/{SubcriptionId}/resourceGroups/{ResourceGroupName}/...
 * @property {boolean} [primary] Specifies the primary network interface in
 * case the virtual machine has more than 1 network interface.
 * @property {object} [publicIPAddressConfiguration] The
 * publicIPAddressConfiguration.
 * @property {string} [publicIPAddressConfiguration.name] The publicIP address
 * configuration name.
 * @property {number} [publicIPAddressConfiguration.idleTimeoutInMinutes] The
 * idle timeout of the public IP address.
 * @property {object} [publicIPAddressConfiguration.dnsSettings] The dns
 * settings to be applied on the publicIP addresses .
 * @property {string}
 * [publicIPAddressConfiguration.dnsSettings.domainNameLabel] The Domain name
 * label.The concatenation of the domain name label and vm index will be the
 * domain name labels of the PublicIPAddress resources that will be created
 * @property {array} [publicIPAddressConfiguration.ipTags] The list of IP tags
 * associated with the public IP address.
 * @property {object} [publicIPAddressConfiguration.publicIPPrefix] The
 * PublicIPPrefix from which to allocate publicIP addresses.
 * @property {string} [publicIPAddressConfiguration.publicIPPrefix.id] Resource
 * Id
 * @property {string} [privateIPAddressVersion] Available from Api-Version
 * 2017-03-30 onwards, it represents whether the specific ipconfiguration is
 * IPv4 or IPv6. Default is taken as IPv4.  Possible values are: 'IPv4' and
 * 'IPv6'. Possible values include: 'IPv4', 'IPv6'
 * @property {array} [applicationGatewayBackendAddressPools] Specifies an array
 * of references to backend address pools of application gateways. A scale set
 * can reference backend address pools of multiple application gateways.
 * Multiple scale sets cannot use the same application gateway.
 * @property {array} [applicationSecurityGroups] Specifies an array of
 * references to application security group.
 * @property {array} [loadBalancerBackendAddressPools] Specifies an array of
 * references to backend address pools of load balancers. A scale set can
 * reference backend address pools of one public and one internal load
 * balancer. Multiple scale sets cannot use the same load balancer.
 * @property {array} [loadBalancerInboundNatPools] Specifies an array of
 * references to inbound Nat pools of the load balancers. A scale set can
 * reference inbound nat pools of one public and one internal load balancer.
 * Multiple scale sets cannot use the same load balancer
 */
export interface VirtualMachineScaleSetIPConfiguration extends SubResource {
  name: string;
  subnet?: ApiEntityReference;
  primary?: boolean;
  publicIPAddressConfiguration?: VirtualMachineScaleSetPublicIPAddressConfiguration;
  privateIPAddressVersion?: string;
  applicationGatewayBackendAddressPools?: SubResource[];
  applicationSecurityGroups?: SubResource[];
  loadBalancerBackendAddressPools?: SubResource[];
  loadBalancerInboundNatPools?: SubResource[];
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineScaleSetUpdateIPConfiguration class.
 * @constructor
 * Describes a virtual machine scale set network profile's IP configuration.
 *
 * @property {string} [name] The IP configuration name.
 * @property {object} [subnet] The subnet.
 * @property {string} [subnet.id] The ARM resource id in the form of
 * /subscriptions/{SubcriptionId}/resourceGroups/{ResourceGroupName}/...
 * @property {boolean} [primary] Specifies the primary IP Configuration in case
 * the network interface has more than one IP Configuration.
 * @property {object} [publicIPAddressConfiguration] The
 * publicIPAddressConfiguration.
 * @property {string} [publicIPAddressConfiguration.name] The publicIP address
 * configuration name.
 * @property {number} [publicIPAddressConfiguration.idleTimeoutInMinutes] The
 * idle timeout of the public IP address.
 * @property {object} [publicIPAddressConfiguration.dnsSettings] The dns
 * settings to be applied on the publicIP addresses .
 * @property {string}
 * [publicIPAddressConfiguration.dnsSettings.domainNameLabel] The Domain name
 * label.The concatenation of the domain name label and vm index will be the
 * domain name labels of the PublicIPAddress resources that will be created
 * @property {string} [privateIPAddressVersion] Available from Api-Version
 * 2017-03-30 onwards, it represents whether the specific ipconfiguration is
 * IPv4 or IPv6. Default is taken as IPv4.  Possible values are: 'IPv4' and
 * 'IPv6'. Possible values include: 'IPv4', 'IPv6'
 * @property {array} [applicationGatewayBackendAddressPools] The application
 * gateway backend address pools.
 * @property {array} [applicationSecurityGroups] Specifies an array of
 * references to application security group.
 * @property {array} [loadBalancerBackendAddressPools] The load balancer
 * backend address pools.
 * @property {array} [loadBalancerInboundNatPools] The load balancer inbound
 * nat pools.
 */
export interface VirtualMachineScaleSetUpdateIPConfiguration extends SubResource {
  name?: string;
  subnet?: ApiEntityReference;
  primary?: boolean;
  publicIPAddressConfiguration?: VirtualMachineScaleSetUpdatePublicIPAddressConfiguration;
  privateIPAddressVersion?: string;
  applicationGatewayBackendAddressPools?: SubResource[];
  applicationSecurityGroups?: SubResource[];
  loadBalancerBackendAddressPools?: SubResource[];
  loadBalancerInboundNatPools?: SubResource[];
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineScaleSetNetworkConfigurationDnsSettings class.
 * @constructor
 * Describes a virtual machines scale sets network configuration's DNS
 * settings.
 *
 * @property {array} [dnsServers] List of DNS servers IP addresses
 */
export interface VirtualMachineScaleSetNetworkConfigurationDnsSettings {
  dnsServers?: string[];
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineScaleSetNetworkConfiguration class.
 * @constructor
 * Describes a virtual machine scale set network profile's network
 * configurations.
 *
 * @property {string} name The network configuration name.
 * @property {boolean} [primary] Specifies the primary network interface in
 * case the virtual machine has more than 1 network interface.
 * @property {boolean} [enableAcceleratedNetworking] Specifies whether the
 * network interface is accelerated networking-enabled.
 * @property {object} [networkSecurityGroup] The network security group.
 * @property {string} [networkSecurityGroup.id] Resource Id
 * @property {object} [dnsSettings] The dns settings to be applied on the
 * network interfaces.
 * @property {array} [dnsSettings.dnsServers] List of DNS servers IP addresses
 * @property {array} ipConfigurations Specifies the IP configurations of the
 * network interface.
 * @property {boolean} [enableIPForwarding] Whether IP forwarding enabled on
 * this NIC.
 */
export interface VirtualMachineScaleSetNetworkConfiguration extends SubResource {
  name: string;
  primary?: boolean;
  enableAcceleratedNetworking?: boolean;
  networkSecurityGroup?: SubResource;
  dnsSettings?: VirtualMachineScaleSetNetworkConfigurationDnsSettings;
  ipConfigurations: VirtualMachineScaleSetIPConfiguration[];
  enableIPForwarding?: boolean;
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineScaleSetUpdateNetworkConfiguration class.
 * @constructor
 * Describes a virtual machine scale set network profile's network
 * configurations.
 *
 * @property {string} [name] The network configuration name.
 * @property {boolean} [primary] Whether this is a primary NIC on a virtual
 * machine.
 * @property {boolean} [enableAcceleratedNetworking] Specifies whether the
 * network interface is accelerated networking-enabled.
 * @property {object} [networkSecurityGroup] The network security group.
 * @property {string} [networkSecurityGroup.id] Resource Id
 * @property {object} [dnsSettings] The dns settings to be applied on the
 * network interfaces.
 * @property {array} [dnsSettings.dnsServers] List of DNS servers IP addresses
 * @property {array} [ipConfigurations] The virtual machine scale set IP
 * Configuration.
 * @property {boolean} [enableIPForwarding] Whether IP forwarding enabled on
 * this NIC.
 */
export interface VirtualMachineScaleSetUpdateNetworkConfiguration extends SubResource {
  name?: string;
  primary?: boolean;
  enableAcceleratedNetworking?: boolean;
  networkSecurityGroup?: SubResource;
  dnsSettings?: VirtualMachineScaleSetNetworkConfigurationDnsSettings;
  ipConfigurations?: VirtualMachineScaleSetUpdateIPConfiguration[];
  enableIPForwarding?: boolean;
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineScaleSetNetworkProfile class.
 * @constructor
 * Describes a virtual machine scale set network profile.
 *
 * @property {object} [healthProbe] A reference to a load balancer probe used
 * to determine the health of an instance in the virtual machine scale set. The
 * reference will be in the form:
 * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/probes/{probeName}'.
 * @property {string} [healthProbe.id] The ARM resource id in the form of
 * /subscriptions/{SubcriptionId}/resourceGroups/{ResourceGroupName}/...
 * @property {array} [networkInterfaceConfigurations] The list of network
 * configurations.
 */
export interface VirtualMachineScaleSetNetworkProfile {
  healthProbe?: ApiEntityReference;
  networkInterfaceConfigurations?: VirtualMachineScaleSetNetworkConfiguration[];
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineScaleSetUpdateNetworkProfile class.
 * @constructor
 * Describes a virtual machine scale set network profile.
 *
 * @property {array} [networkInterfaceConfigurations] The list of network
 * configurations.
 */
export interface VirtualMachineScaleSetUpdateNetworkProfile {
  networkInterfaceConfigurations?: VirtualMachineScaleSetUpdateNetworkConfiguration[];
}

/**
 * @class
 * Initializes a new instance of the SubResourceReadOnly class.
 * @constructor
 * @property {string} [id] Resource Id
 */
export interface SubResourceReadOnly extends BaseResource {
  readonly id?: string;
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineScaleSetExtension class.
 * @constructor
 * Describes a Virtual Machine Scale Set Extension.
 *
 * @property {string} [name] The name of the extension.
 * @property {string} [forceUpdateTag] If a value is provided and is different
 * from the previous value, the extension handler will be forced to update even
 * if the extension configuration has not changed.
 * @property {string} [publisher] The name of the extension handler publisher.
 * @property {string} [type] Specifies the type of the extension; an example is
 * "CustomScriptExtension".
 * @property {string} [typeHandlerVersion] Specifies the version of the script
 * handler.
 * @property {boolean} [autoUpgradeMinorVersion] Indicates whether the
 * extension should use a newer minor version if one is available at deployment
 * time. Once deployed, however, the extension will not upgrade minor versions
 * unless redeployed, even with this property set to true.
 * @property {object} [settings] Json formatted public settings for the
 * extension.
 * @property {object} [protectedSettings] The extension can contain either
 * protectedSettings or protectedSettingsFromKeyVault or no protected settings
 * at all.
 * @property {string} [provisioningState] The provisioning state, which only
 * appears in the response.
 */
export interface VirtualMachineScaleSetExtension extends SubResourceReadOnly {
  name?: string;
  forceUpdateTag?: string;
  publisher?: string;
  type?: string;
  typeHandlerVersion?: string;
  autoUpgradeMinorVersion?: boolean;
  settings?: any;
  protectedSettings?: any;
  readonly provisioningState?: string;
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineScaleSetExtensionProfile class.
 * @constructor
 * Describes a virtual machine scale set extension profile.
 *
 * @property {array} [extensions] The virtual machine scale set child extension
 * resources.
 */
export interface VirtualMachineScaleSetExtensionProfile {
  extensions?: VirtualMachineScaleSetExtension[];
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineScaleSetVMProfile class.
 * @constructor
 * Describes a virtual machine scale set virtual machine profile.
 *
 * @property {object} [osProfile] Specifies the operating system settings for
 * the virtual machines in the scale set.
 * @property {string} [osProfile.computerNamePrefix] Specifies the computer
 * name prefix for all of the virtual machines in the scale set. Computer name
 * prefixes must be 1 to 15 characters long.
 * @property {string} [osProfile.adminUsername] Specifies the name of the
 * administrator account. <br><br> **Windows-only restriction:** Cannot end in
 * "." <br><br> **Disallowed values:** "administrator", "admin", "user",
 * "user1", "test", "user2", "test1", "user3", "admin1", "1", "123", "a",
 * "actuser", "adm", "admin2", "aspnet", "backup", "console", "david", "guest",
 * "john", "owner", "root", "server", "sql", "support", "support_388945a0",
 * "sys", "test2", "test3", "user4", "user5". <br><br> **Minimum-length
 * (Linux):** 1  character <br><br> **Max-length (Linux):** 64 characters
 * <br><br> **Max-length (Windows):** 20 characters  <br><br><li> For root
 * access to the Linux VM, see [Using root privileges on Linux virtual machines
 * in
 * Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-use-root-privileges?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)<br><li>
 * For a list of built-in system users on Linux that should not be used in this
 * field, see [Selecting User Names for Linux on
 * Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-usernames?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
 * @property {string} [osProfile.adminPassword] Specifies the password of the
 * administrator account. <br><br> **Minimum-length (Windows):** 8 characters
 * <br><br> **Minimum-length (Linux):** 6 characters <br><br> **Max-length
 * (Windows):** 123 characters <br><br> **Max-length (Linux):** 72 characters
 * <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be
 * fulfilled <br> Has lower characters <br>Has upper characters <br> Has a
 * digit <br> Has a special character (Regex match [\W_]) <br><br> **Disallowed
 * values:** "abc@123", "P@$$w0rd", "P@ssw0rd", "P@ssword123", "Pa$$word",
 * "pass@word1", "Password!", "Password1", "Password22", "iloveyou!" <br><br>
 * For resetting the password, see [How to reset the Remote Desktop service or
 * its login password in a Windows
 * VM](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-reset-rdp?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json)
 * <br><br> For resetting root password, see [Manage users, SSH, and check or
 * repair disks on Azure Linux VMs using the VMAccess
 * Extension](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-vmaccess-extension?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json#reset-root-password)
 * @property {string} [osProfile.customData] Specifies a base-64 encoded string
 * of custom data. The base-64 encoded string is decoded to a binary array that
 * is saved as a file on the Virtual Machine. The maximum length of the binary
 * array is 65535 bytes. <br><br> For using cloud-init for your VM, see [Using
 * cloud-init to customize a Linux VM during
 * creation](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-cloud-init?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
 * @property {object} [osProfile.windowsConfiguration] Specifies Windows
 * operating system settings on the virtual machine.
 * @property {boolean} [osProfile.windowsConfiguration.provisionVMAgent]
 * Indicates whether virtual machine agent should be provisioned on the virtual
 * machine. <br><br> When this property is not specified in the request body,
 * default behavior is to set it to true.  This will ensure that VM Agent is
 * installed on the VM so that extensions can be added to the VM later.
 * @property {boolean} [osProfile.windowsConfiguration.enableAutomaticUpdates]
 * Indicates whether virtual machine is enabled for automatic updates.
 * @property {string} [osProfile.windowsConfiguration.timeZone] Specifies the
 * time zone of the virtual machine. e.g. "Pacific Standard Time"
 * @property {array} [osProfile.windowsConfiguration.additionalUnattendContent]
 * Specifies additional base-64 encoded XML formatted information that can be
 * included in the Unattend.xml file, which is used by Windows Setup.
 * @property {object} [osProfile.windowsConfiguration.winRM] Specifies the
 * Windows Remote Management listeners. This enables remote Windows PowerShell.
 * @property {array} [osProfile.windowsConfiguration.winRM.listeners] The list
 * of Windows Remote Management listeners
 * @property {object} [osProfile.linuxConfiguration] Specifies the Linux
 * operating system settings on the virtual machine. <br><br>For a list of
 * supported Linux distributions, see [Linux on Azure-Endorsed
 * Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-endorsed-distros?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
 * <br><br> For running non-endorsed distributions, see [Information for
 * Non-Endorsed
 * Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-create-upload-generic?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json).
 * @property {boolean}
 * [osProfile.linuxConfiguration.disablePasswordAuthentication] Specifies
 * whether password authentication should be disabled.
 * @property {object} [osProfile.linuxConfiguration.ssh] Specifies the ssh key
 * configuration for a Linux OS.
 * @property {array} [osProfile.linuxConfiguration.ssh.publicKeys] The list of
 * SSH public keys used to authenticate with linux based VMs.
 * @property {boolean} [osProfile.linuxConfiguration.provisionVMAgent]
 * Indicates whether virtual machine agent should be provisioned on the virtual
 * machine. <br><br> When this property is not specified in the request body,
 * default behavior is to set it to true.  This will ensure that VM Agent is
 * installed on the VM so that extensions can be added to the VM later.
 * @property {array} [osProfile.secrets] Specifies set of certificates that
 * should be installed onto the virtual machines in the scale set.
 * @property {object} [storageProfile] Specifies the storage settings for the
 * virtual machine disks.
 * @property {object} [storageProfile.imageReference] Specifies information
 * about the image to use. You can specify information about platform images,
 * marketplace images, or virtual machine images. This element is required when
 * you want to use a platform image, marketplace image, or virtual machine
 * image, but is not used in other creation operations.
 * @property {string} [storageProfile.imageReference.publisher] The image
 * publisher.
 * @property {string} [storageProfile.imageReference.offer] Specifies the offer
 * of the platform image or marketplace image used to create the virtual
 * machine.
 * @property {string} [storageProfile.imageReference.sku] The image SKU.
 * @property {string} [storageProfile.imageReference.version] Specifies the
 * version of the platform image or marketplace image used to create the
 * virtual machine. The allowed formats are Major.Minor.Build or 'latest'.
 * Major, Minor, and Build are decimal numbers. Specify 'latest' to use the
 * latest version of an image available at deploy time. Even if you use
 * 'latest', the VM image will not automatically update after deploy time even
 * if a new version becomes available.
 * @property {object} [storageProfile.osDisk] Specifies information about the
 * operating system disk used by the virtual machines in the scale set.
 * <br><br> For more information about disks, see [About disks and VHDs for
 * Azure virtual
 * machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
 * @property {string} [storageProfile.osDisk.name] The disk name.
 * @property {string} [storageProfile.osDisk.caching] Specifies the caching
 * requirements. <br><br> Possible values are: <br><br> **None** <br><br>
 * **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard
 * storage. ReadOnly for Premium storage**. Possible values include: 'None',
 * 'ReadOnly', 'ReadWrite'
 * @property {boolean} [storageProfile.osDisk.writeAcceleratorEnabled]
 * Specifies whether writeAccelerator should be enabled or disabled on the
 * disk.
 * @property {string} [storageProfile.osDisk.createOption] Specifies how the
 * virtual machines in the scale set should be created.<br><br> The only
 * allowed value is: **FromImage** \u2013 This value is used when you are using
 * an image to create the virtual machine. If you are using a platform image,
 * you also use the imageReference element described above. If you are using a
 * marketplace image, you  also use the plan element previously described.
 * Possible values include: 'FromImage', 'Empty', 'Attach'
 * @property {object} [storageProfile.osDisk.diffDiskSettings] Specifies the
 * differencing Disk Settings for the operating system disk used by the virtual
 * machine scale set.
 * @property {string} [storageProfile.osDisk.diffDiskSettings.option] Specifies
 * the differencing disk settings for operating system disk. Possible values
 * include: 'Local'
 * @property {number} [storageProfile.osDisk.diskSizeGB] Specifies the size of
 * the operating system disk in gigabytes. This element can be used to
 * overwrite the size of the disk in a virtual machine image. <br><br> This
 * value cannot be larger than 1023 GB
 * @property {string} [storageProfile.osDisk.osType] This property allows you
 * to specify the type of the OS that is included in the disk if creating a VM
 * from user-image or a specialized VHD. <br><br> Possible values are: <br><br>
 * **Windows** <br><br> **Linux**. Possible values include: 'Windows', 'Linux'
 * @property {object} [storageProfile.osDisk.image] Specifies information about
 * the unmanaged user image to base the scale set on.
 * @property {string} [storageProfile.osDisk.image.uri] Specifies the virtual
 * hard disk's uri.
 * @property {array} [storageProfile.osDisk.vhdContainers] Specifies the
 * container urls that are used to store operating system disks for the scale
 * set.
 * @property {object} [storageProfile.osDisk.managedDisk] The managed disk
 * parameters.
 * @property {string} [storageProfile.osDisk.managedDisk.storageAccountType]
 * Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS
 * can only be used with data disks, it cannot be used with OS Disk. Possible
 * values include: 'Standard_LRS', 'Premium_LRS', 'StandardSSD_LRS',
 * 'UltraSSD_LRS'
 * @property {array} [storageProfile.dataDisks] Specifies the parameters that
 * are used to add data disks to the virtual machines in the scale set.
 * <br><br> For more information about disks, see [About disks and VHDs for
 * Azure virtual
 * machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
 * @property {object} [additionalCapabilities] Specifies additional
 * capabilities enabled or disabled on the virtual machine in the scale set.
 * For instance: whether the virtual machine has the capability to support
 * attaching managed data disks with UltraSSD_LRS storage account type.
 * @property {boolean} [additionalCapabilities.ultraSSDEnabled] The flag that
 * enables or disables a capability to have one or more managed data disks with
 * UltraSSD_LRS storage account type on the VM or VMSS. Managed disks with
 * storage account type UltraSSD_LRS can be added to a virtual machine or
 * virtual machine scale set only if this property is enabled.
 * @property {object} [networkProfile] Specifies properties of the network
 * interfaces of the virtual machines in the scale set.
 * @property {object} [networkProfile.healthProbe] A reference to a load
 * balancer probe used to determine the health of an instance in the virtual
 * machine scale set. The reference will be in the form:
 * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/probes/{probeName}'.
 * @property {string} [networkProfile.healthProbe.id] The ARM resource id in
 * the form of
 * /subscriptions/{SubcriptionId}/resourceGroups/{ResourceGroupName}/...
 * @property {array} [networkProfile.networkInterfaceConfigurations] The list
 * of network configurations.
 * @property {object} [diagnosticsProfile] Specifies the boot diagnostic
 * settings state. <br><br>Minimum api-version: 2015-06-15.
 * @property {object} [diagnosticsProfile.bootDiagnostics] Boot Diagnostics is
 * a debugging feature which allows you to view Console Output and Screenshot
 * to diagnose VM status. <br><br> You can easily view the output of your
 * console log. <br><br> Azure also enables you to see a screenshot of the VM
 * from the hypervisor.
 * @property {boolean} [diagnosticsProfile.bootDiagnostics.enabled] Whether
 * boot diagnostics should be enabled on the Virtual Machine.
 * @property {string} [diagnosticsProfile.bootDiagnostics.storageUri] Uri of
 * the storage account to use for placing the console output and screenshot.
 * @property {object} [extensionProfile] Specifies a collection of settings for
 * extensions installed on virtual machines in the scale set.
 * @property {array} [extensionProfile.extensions] The virtual machine scale
 * set child extension resources.
 * @property {string} [licenseType] Specifies that the image or disk that is
 * being used was licensed on-premises. This element is only used for images
 * that contain the Windows Server operating system. <br><br> Possible values
 * are: <br><br> Windows_Client <br><br> Windows_Server <br><br> If this
 * element is included in a request for an update, the value must match the
 * initial value. This value cannot be updated. <br><br> For more information,
 * see [Azure Hybrid Use Benefit for Windows
 * Server](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-hybrid-use-benefit-licensing?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json)
 * <br><br> Minimum api-version: 2015-06-15
 * @property {string} [priority] Specifies the priority for the virtual
 * machines in the scale set. <br><br>Minimum api-version: 2017-10-30-preview.
 * Possible values include: 'Regular', 'Low'
 * @property {string} [evictionPolicy] Specifies the eviction policy for
 * virtual machines in a low priority scale set. <br><br>Minimum api-version:
 * 2017-10-30-preview. Possible values include: 'Deallocate', 'Delete'
 */
export interface VirtualMachineScaleSetVMProfile {
  osProfile?: VirtualMachineScaleSetOSProfile;
  storageProfile?: VirtualMachineScaleSetStorageProfile;
  additionalCapabilities?: AdditionalCapabilities;
  networkProfile?: VirtualMachineScaleSetNetworkProfile;
  diagnosticsProfile?: DiagnosticsProfile;
  extensionProfile?: VirtualMachineScaleSetExtensionProfile;
  licenseType?: string;
  priority?: string;
  evictionPolicy?: string;
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineScaleSetUpdateVMProfile class.
 * @constructor
 * Describes a virtual machine scale set virtual machine profile.
 *
 * @property {object} [osProfile] The virtual machine scale set OS profile.
 * @property {string} [osProfile.customData] A base-64 encoded string of custom
 * data.
 * @property {object} [osProfile.windowsConfiguration] The Windows
 * Configuration of the OS profile.
 * @property {boolean} [osProfile.windowsConfiguration.provisionVMAgent]
 * Indicates whether virtual machine agent should be provisioned on the virtual
 * machine. <br><br> When this property is not specified in the request body,
 * default behavior is to set it to true.  This will ensure that VM Agent is
 * installed on the VM so that extensions can be added to the VM later.
 * @property {boolean} [osProfile.windowsConfiguration.enableAutomaticUpdates]
 * Indicates whether virtual machine is enabled for automatic updates.
 * @property {string} [osProfile.windowsConfiguration.timeZone] Specifies the
 * time zone of the virtual machine. e.g. "Pacific Standard Time"
 * @property {array} [osProfile.windowsConfiguration.additionalUnattendContent]
 * Specifies additional base-64 encoded XML formatted information that can be
 * included in the Unattend.xml file, which is used by Windows Setup.
 * @property {object} [osProfile.windowsConfiguration.winRM] Specifies the
 * Windows Remote Management listeners. This enables remote Windows PowerShell.
 * @property {array} [osProfile.windowsConfiguration.winRM.listeners] The list
 * of Windows Remote Management listeners
 * @property {object} [osProfile.linuxConfiguration] The Linux Configuration of
 * the OS profile.
 * @property {boolean}
 * [osProfile.linuxConfiguration.disablePasswordAuthentication] Specifies
 * whether password authentication should be disabled.
 * @property {object} [osProfile.linuxConfiguration.ssh] Specifies the ssh key
 * configuration for a Linux OS.
 * @property {array} [osProfile.linuxConfiguration.ssh.publicKeys] The list of
 * SSH public keys used to authenticate with linux based VMs.
 * @property {boolean} [osProfile.linuxConfiguration.provisionVMAgent]
 * Indicates whether virtual machine agent should be provisioned on the virtual
 * machine. <br><br> When this property is not specified in the request body,
 * default behavior is to set it to true.  This will ensure that VM Agent is
 * installed on the VM so that extensions can be added to the VM later.
 * @property {array} [osProfile.secrets] The List of certificates for addition
 * to the VM.
 * @property {object} [storageProfile] The virtual machine scale set storage
 * profile.
 * @property {object} [storageProfile.imageReference] The image reference.
 * @property {string} [storageProfile.imageReference.publisher] The image
 * publisher.
 * @property {string} [storageProfile.imageReference.offer] Specifies the offer
 * of the platform image or marketplace image used to create the virtual
 * machine.
 * @property {string} [storageProfile.imageReference.sku] The image SKU.
 * @property {string} [storageProfile.imageReference.version] Specifies the
 * version of the platform image or marketplace image used to create the
 * virtual machine. The allowed formats are Major.Minor.Build or 'latest'.
 * Major, Minor, and Build are decimal numbers. Specify 'latest' to use the
 * latest version of an image available at deploy time. Even if you use
 * 'latest', the VM image will not automatically update after deploy time even
 * if a new version becomes available.
 * @property {object} [storageProfile.osDisk] The OS disk.
 * @property {string} [storageProfile.osDisk.caching] The caching type.
 * Possible values include: 'None', 'ReadOnly', 'ReadWrite'
 * @property {boolean} [storageProfile.osDisk.writeAcceleratorEnabled]
 * Specifies whether writeAccelerator should be enabled or disabled on the
 * disk.
 * @property {number} [storageProfile.osDisk.diskSizeGB] Specifies the size of
 * the operating system disk in gigabytes. This element can be used to
 * overwrite the size of the disk in a virtual machine image. <br><br> This
 * value cannot be larger than 1023 GB
 * @property {object} [storageProfile.osDisk.image] The Source User Image
 * VirtualHardDisk. This VirtualHardDisk will be copied before using it to
 * attach to the Virtual Machine. If SourceImage is provided, the destination
 * VirtualHardDisk should not exist.
 * @property {string} [storageProfile.osDisk.image.uri] Specifies the virtual
 * hard disk's uri.
 * @property {array} [storageProfile.osDisk.vhdContainers] The list of virtual
 * hard disk container uris.
 * @property {object} [storageProfile.osDisk.managedDisk] The managed disk
 * parameters.
 * @property {string} [storageProfile.osDisk.managedDisk.storageAccountType]
 * Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS
 * can only be used with data disks, it cannot be used with OS Disk. Possible
 * values include: 'Standard_LRS', 'Premium_LRS', 'StandardSSD_LRS',
 * 'UltraSSD_LRS'
 * @property {array} [storageProfile.dataDisks] The data disks.
 * @property {object} [networkProfile] The virtual machine scale set network
 * profile.
 * @property {array} [networkProfile.networkInterfaceConfigurations] The list
 * of network configurations.
 * @property {object} [diagnosticsProfile] The virtual machine scale set
 * diagnostics profile.
 * @property {object} [diagnosticsProfile.bootDiagnostics] Boot Diagnostics is
 * a debugging feature which allows you to view Console Output and Screenshot
 * to diagnose VM status. <br><br> You can easily view the output of your
 * console log. <br><br> Azure also enables you to see a screenshot of the VM
 * from the hypervisor.
 * @property {boolean} [diagnosticsProfile.bootDiagnostics.enabled] Whether
 * boot diagnostics should be enabled on the Virtual Machine.
 * @property {string} [diagnosticsProfile.bootDiagnostics.storageUri] Uri of
 * the storage account to use for placing the console output and screenshot.
 * @property {object} [extensionProfile] The virtual machine scale set
 * extension profile.
 * @property {array} [extensionProfile.extensions] The virtual machine scale
 * set child extension resources.
 * @property {string} [licenseType] The license type, which is for bring your
 * own license scenario.
 */
export interface VirtualMachineScaleSetUpdateVMProfile {
  osProfile?: VirtualMachineScaleSetUpdateOSProfile;
  storageProfile?: VirtualMachineScaleSetUpdateStorageProfile;
  networkProfile?: VirtualMachineScaleSetUpdateNetworkProfile;
  diagnosticsProfile?: DiagnosticsProfile;
  extensionProfile?: VirtualMachineScaleSetExtensionProfile;
  licenseType?: string;
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineScaleSet class.
 * @constructor
 * Describes a Virtual Machine Scale Set.
 *
 * @property {object} [sku] The virtual machine scale set sku.
 * @property {string} [sku.name] The sku name.
 * @property {string} [sku.tier] Specifies the tier of virtual machines in a
 * scale set.<br /><br /> Possible Values:<br /><br /> **Standard**<br /><br />
 * **Basic**
 * @property {number} [sku.capacity] Specifies the number of virtual machines
 * in the scale set.
 * @property {object} [plan] Specifies information about the marketplace image
 * used to create the virtual machine. This element is only used for
 * marketplace images. Before you can use a marketplace image from an API, you
 * must enable the image for programmatic use.  In the Azure portal, find the
 * marketplace image that you want to use and then click **Want to deploy
 * programmatically, Get Started ->**. Enter any required information and then
 * click **Save**.
 * @property {string} [plan.name] The plan ID.
 * @property {string} [plan.publisher] The publisher ID.
 * @property {string} [plan.product] Specifies the product of the image from
 * the marketplace. This is the same value as Offer under the imageReference
 * element.
 * @property {string} [plan.promotionCode] The promotion code.
 * @property {object} [upgradePolicy] The upgrade policy.
 * @property {string} [upgradePolicy.mode] Specifies the mode of an upgrade to
 * virtual machines in the scale set.<br /><br /> Possible values are:<br /><br
 * /> **Manual** - You  control the application of updates to virtual machines
 * in the scale set. You do this by using the manualUpgrade action.<br /><br />
 * **Automatic** - All virtual machines in the scale set are  automatically
 * updated at the same time. Possible values include: 'Automatic', 'Manual',
 * 'Rolling'
 * @property {object} [upgradePolicy.rollingUpgradePolicy] The configuration
 * parameters used while performing a rolling upgrade.
 * @property {number}
 * [upgradePolicy.rollingUpgradePolicy.maxBatchInstancePercent] The maximum
 * percent of total virtual machine instances that will be upgraded
 * simultaneously by the rolling upgrade in one batch. As this is a maximum,
 * unhealthy instances in previous or future batches can cause the percentage
 * of instances in a batch to decrease to ensure higher reliability. The
 * default value for this parameter is 20%.
 * @property {number}
 * [upgradePolicy.rollingUpgradePolicy.maxUnhealthyInstancePercent] The maximum
 * percentage of the total virtual machine instances in the scale set that can
 * be simultaneously unhealthy, either as a result of being upgraded, or by
 * being found in an unhealthy state by the virtual machine health checks
 * before the rolling upgrade aborts. This constraint will be checked prior to
 * starting any batch. The default value for this parameter is 20%.
 * @property {number}
 * [upgradePolicy.rollingUpgradePolicy.maxUnhealthyUpgradedInstancePercent] The
 * maximum percentage of upgraded virtual machine instances that can be found
 * to be in an unhealthy state. This check will happen after each batch is
 * upgraded. If this percentage is ever exceeded, the rolling update aborts.
 * The default value for this parameter is 20%.
 * @property {string}
 * [upgradePolicy.rollingUpgradePolicy.pauseTimeBetweenBatches] The wait time
 * between completing the update for all virtual machines in one batch and
 * starting the next batch. The time duration should be specified in ISO 8601
 * format. The default value is 0 seconds (PT0S).
 * @property {object} [upgradePolicy.automaticOSUpgradePolicy] Configuration
 * parameters used for performing automatic OS Upgrade.
 * @property {boolean}
 * [upgradePolicy.automaticOSUpgradePolicy.enableAutomaticOSUpgrade] Whether OS
 * upgrades should automatically be applied to scale set instances in a rolling
 * fashion when a newer version of the image becomes available. Default value
 * is false.
 * @property {boolean}
 * [upgradePolicy.automaticOSUpgradePolicy.disableAutomaticRollback] Whether OS
 * image rollback feature should be disabled. Default value is false.
 * @property {object} [virtualMachineProfile] The virtual machine profile.
 * @property {object} [virtualMachineProfile.osProfile] Specifies the operating
 * system settings for the virtual machines in the scale set.
 * @property {string} [virtualMachineProfile.osProfile.computerNamePrefix]
 * Specifies the computer name prefix for all of the virtual machines in the
 * scale set. Computer name prefixes must be 1 to 15 characters long.
 * @property {string} [virtualMachineProfile.osProfile.adminUsername] Specifies
 * the name of the administrator account. <br><br> **Windows-only
 * restriction:** Cannot end in "." <br><br> **Disallowed values:**
 * "administrator", "admin", "user", "user1", "test", "user2", "test1",
 * "user3", "admin1", "1", "123", "a", "actuser", "adm", "admin2", "aspnet",
 * "backup", "console", "david", "guest", "john", "owner", "root", "server",
 * "sql", "support", "support_388945a0", "sys", "test2", "test3", "user4",
 * "user5". <br><br> **Minimum-length (Linux):** 1  character <br><br>
 * **Max-length (Linux):** 64 characters <br><br> **Max-length (Windows):** 20
 * characters  <br><br><li> For root access to the Linux VM, see [Using root
 * privileges on Linux virtual machines in
 * Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-use-root-privileges?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)<br><li>
 * For a list of built-in system users on Linux that should not be used in this
 * field, see [Selecting User Names for Linux on
 * Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-usernames?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
 * @property {string} [virtualMachineProfile.osProfile.adminPassword] Specifies
 * the password of the administrator account. <br><br> **Minimum-length
 * (Windows):** 8 characters <br><br> **Minimum-length (Linux):** 6 characters
 * <br><br> **Max-length (Windows):** 123 characters <br><br> **Max-length
 * (Linux):** 72 characters <br><br> **Complexity requirements:** 3 out of 4
 * conditions below need to be fulfilled <br> Has lower characters <br>Has
 * upper characters <br> Has a digit <br> Has a special character (Regex match
 * [\W_]) <br><br> **Disallowed values:** "abc@123", "P@$$w0rd", "P@ssw0rd",
 * "P@ssword123", "Pa$$word", "pass@word1", "Password!", "Password1",
 * "Password22", "iloveyou!" <br><br> For resetting the password, see [How to
 * reset the Remote Desktop service or its login password in a Windows
 * VM](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-reset-rdp?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json)
 * <br><br> For resetting root password, see [Manage users, SSH, and check or
 * repair disks on Azure Linux VMs using the VMAccess
 * Extension](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-vmaccess-extension?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json#reset-root-password)
 * @property {string} [virtualMachineProfile.osProfile.customData] Specifies a
 * base-64 encoded string of custom data. The base-64 encoded string is decoded
 * to a binary array that is saved as a file on the Virtual Machine. The
 * maximum length of the binary array is 65535 bytes. <br><br> For using
 * cloud-init for your VM, see [Using cloud-init to customize a Linux VM during
 * creation](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-cloud-init?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
 * @property {object} [virtualMachineProfile.osProfile.windowsConfiguration]
 * Specifies Windows operating system settings on the virtual machine.
 * @property {boolean}
 * [virtualMachineProfile.osProfile.windowsConfiguration.provisionVMAgent]
 * Indicates whether virtual machine agent should be provisioned on the virtual
 * machine. <br><br> When this property is not specified in the request body,
 * default behavior is to set it to true.  This will ensure that VM Agent is
 * installed on the VM so that extensions can be added to the VM later.
 * @property {boolean}
 * [virtualMachineProfile.osProfile.windowsConfiguration.enableAutomaticUpdates]
 * Indicates whether virtual machine is enabled for automatic updates.
 * @property {string}
 * [virtualMachineProfile.osProfile.windowsConfiguration.timeZone] Specifies
 * the time zone of the virtual machine. e.g. "Pacific Standard Time"
 * @property {array}
 * [virtualMachineProfile.osProfile.windowsConfiguration.additionalUnattendContent]
 * Specifies additional base-64 encoded XML formatted information that can be
 * included in the Unattend.xml file, which is used by Windows Setup.
 * @property {object}
 * [virtualMachineProfile.osProfile.windowsConfiguration.winRM] Specifies the
 * Windows Remote Management listeners. This enables remote Windows PowerShell.
 * @property {array}
 * [virtualMachineProfile.osProfile.windowsConfiguration.winRM.listeners] The
 * list of Windows Remote Management listeners
 * @property {object} [virtualMachineProfile.osProfile.linuxConfiguration]
 * Specifies the Linux operating system settings on the virtual machine.
 * <br><br>For a list of supported Linux distributions, see [Linux on
 * Azure-Endorsed
 * Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-endorsed-distros?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
 * <br><br> For running non-endorsed distributions, see [Information for
 * Non-Endorsed
 * Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-create-upload-generic?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json).
 * @property {boolean}
 * [virtualMachineProfile.osProfile.linuxConfiguration.disablePasswordAuthentication]
 * Specifies whether password authentication should be disabled.
 * @property {object} [virtualMachineProfile.osProfile.linuxConfiguration.ssh]
 * Specifies the ssh key configuration for a Linux OS.
 * @property {array}
 * [virtualMachineProfile.osProfile.linuxConfiguration.ssh.publicKeys] The list
 * of SSH public keys used to authenticate with linux based VMs.
 * @property {boolean}
 * [virtualMachineProfile.osProfile.linuxConfiguration.provisionVMAgent]
 * Indicates whether virtual machine agent should be provisioned on the virtual
 * machine. <br><br> When this property is not specified in the request body,
 * default behavior is to set it to true.  This will ensure that VM Agent is
 * installed on the VM so that extensions can be added to the VM later.
 * @property {array} [virtualMachineProfile.osProfile.secrets] Specifies set of
 * certificates that should be installed onto the virtual machines in the scale
 * set.
 * @property {object} [virtualMachineProfile.storageProfile] Specifies the
 * storage settings for the virtual machine disks.
 * @property {object} [virtualMachineProfile.storageProfile.imageReference]
 * Specifies information about the image to use. You can specify information
 * about platform images, marketplace images, or virtual machine images. This
 * element is required when you want to use a platform image, marketplace
 * image, or virtual machine image, but is not used in other creation
 * operations.
 * @property {string}
 * [virtualMachineProfile.storageProfile.imageReference.publisher] The image
 * publisher.
 * @property {string}
 * [virtualMachineProfile.storageProfile.imageReference.offer] Specifies the
 * offer of the platform image or marketplace image used to create the virtual
 * machine.
 * @property {string} [virtualMachineProfile.storageProfile.imageReference.sku]
 * The image SKU.
 * @property {string}
 * [virtualMachineProfile.storageProfile.imageReference.version] Specifies the
 * version of the platform image or marketplace image used to create the
 * virtual machine. The allowed formats are Major.Minor.Build or 'latest'.
 * Major, Minor, and Build are decimal numbers. Specify 'latest' to use the
 * latest version of an image available at deploy time. Even if you use
 * 'latest', the VM image will not automatically update after deploy time even
 * if a new version becomes available.
 * @property {object} [virtualMachineProfile.storageProfile.osDisk] Specifies
 * information about the operating system disk used by the virtual machines in
 * the scale set. <br><br> For more information about disks, see [About disks
 * and VHDs for Azure virtual
 * machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
 * @property {string} [virtualMachineProfile.storageProfile.osDisk.name] The
 * disk name.
 * @property {string} [virtualMachineProfile.storageProfile.osDisk.caching]
 * Specifies the caching requirements. <br><br> Possible values are: <br><br>
 * **None** <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default:
 * **None for Standard storage. ReadOnly for Premium storage**. Possible values
 * include: 'None', 'ReadOnly', 'ReadWrite'
 * @property {boolean}
 * [virtualMachineProfile.storageProfile.osDisk.writeAcceleratorEnabled]
 * Specifies whether writeAccelerator should be enabled or disabled on the
 * disk.
 * @property {string}
 * [virtualMachineProfile.storageProfile.osDisk.createOption] Specifies how the
 * virtual machines in the scale set should be created.<br><br> The only
 * allowed value is: **FromImage** \u2013 This value is used when you are using
 * an image to create the virtual machine. If you are using a platform image,
 * you also use the imageReference element described above. If you are using a
 * marketplace image, you  also use the plan element previously described.
 * Possible values include: 'FromImage', 'Empty', 'Attach'
 * @property {object}
 * [virtualMachineProfile.storageProfile.osDisk.diffDiskSettings] Specifies the
 * differencing Disk Settings for the operating system disk used by the virtual
 * machine scale set.
 * @property {string}
 * [virtualMachineProfile.storageProfile.osDisk.diffDiskSettings.option]
 * Specifies the differencing disk settings for operating system disk. Possible
 * values include: 'Local'
 * @property {number} [virtualMachineProfile.storageProfile.osDisk.diskSizeGB]
 * Specifies the size of the operating system disk in gigabytes. This element
 * can be used to overwrite the size of the disk in a virtual machine image.
 * <br><br> This value cannot be larger than 1023 GB
 * @property {string} [virtualMachineProfile.storageProfile.osDisk.osType] This
 * property allows you to specify the type of the OS that is included in the
 * disk if creating a VM from user-image or a specialized VHD. <br><br>
 * Possible values are: <br><br> **Windows** <br><br> **Linux**. Possible
 * values include: 'Windows', 'Linux'
 * @property {object} [virtualMachineProfile.storageProfile.osDisk.image]
 * Specifies information about the unmanaged user image to base the scale set
 * on.
 * @property {string} [virtualMachineProfile.storageProfile.osDisk.image.uri]
 * Specifies the virtual hard disk's uri.
 * @property {array}
 * [virtualMachineProfile.storageProfile.osDisk.vhdContainers] Specifies the
 * container urls that are used to store operating system disks for the scale
 * set.
 * @property {object} [virtualMachineProfile.storageProfile.osDisk.managedDisk]
 * The managed disk parameters.
 * @property {string}
 * [virtualMachineProfile.storageProfile.osDisk.managedDisk.storageAccountType]
 * Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS
 * can only be used with data disks, it cannot be used with OS Disk. Possible
 * values include: 'Standard_LRS', 'Premium_LRS', 'StandardSSD_LRS',
 * 'UltraSSD_LRS'
 * @property {array} [virtualMachineProfile.storageProfile.dataDisks] Specifies
 * the parameters that are used to add data disks to the virtual machines in
 * the scale set. <br><br> For more information about disks, see [About disks
 * and VHDs for Azure virtual
 * machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
 * @property {object} [virtualMachineProfile.additionalCapabilities] Specifies
 * additional capabilities enabled or disabled on the virtual machine in the
 * scale set. For instance: whether the virtual machine has the capability to
 * support attaching managed data disks with UltraSSD_LRS storage account type.
 * @property {boolean}
 * [virtualMachineProfile.additionalCapabilities.ultraSSDEnabled] The flag that
 * enables or disables a capability to have one or more managed data disks with
 * UltraSSD_LRS storage account type on the VM or VMSS. Managed disks with
 * storage account type UltraSSD_LRS can be added to a virtual machine or
 * virtual machine scale set only if this property is enabled.
 * @property {object} [virtualMachineProfile.networkProfile] Specifies
 * properties of the network interfaces of the virtual machines in the scale
 * set.
 * @property {object} [virtualMachineProfile.networkProfile.healthProbe] A
 * reference to a load balancer probe used to determine the health of an
 * instance in the virtual machine scale set. The reference will be in the
 * form:
 * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/probes/{probeName}'.
 * @property {string} [virtualMachineProfile.networkProfile.healthProbe.id] The
 * ARM resource id in the form of
 * /subscriptions/{SubcriptionId}/resourceGroups/{ResourceGroupName}/...
 * @property {array}
 * [virtualMachineProfile.networkProfile.networkInterfaceConfigurations] The
 * list of network configurations.
 * @property {object} [virtualMachineProfile.diagnosticsProfile] Specifies the
 * boot diagnostic settings state. <br><br>Minimum api-version: 2015-06-15.
 * @property {object}
 * [virtualMachineProfile.diagnosticsProfile.bootDiagnostics] Boot Diagnostics
 * is a debugging feature which allows you to view Console Output and
 * Screenshot to diagnose VM status. <br><br> You can easily view the output of
 * your console log. <br><br> Azure also enables you to see a screenshot of the
 * VM from the hypervisor.
 * @property {boolean}
 * [virtualMachineProfile.diagnosticsProfile.bootDiagnostics.enabled] Whether
 * boot diagnostics should be enabled on the Virtual Machine.
 * @property {string}
 * [virtualMachineProfile.diagnosticsProfile.bootDiagnostics.storageUri] Uri of
 * the storage account to use for placing the console output and screenshot.
 * @property {object} [virtualMachineProfile.extensionProfile] Specifies a
 * collection of settings for extensions installed on virtual machines in the
 * scale set.
 * @property {array} [virtualMachineProfile.extensionProfile.extensions] The
 * virtual machine scale set child extension resources.
 * @property {string} [virtualMachineProfile.licenseType] Specifies that the
 * image or disk that is being used was licensed on-premises. This element is
 * only used for images that contain the Windows Server operating system.
 * <br><br> Possible values are: <br><br> Windows_Client <br><br>
 * Windows_Server <br><br> If this element is included in a request for an
 * update, the value must match the initial value. This value cannot be
 * updated. <br><br> For more information, see [Azure Hybrid Use Benefit for
 * Windows
 * Server](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-hybrid-use-benefit-licensing?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json)
 * <br><br> Minimum api-version: 2015-06-15
 * @property {string} [virtualMachineProfile.priority] Specifies the priority
 * for the virtual machines in the scale set. <br><br>Minimum api-version:
 * 2017-10-30-preview. Possible values include: 'Regular', 'Low'
 * @property {string} [virtualMachineProfile.evictionPolicy] Specifies the
 * eviction policy for virtual machines in a low priority scale set.
 * <br><br>Minimum api-version: 2017-10-30-preview. Possible values include:
 * 'Deallocate', 'Delete'
 * @property {string} [provisioningState] The provisioning state, which only
 * appears in the response.
 * @property {boolean} [overprovision] Specifies whether the Virtual Machine
 * Scale Set should be overprovisioned.
 * @property {string} [uniqueId] Specifies the ID which uniquely identifies a
 * Virtual Machine Scale Set.
 * @property {boolean} [singlePlacementGroup] When true this limits the scale
 * set to a single placement group, of max size 100 virtual machines.
 * @property {boolean} [zoneBalance] Whether to force stictly even Virtual
 * Machine distribution cross x-zones in case there is zone outage.
 * @property {number} [platformFaultDomainCount] Fault Domain count for each
 * placement group.
 * @property {object} [identity] The identity of the virtual machine scale set,
 * if configured.
 * @property {string} [identity.principalId] The principal id of virtual
 * machine scale set identity. This property will only be provided for a system
 * assigned identity.
 * @property {string} [identity.tenantId] The tenant id associated with the
 * virtual machine scale set. This property will only be provided for a system
 * assigned identity.
 * @property {string} [identity.type] The type of identity used for the virtual
 * machine scale set. The type 'SystemAssigned, UserAssigned' includes both an
 * implicitly created identity and a set of user assigned identities. The type
 * 'None' will remove any identities from the virtual machine scale set.
 * Possible values include: 'SystemAssigned', 'UserAssigned', 'SystemAssigned,
 * UserAssigned', 'None'
 * @property {object} [identity.userAssignedIdentities] The list of user
 * identities associated with the virtual machine scale set. The user identity
 * dictionary key references will be ARM resource ids in the form:
 * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
 * @property {array} [zones] The virtual machine scale set zones.
 */
export interface VirtualMachineScaleSet extends Resource {
  sku?: Sku;
  plan?: Plan;
  upgradePolicy?: UpgradePolicy;
  virtualMachineProfile?: VirtualMachineScaleSetVMProfile;
  readonly provisioningState?: string;
  overprovision?: boolean;
  readonly uniqueId?: string;
  singlePlacementGroup?: boolean;
  zoneBalance?: boolean;
  platformFaultDomainCount?: number;
  identity?: VirtualMachineScaleSetIdentity;
  zones?: string[];
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineScaleSetVMReimageParameters class.
 * @constructor
 * Describes a Virtual Machine Scale Set VM Reimage Parameters.
 *
 */
export interface VirtualMachineScaleSetVMReimageParameters extends VirtualMachineReimageParameters {
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineScaleSetReimageParameters class.
 * @constructor
 * Describes a Virtual Machine Scale Set VM Reimage Parameters.
 *
 * @property {array} [instanceIds] The virtual machine scale set instance ids.
 * Omitting the virtual machine scale set instance ids will result in the
 * operation being performed on all virtual machines in the virtual machine
 * scale set.
 */
export interface VirtualMachineScaleSetReimageParameters extends VirtualMachineScaleSetVMReimageParameters {
  instanceIds?: string[];
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineScaleSetUpdate class.
 * @constructor
 * Describes a Virtual Machine Scale Set.
 *
 * @property {object} [sku] The virtual machine scale set sku.
 * @property {string} [sku.name] The sku name.
 * @property {string} [sku.tier] Specifies the tier of virtual machines in a
 * scale set.<br /><br /> Possible Values:<br /><br /> **Standard**<br /><br />
 * **Basic**
 * @property {number} [sku.capacity] Specifies the number of virtual machines
 * in the scale set.
 * @property {object} [plan] The purchase plan when deploying a virtual machine
 * scale set from VM Marketplace images.
 * @property {string} [plan.name] The plan ID.
 * @property {string} [plan.publisher] The publisher ID.
 * @property {string} [plan.product] Specifies the product of the image from
 * the marketplace. This is the same value as Offer under the imageReference
 * element.
 * @property {string} [plan.promotionCode] The promotion code.
 * @property {object} [upgradePolicy] The upgrade policy.
 * @property {string} [upgradePolicy.mode] Specifies the mode of an upgrade to
 * virtual machines in the scale set.<br /><br /> Possible values are:<br /><br
 * /> **Manual** - You  control the application of updates to virtual machines
 * in the scale set. You do this by using the manualUpgrade action.<br /><br />
 * **Automatic** - All virtual machines in the scale set are  automatically
 * updated at the same time. Possible values include: 'Automatic', 'Manual',
 * 'Rolling'
 * @property {object} [upgradePolicy.rollingUpgradePolicy] The configuration
 * parameters used while performing a rolling upgrade.
 * @property {number}
 * [upgradePolicy.rollingUpgradePolicy.maxBatchInstancePercent] The maximum
 * percent of total virtual machine instances that will be upgraded
 * simultaneously by the rolling upgrade in one batch. As this is a maximum,
 * unhealthy instances in previous or future batches can cause the percentage
 * of instances in a batch to decrease to ensure higher reliability. The
 * default value for this parameter is 20%.
 * @property {number}
 * [upgradePolicy.rollingUpgradePolicy.maxUnhealthyInstancePercent] The maximum
 * percentage of the total virtual machine instances in the scale set that can
 * be simultaneously unhealthy, either as a result of being upgraded, or by
 * being found in an unhealthy state by the virtual machine health checks
 * before the rolling upgrade aborts. This constraint will be checked prior to
 * starting any batch. The default value for this parameter is 20%.
 * @property {number}
 * [upgradePolicy.rollingUpgradePolicy.maxUnhealthyUpgradedInstancePercent] The
 * maximum percentage of upgraded virtual machine instances that can be found
 * to be in an unhealthy state. This check will happen after each batch is
 * upgraded. If this percentage is ever exceeded, the rolling update aborts.
 * The default value for this parameter is 20%.
 * @property {string}
 * [upgradePolicy.rollingUpgradePolicy.pauseTimeBetweenBatches] The wait time
 * between completing the update for all virtual machines in one batch and
 * starting the next batch. The time duration should be specified in ISO 8601
 * format. The default value is 0 seconds (PT0S).
 * @property {object} [upgradePolicy.automaticOSUpgradePolicy] Configuration
 * parameters used for performing automatic OS Upgrade.
 * @property {boolean}
 * [upgradePolicy.automaticOSUpgradePolicy.enableAutomaticOSUpgrade] Whether OS
 * upgrades should automatically be applied to scale set instances in a rolling
 * fashion when a newer version of the image becomes available. Default value
 * is false.
 * @property {boolean}
 * [upgradePolicy.automaticOSUpgradePolicy.disableAutomaticRollback] Whether OS
 * image rollback feature should be disabled. Default value is false.
 * @property {object} [virtualMachineProfile] The virtual machine profile.
 * @property {object} [virtualMachineProfile.osProfile] The virtual machine
 * scale set OS profile.
 * @property {string} [virtualMachineProfile.osProfile.customData] A base-64
 * encoded string of custom data.
 * @property {object} [virtualMachineProfile.osProfile.windowsConfiguration]
 * The Windows Configuration of the OS profile.
 * @property {boolean}
 * [virtualMachineProfile.osProfile.windowsConfiguration.provisionVMAgent]
 * Indicates whether virtual machine agent should be provisioned on the virtual
 * machine. <br><br> When this property is not specified in the request body,
 * default behavior is to set it to true.  This will ensure that VM Agent is
 * installed on the VM so that extensions can be added to the VM later.
 * @property {boolean}
 * [virtualMachineProfile.osProfile.windowsConfiguration.enableAutomaticUpdates]
 * Indicates whether virtual machine is enabled for automatic updates.
 * @property {string}
 * [virtualMachineProfile.osProfile.windowsConfiguration.timeZone] Specifies
 * the time zone of the virtual machine. e.g. "Pacific Standard Time"
 * @property {array}
 * [virtualMachineProfile.osProfile.windowsConfiguration.additionalUnattendContent]
 * Specifies additional base-64 encoded XML formatted information that can be
 * included in the Unattend.xml file, which is used by Windows Setup.
 * @property {object}
 * [virtualMachineProfile.osProfile.windowsConfiguration.winRM] Specifies the
 * Windows Remote Management listeners. This enables remote Windows PowerShell.
 * @property {array}
 * [virtualMachineProfile.osProfile.windowsConfiguration.winRM.listeners] The
 * list of Windows Remote Management listeners
 * @property {object} [virtualMachineProfile.osProfile.linuxConfiguration] The
 * Linux Configuration of the OS profile.
 * @property {boolean}
 * [virtualMachineProfile.osProfile.linuxConfiguration.disablePasswordAuthentication]
 * Specifies whether password authentication should be disabled.
 * @property {object} [virtualMachineProfile.osProfile.linuxConfiguration.ssh]
 * Specifies the ssh key configuration for a Linux OS.
 * @property {array}
 * [virtualMachineProfile.osProfile.linuxConfiguration.ssh.publicKeys] The list
 * of SSH public keys used to authenticate with linux based VMs.
 * @property {boolean}
 * [virtualMachineProfile.osProfile.linuxConfiguration.provisionVMAgent]
 * Indicates whether virtual machine agent should be provisioned on the virtual
 * machine. <br><br> When this property is not specified in the request body,
 * default behavior is to set it to true.  This will ensure that VM Agent is
 * installed on the VM so that extensions can be added to the VM later.
 * @property {array} [virtualMachineProfile.osProfile.secrets] The List of
 * certificates for addition to the VM.
 * @property {object} [virtualMachineProfile.storageProfile] The virtual
 * machine scale set storage profile.
 * @property {object} [virtualMachineProfile.storageProfile.imageReference] The
 * image reference.
 * @property {string}
 * [virtualMachineProfile.storageProfile.imageReference.publisher] The image
 * publisher.
 * @property {string}
 * [virtualMachineProfile.storageProfile.imageReference.offer] Specifies the
 * offer of the platform image or marketplace image used to create the virtual
 * machine.
 * @property {string} [virtualMachineProfile.storageProfile.imageReference.sku]
 * The image SKU.
 * @property {string}
 * [virtualMachineProfile.storageProfile.imageReference.version] Specifies the
 * version of the platform image or marketplace image used to create the
 * virtual machine. The allowed formats are Major.Minor.Build or 'latest'.
 * Major, Minor, and Build are decimal numbers. Specify 'latest' to use the
 * latest version of an image available at deploy time. Even if you use
 * 'latest', the VM image will not automatically update after deploy time even
 * if a new version becomes available.
 * @property {object} [virtualMachineProfile.storageProfile.osDisk] The OS
 * disk.
 * @property {string} [virtualMachineProfile.storageProfile.osDisk.caching] The
 * caching type. Possible values include: 'None', 'ReadOnly', 'ReadWrite'
 * @property {boolean}
 * [virtualMachineProfile.storageProfile.osDisk.writeAcceleratorEnabled]
 * Specifies whether writeAccelerator should be enabled or disabled on the
 * disk.
 * @property {number} [virtualMachineProfile.storageProfile.osDisk.diskSizeGB]
 * Specifies the size of the operating system disk in gigabytes. This element
 * can be used to overwrite the size of the disk in a virtual machine image.
 * <br><br> This value cannot be larger than 1023 GB
 * @property {object} [virtualMachineProfile.storageProfile.osDisk.image] The
 * Source User Image VirtualHardDisk. This VirtualHardDisk will be copied
 * before using it to attach to the Virtual Machine. If SourceImage is
 * provided, the destination VirtualHardDisk should not exist.
 * @property {string} [virtualMachineProfile.storageProfile.osDisk.image.uri]
 * Specifies the virtual hard disk's uri.
 * @property {array}
 * [virtualMachineProfile.storageProfile.osDisk.vhdContainers] The list of
 * virtual hard disk container uris.
 * @property {object} [virtualMachineProfile.storageProfile.osDisk.managedDisk]
 * The managed disk parameters.
 * @property {string}
 * [virtualMachineProfile.storageProfile.osDisk.managedDisk.storageAccountType]
 * Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS
 * can only be used with data disks, it cannot be used with OS Disk. Possible
 * values include: 'Standard_LRS', 'Premium_LRS', 'StandardSSD_LRS',
 * 'UltraSSD_LRS'
 * @property {array} [virtualMachineProfile.storageProfile.dataDisks] The data
 * disks.
 * @property {object} [virtualMachineProfile.networkProfile] The virtual
 * machine scale set network profile.
 * @property {array}
 * [virtualMachineProfile.networkProfile.networkInterfaceConfigurations] The
 * list of network configurations.
 * @property {object} [virtualMachineProfile.diagnosticsProfile] The virtual
 * machine scale set diagnostics profile.
 * @property {object}
 * [virtualMachineProfile.diagnosticsProfile.bootDiagnostics] Boot Diagnostics
 * is a debugging feature which allows you to view Console Output and
 * Screenshot to diagnose VM status. <br><br> You can easily view the output of
 * your console log. <br><br> Azure also enables you to see a screenshot of the
 * VM from the hypervisor.
 * @property {boolean}
 * [virtualMachineProfile.diagnosticsProfile.bootDiagnostics.enabled] Whether
 * boot diagnostics should be enabled on the Virtual Machine.
 * @property {string}
 * [virtualMachineProfile.diagnosticsProfile.bootDiagnostics.storageUri] Uri of
 * the storage account to use for placing the console output and screenshot.
 * @property {object} [virtualMachineProfile.extensionProfile] The virtual
 * machine scale set extension profile.
 * @property {array} [virtualMachineProfile.extensionProfile.extensions] The
 * virtual machine scale set child extension resources.
 * @property {string} [virtualMachineProfile.licenseType] The license type,
 * which is for bring your own license scenario.
 * @property {boolean} [overprovision] Specifies whether the Virtual Machine
 * Scale Set should be overprovisioned.
 * @property {boolean} [singlePlacementGroup] When true this limits the scale
 * set to a single placement group, of max size 100 virtual machines.
 * @property {object} [identity] The identity of the virtual machine scale set,
 * if configured.
 * @property {string} [identity.principalId] The principal id of virtual
 * machine scale set identity. This property will only be provided for a system
 * assigned identity.
 * @property {string} [identity.tenantId] The tenant id associated with the
 * virtual machine scale set. This property will only be provided for a system
 * assigned identity.
 * @property {string} [identity.type] The type of identity used for the virtual
 * machine scale set. The type 'SystemAssigned, UserAssigned' includes both an
 * implicitly created identity and a set of user assigned identities. The type
 * 'None' will remove any identities from the virtual machine scale set.
 * Possible values include: 'SystemAssigned', 'UserAssigned', 'SystemAssigned,
 * UserAssigned', 'None'
 * @property {object} [identity.userAssignedIdentities] The list of user
 * identities associated with the virtual machine scale set. The user identity
 * dictionary key references will be ARM resource ids in the form:
 * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
 */
export interface VirtualMachineScaleSetUpdate extends UpdateResource {
  sku?: Sku;
  plan?: Plan;
  upgradePolicy?: UpgradePolicy;
  virtualMachineProfile?: VirtualMachineScaleSetUpdateVMProfile;
  overprovision?: boolean;
  singlePlacementGroup?: boolean;
  identity?: VirtualMachineScaleSetIdentity;
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineScaleSetVMInstanceIDs class.
 * @constructor
 * Specifies a list of virtual machine instance IDs from the VM scale set.
 *
 * @property {array} [instanceIds] The virtual machine scale set instance ids.
 * Omitting the virtual machine scale set instance ids will result in the
 * operation being performed on all virtual machines in the virtual machine
 * scale set.
 */
export interface VirtualMachineScaleSetVMInstanceIDs {
  instanceIds?: string[];
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineScaleSetVMInstanceRequiredIDs class.
 * @constructor
 * Specifies a list of virtual machine instance IDs from the VM scale set.
 *
 * @property {array} instanceIds The virtual machine scale set instance ids.
 */
export interface VirtualMachineScaleSetVMInstanceRequiredIDs {
  instanceIds: string[];
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineStatusCodeCount class.
 * @constructor
 * The status code and count of the virtual machine scale set instance view
 * status summary.
 *
 * @property {string} [code] The instance view status code.
 * @property {number} [count] The number of instances having a particular
 * status code.
 */
export interface VirtualMachineStatusCodeCount {
  readonly code?: string;
  readonly count?: number;
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineScaleSetInstanceViewStatusesSummary class.
 * @constructor
 * Instance view statuses summary for virtual machines of a virtual machine
 * scale set.
 *
 * @property {array} [statusesSummary] The extensions information.
 */
export interface VirtualMachineScaleSetInstanceViewStatusesSummary {
  readonly statusesSummary?: VirtualMachineStatusCodeCount[];
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineScaleSetVMExtensionsSummary class.
 * @constructor
 * Extensions summary for virtual machines of a virtual machine scale set.
 *
 * @property {string} [name] The extension name.
 * @property {array} [statusesSummary] The extensions information.
 */
export interface VirtualMachineScaleSetVMExtensionsSummary {
  readonly name?: string;
  readonly statusesSummary?: VirtualMachineStatusCodeCount[];
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineScaleSetInstanceView class.
 * @constructor
 * The instance view of a virtual machine scale set.
 *
 * @property {object} [virtualMachine] The instance view status summary for the
 * virtual machine scale set.
 * @property {array} [virtualMachine.statusesSummary] The extensions
 * information.
 * @property {array} [extensions] The extensions information.
 * @property {array} [statuses] The resource status information.
 */
export interface VirtualMachineScaleSetInstanceView {
  readonly virtualMachine?: VirtualMachineScaleSetInstanceViewStatusesSummary;
  readonly extensions?: VirtualMachineScaleSetVMExtensionsSummary[];
  statuses?: InstanceViewStatus[];
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineScaleSetSkuCapacity class.
 * @constructor
 * Describes scaling information of a sku.
 *
 * @property {number} [minimum] The minimum capacity.
 * @property {number} [maximum] The maximum capacity that can be set.
 * @property {number} [defaultCapacity] The default capacity.
 * @property {string} [scaleType] The scale type applicable to the sku.
 * Possible values include: 'Automatic', 'None'
 */
export interface VirtualMachineScaleSetSkuCapacity {
  readonly minimum?: number;
  readonly maximum?: number;
  readonly defaultCapacity?: number;
  readonly scaleType?: string;
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineScaleSetSku class.
 * @constructor
 * Describes an available virtual machine scale set sku.
 *
 * @property {string} [resourceType] The type of resource the sku applies to.
 * @property {object} [sku] The Sku.
 * @property {string} [sku.name] The sku name.
 * @property {string} [sku.tier] Specifies the tier of virtual machines in a
 * scale set.<br /><br /> Possible Values:<br /><br /> **Standard**<br /><br />
 * **Basic**
 * @property {number} [sku.capacity] Specifies the number of virtual machines
 * in the scale set.
 * @property {object} [capacity] Specifies the number of virtual machines in
 * the scale set.
 * @property {number} [capacity.minimum] The minimum capacity.
 * @property {number} [capacity.maximum] The maximum capacity that can be set.
 * @property {number} [capacity.defaultCapacity] The default capacity.
 * @property {string} [capacity.scaleType] The scale type applicable to the
 * sku. Possible values include: 'Automatic', 'None'
 */
export interface VirtualMachineScaleSetSku {
  readonly resourceType?: string;
  readonly sku?: Sku;
  readonly capacity?: VirtualMachineScaleSetSkuCapacity;
}

/**
 * @class
 * Initializes a new instance of the ApiErrorBase class.
 * @constructor
 * Api error base.
 *
 * @property {string} [code] The error code.
 * @property {string} [target] The target of the particular error.
 * @property {string} [message] The error message.
 */
export interface ApiErrorBase {
  code?: string;
  target?: string;
  message?: string;
}

/**
 * @class
 * Initializes a new instance of the InnerError class.
 * @constructor
 * Inner error details.
 *
 * @property {string} [exceptiontype] The exception type.
 * @property {string} [errordetail] The internal error message or exception
 * dump.
 */
export interface InnerError {
  exceptiontype?: string;
  errordetail?: string;
}

/**
 * @class
 * Initializes a new instance of the ApiError class.
 * @constructor
 * Api error.
 *
 * @property {array} [details] The Api error details
 * @property {object} [innererror] The Api inner error
 * @property {string} [innererror.exceptiontype] The exception type.
 * @property {string} [innererror.errordetail] The internal error message or
 * exception dump.
 * @property {string} [code] The error code.
 * @property {string} [target] The target of the particular error.
 * @property {string} [message] The error message.
 */
export interface ApiError {
  details?: ApiErrorBase[];
  innererror?: InnerError;
  code?: string;
  target?: string;
  message?: string;
}

/**
 * @class
 * Initializes a new instance of the RollbackStatusInfo class.
 * @constructor
 * Information about rollback on failed VM instances after a OS Upgrade
 * operation.
 *
 * @property {number} [successfullyRolledbackInstanceCount] The number of
 * instances which have been successfully rolled back.
 * @property {number} [failedRolledbackInstanceCount] The number of instances
 * which failed to rollback.
 * @property {object} [rollbackError] Error details if OS rollback failed.
 * @property {array} [rollbackError.details] The Api error details
 * @property {object} [rollbackError.innererror] The Api inner error
 * @property {string} [rollbackError.innererror.exceptiontype] The exception
 * type.
 * @property {string} [rollbackError.innererror.errordetail] The internal error
 * message or exception dump.
 * @property {string} [rollbackError.code] The error code.
 * @property {string} [rollbackError.target] The target of the particular
 * error.
 * @property {string} [rollbackError.message] The error message.
 */
export interface RollbackStatusInfo {
  readonly successfullyRolledbackInstanceCount?: number;
  readonly failedRolledbackInstanceCount?: number;
  readonly rollbackError?: ApiError;
}

/**
 * @class
 * Initializes a new instance of the UpgradeOperationHistoryStatus class.
 * @constructor
 * Information about the current running state of the overall upgrade.
 *
 * @property {string} [code] Code indicating the current status of the upgrade.
 * Possible values include: 'RollingForward', 'Cancelled', 'Completed',
 * 'Faulted'
 * @property {date} [startTime] Start time of the upgrade.
 * @property {date} [endTime] End time of the upgrade.
 */
export interface UpgradeOperationHistoryStatus {
  readonly code?: string;
  readonly startTime?: Date;
  readonly endTime?: Date;
}

/**
 * @class
 * Initializes a new instance of the RollingUpgradeProgressInfo class.
 * @constructor
 * Information about the number of virtual machine instances in each upgrade
 * state.
 *
 * @property {number} [successfulInstanceCount] The number of instances that
 * have been successfully upgraded.
 * @property {number} [failedInstanceCount] The number of instances that have
 * failed to be upgraded successfully.
 * @property {number} [inProgressInstanceCount] The number of instances that
 * are currently being upgraded.
 * @property {number} [pendingInstanceCount] The number of instances that have
 * not yet begun to be upgraded.
 */
export interface RollingUpgradeProgressInfo {
  readonly successfulInstanceCount?: number;
  readonly failedInstanceCount?: number;
  readonly inProgressInstanceCount?: number;
  readonly pendingInstanceCount?: number;
}

/**
 * @class
 * Initializes a new instance of the UpgradeOperationHistoricalStatusInfoProperties class.
 * @constructor
 * Describes each OS upgrade on the Virtual Machine Scale Set.
 *
 * @property {object} [runningStatus] Information about the overall status of
 * the upgrade operation.
 * @property {string} [runningStatus.code] Code indicating the current status
 * of the upgrade. Possible values include: 'RollingForward', 'Cancelled',
 * 'Completed', 'Faulted'
 * @property {date} [runningStatus.startTime] Start time of the upgrade.
 * @property {date} [runningStatus.endTime] End time of the upgrade.
 * @property {object} [progress] Counts of the VM's in each state.
 * @property {number} [progress.successfulInstanceCount] The number of
 * instances that have been successfully upgraded.
 * @property {number} [progress.failedInstanceCount] The number of instances
 * that have failed to be upgraded successfully.
 * @property {number} [progress.inProgressInstanceCount] The number of
 * instances that are currently being upgraded.
 * @property {number} [progress.pendingInstanceCount] The number of instances
 * that have not yet begun to be upgraded.
 * @property {object} [error] Error Details for this upgrade if there are any.
 * @property {array} [error.details] The Api error details
 * @property {object} [error.innererror] The Api inner error
 * @property {string} [error.innererror.exceptiontype] The exception type.
 * @property {string} [error.innererror.errordetail] The internal error message
 * or exception dump.
 * @property {string} [error.code] The error code.
 * @property {string} [error.target] The target of the particular error.
 * @property {string} [error.message] The error message.
 * @property {string} [startedBy] Invoker of the Upgrade Operation. Possible
 * values include: 'Unknown', 'User', 'Platform'
 * @property {object} [targetImageReference] Image Reference details
 * @property {string} [targetImageReference.publisher] The image publisher.
 * @property {string} [targetImageReference.offer] Specifies the offer of the
 * platform image or marketplace image used to create the virtual machine.
 * @property {string} [targetImageReference.sku] The image SKU.
 * @property {string} [targetImageReference.version] Specifies the version of
 * the platform image or marketplace image used to create the virtual machine.
 * The allowed formats are Major.Minor.Build or 'latest'. Major, Minor, and
 * Build are decimal numbers. Specify 'latest' to use the latest version of an
 * image available at deploy time. Even if you use 'latest', the VM image will
 * not automatically update after deploy time even if a new version becomes
 * available.
 * @property {object} [rollbackInfo] Information about OS rollback if performed
 * @property {number} [rollbackInfo.successfullyRolledbackInstanceCount] The
 * number of instances which have been successfully rolled back.
 * @property {number} [rollbackInfo.failedRolledbackInstanceCount] The number
 * of instances which failed to rollback.
 * @property {object} [rollbackInfo.rollbackError] Error details if OS rollback
 * failed.
 * @property {array} [rollbackInfo.rollbackError.details] The Api error details
 * @property {object} [rollbackInfo.rollbackError.innererror] The Api inner
 * error
 * @property {string} [rollbackInfo.rollbackError.innererror.exceptiontype] The
 * exception type.
 * @property {string} [rollbackInfo.rollbackError.innererror.errordetail] The
 * internal error message or exception dump.
 * @property {string} [rollbackInfo.rollbackError.code] The error code.
 * @property {string} [rollbackInfo.rollbackError.target] The target of the
 * particular error.
 * @property {string} [rollbackInfo.rollbackError.message] The error message.
 */
export interface UpgradeOperationHistoricalStatusInfoProperties {
  readonly runningStatus?: UpgradeOperationHistoryStatus;
  readonly progress?: RollingUpgradeProgressInfo;
  readonly error?: ApiError;
  readonly startedBy?: string;
  readonly targetImageReference?: ImageReference;
  readonly rollbackInfo?: RollbackStatusInfo;
}

/**
 * @class
 * Initializes a new instance of the UpgradeOperationHistoricalStatusInfo class.
 * @constructor
 * Virtual Machine Scale Set OS Upgrade History operation response.
 *
 * @property {object} [properties] Information about the properties of the
 * upgrade operation.
 * @property {object} [properties.runningStatus] Information about the overall
 * status of the upgrade operation.
 * @property {string} [properties.runningStatus.code] Code indicating the
 * current status of the upgrade. Possible values include: 'RollingForward',
 * 'Cancelled', 'Completed', 'Faulted'
 * @property {date} [properties.runningStatus.startTime] Start time of the
 * upgrade.
 * @property {date} [properties.runningStatus.endTime] End time of the upgrade.
 * @property {object} [properties.progress] Counts of the VM's in each state.
 * @property {number} [properties.progress.successfulInstanceCount] The number
 * of instances that have been successfully upgraded.
 * @property {number} [properties.progress.failedInstanceCount] The number of
 * instances that have failed to be upgraded successfully.
 * @property {number} [properties.progress.inProgressInstanceCount] The number
 * of instances that are currently being upgraded.
 * @property {number} [properties.progress.pendingInstanceCount] The number of
 * instances that have not yet begun to be upgraded.
 * @property {object} [properties.error] Error Details for this upgrade if
 * there are any.
 * @property {array} [properties.error.details] The Api error details
 * @property {object} [properties.error.innererror] The Api inner error
 * @property {string} [properties.error.innererror.exceptiontype] The exception
 * type.
 * @property {string} [properties.error.innererror.errordetail] The internal
 * error message or exception dump.
 * @property {string} [properties.error.code] The error code.
 * @property {string} [properties.error.target] The target of the particular
 * error.
 * @property {string} [properties.error.message] The error message.
 * @property {string} [properties.startedBy] Invoker of the Upgrade Operation.
 * Possible values include: 'Unknown', 'User', 'Platform'
 * @property {object} [properties.targetImageReference] Image Reference details
 * @property {string} [properties.targetImageReference.publisher] The image
 * publisher.
 * @property {string} [properties.targetImageReference.offer] Specifies the
 * offer of the platform image or marketplace image used to create the virtual
 * machine.
 * @property {string} [properties.targetImageReference.sku] The image SKU.
 * @property {string} [properties.targetImageReference.version] Specifies the
 * version of the platform image or marketplace image used to create the
 * virtual machine. The allowed formats are Major.Minor.Build or 'latest'.
 * Major, Minor, and Build are decimal numbers. Specify 'latest' to use the
 * latest version of an image available at deploy time. Even if you use
 * 'latest', the VM image will not automatically update after deploy time even
 * if a new version becomes available.
 * @property {object} [properties.rollbackInfo] Information about OS rollback
 * if performed
 * @property {number}
 * [properties.rollbackInfo.successfullyRolledbackInstanceCount] The number of
 * instances which have been successfully rolled back.
 * @property {number} [properties.rollbackInfo.failedRolledbackInstanceCount]
 * The number of instances which failed to rollback.
 * @property {object} [properties.rollbackInfo.rollbackError] Error details if
 * OS rollback failed.
 * @property {array} [properties.rollbackInfo.rollbackError.details] The Api
 * error details
 * @property {object} [properties.rollbackInfo.rollbackError.innererror] The
 * Api inner error
 * @property {string}
 * [properties.rollbackInfo.rollbackError.innererror.exceptiontype] The
 * exception type.
 * @property {string}
 * [properties.rollbackInfo.rollbackError.innererror.errordetail] The internal
 * error message or exception dump.
 * @property {string} [properties.rollbackInfo.rollbackError.code] The error
 * code.
 * @property {string} [properties.rollbackInfo.rollbackError.target] The target
 * of the particular error.
 * @property {string} [properties.rollbackInfo.rollbackError.message] The error
 * message.
 * @property {string} [type] Resource type
 * @property {string} [location] Resource location
 */
export interface UpgradeOperationHistoricalStatusInfo {
  readonly properties?: UpgradeOperationHistoricalStatusInfoProperties;
  readonly type?: string;
  readonly location?: string;
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineHealthStatus class.
 * @constructor
 * The health status of the VM.
 *
 * @property {object} [status] The health status information for the VM.
 * @property {string} [status.code] The status code.
 * @property {string} [status.level] The level code. Possible values include:
 * 'Info', 'Warning', 'Error'
 * @property {string} [status.displayStatus] The short localizable label for
 * the status.
 * @property {string} [status.message] The detailed status message, including
 * for alerts and error messages.
 * @property {date} [status.time] The time of the status.
 */
export interface VirtualMachineHealthStatus {
  readonly status?: InstanceViewStatus;
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineScaleSetVMInstanceView class.
 * @constructor
 * The instance view of a virtual machine scale set VM.
 *
 * @property {number} [platformUpdateDomain] The Update Domain count.
 * @property {number} [platformFaultDomain] The Fault Domain count.
 * @property {string} [rdpThumbPrint] The Remote desktop certificate
 * thumbprint.
 * @property {object} [vmAgent] The VM Agent running on the virtual machine.
 * @property {string} [vmAgent.vmAgentVersion] The VM Agent full version.
 * @property {array} [vmAgent.extensionHandlers] The virtual machine extension
 * handler instance view.
 * @property {array} [vmAgent.statuses] The resource status information.
 * @property {object} [maintenanceRedeployStatus] The Maintenance Operation
 * status on the virtual machine.
 * @property {boolean}
 * [maintenanceRedeployStatus.isCustomerInitiatedMaintenanceAllowed] True, if
 * customer is allowed to perform Maintenance.
 * @property {date} [maintenanceRedeployStatus.preMaintenanceWindowStartTime]
 * Start Time for the Pre Maintenance Window.
 * @property {date} [maintenanceRedeployStatus.preMaintenanceWindowEndTime] End
 * Time for the Pre Maintenance Window.
 * @property {date} [maintenanceRedeployStatus.maintenanceWindowStartTime]
 * Start Time for the Maintenance Window.
 * @property {date} [maintenanceRedeployStatus.maintenanceWindowEndTime] End
 * Time for the Maintenance Window.
 * @property {string} [maintenanceRedeployStatus.lastOperationResultCode] The
 * Last Maintenance Operation Result Code. Possible values include: 'None',
 * 'RetryLater', 'MaintenanceAborted', 'MaintenanceCompleted'
 * @property {string} [maintenanceRedeployStatus.lastOperationMessage] Message
 * returned for the last Maintenance Operation.
 * @property {array} [disks] The disks information.
 * @property {array} [extensions] The extensions information.
 * @property {object} [vmHealth] The health status for the VM.
 * @property {object} [vmHealth.status] The health status information for the
 * VM.
 * @property {string} [vmHealth.status.code] The status code.
 * @property {string} [vmHealth.status.level] The level code. Possible values
 * include: 'Info', 'Warning', 'Error'
 * @property {string} [vmHealth.status.displayStatus] The short localizable
 * label for the status.
 * @property {string} [vmHealth.status.message] The detailed status message,
 * including for alerts and error messages.
 * @property {date} [vmHealth.status.time] The time of the status.
 * @property {object} [bootDiagnostics] Boot Diagnostics is a debugging feature
 * which allows you to view Console Output and Screenshot to diagnose VM
 * status. <br><br> You can easily view the output of your console log.
 * <br><br> Azure also enables you to see a screenshot of the VM from the
 * hypervisor.
 * @property {string} [bootDiagnostics.consoleScreenshotBlobUri] The console
 * screenshot blob URI.
 * @property {string} [bootDiagnostics.serialConsoleLogBlobUri] The Linux
 * serial console log blob Uri.
 * @property {object} [bootDiagnostics.status] The boot diagnostics status
 * information for the VM. <br><br> NOTE: It will be set only if there are
 * errors encountered in enabling boot diagnostics.
 * @property {string} [bootDiagnostics.status.code] The status code.
 * @property {string} [bootDiagnostics.status.level] The level code. Possible
 * values include: 'Info', 'Warning', 'Error'
 * @property {string} [bootDiagnostics.status.displayStatus] The short
 * localizable label for the status.
 * @property {string} [bootDiagnostics.status.message] The detailed status
 * message, including for alerts and error messages.
 * @property {date} [bootDiagnostics.status.time] The time of the status.
 * @property {array} [statuses] The resource status information.
 * @property {string} [placementGroupId] The placement group in which the VM is
 * running. If the VM is deallocated it will not have a placementGroupId.
 */
export interface VirtualMachineScaleSetVMInstanceView {
  platformUpdateDomain?: number;
  platformFaultDomain?: number;
  rdpThumbPrint?: string;
  vmAgent?: VirtualMachineAgentInstanceView;
  maintenanceRedeployStatus?: MaintenanceRedeployStatus;
  disks?: DiskInstanceView[];
  extensions?: VirtualMachineExtensionInstanceView[];
  readonly vmHealth?: VirtualMachineHealthStatus;
  bootDiagnostics?: BootDiagnosticsInstanceView;
  statuses?: InstanceViewStatus[];
  placementGroupId?: string;
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineScaleSetVM class.
 * @constructor
 * Describes a virtual machine scale set virtual machine.
 *
 * @property {string} [instanceId] The virtual machine instance ID.
 * @property {object} [sku] The virtual machine SKU.
 * @property {string} [sku.name] The sku name.
 * @property {string} [sku.tier] Specifies the tier of virtual machines in a
 * scale set.<br /><br /> Possible Values:<br /><br /> **Standard**<br /><br />
 * **Basic**
 * @property {number} [sku.capacity] Specifies the number of virtual machines
 * in the scale set.
 * @property {boolean} [latestModelApplied] Specifies whether the latest model
 * has been applied to the virtual machine.
 * @property {string} [vmId] Azure VM unique ID.
 * @property {object} [instanceView] The virtual machine instance view.
 * @property {number} [instanceView.platformUpdateDomain] The Update Domain
 * count.
 * @property {number} [instanceView.platformFaultDomain] The Fault Domain
 * count.
 * @property {string} [instanceView.rdpThumbPrint] The Remote desktop
 * certificate thumbprint.
 * @property {object} [instanceView.vmAgent] The VM Agent running on the
 * virtual machine.
 * @property {string} [instanceView.vmAgent.vmAgentVersion] The VM Agent full
 * version.
 * @property {array} [instanceView.vmAgent.extensionHandlers] The virtual
 * machine extension handler instance view.
 * @property {array} [instanceView.vmAgent.statuses] The resource status
 * information.
 * @property {object} [instanceView.maintenanceRedeployStatus] The Maintenance
 * Operation status on the virtual machine.
 * @property {boolean}
 * [instanceView.maintenanceRedeployStatus.isCustomerInitiatedMaintenanceAllowed]
 * True, if customer is allowed to perform Maintenance.
 * @property {date}
 * [instanceView.maintenanceRedeployStatus.preMaintenanceWindowStartTime] Start
 * Time for the Pre Maintenance Window.
 * @property {date}
 * [instanceView.maintenanceRedeployStatus.preMaintenanceWindowEndTime] End
 * Time for the Pre Maintenance Window.
 * @property {date}
 * [instanceView.maintenanceRedeployStatus.maintenanceWindowStartTime] Start
 * Time for the Maintenance Window.
 * @property {date}
 * [instanceView.maintenanceRedeployStatus.maintenanceWindowEndTime] End Time
 * for the Maintenance Window.
 * @property {string}
 * [instanceView.maintenanceRedeployStatus.lastOperationResultCode] The Last
 * Maintenance Operation Result Code. Possible values include: 'None',
 * 'RetryLater', 'MaintenanceAborted', 'MaintenanceCompleted'
 * @property {string}
 * [instanceView.maintenanceRedeployStatus.lastOperationMessage] Message
 * returned for the last Maintenance Operation.
 * @property {array} [instanceView.disks] The disks information.
 * @property {array} [instanceView.extensions] The extensions information.
 * @property {object} [instanceView.vmHealth] The health status for the VM.
 * @property {object} [instanceView.vmHealth.status] The health status
 * information for the VM.
 * @property {string} [instanceView.vmHealth.status.code] The status code.
 * @property {string} [instanceView.vmHealth.status.level] The level code.
 * Possible values include: 'Info', 'Warning', 'Error'
 * @property {string} [instanceView.vmHealth.status.displayStatus] The short
 * localizable label for the status.
 * @property {string} [instanceView.vmHealth.status.message] The detailed
 * status message, including for alerts and error messages.
 * @property {date} [instanceView.vmHealth.status.time] The time of the status.
 * @property {object} [instanceView.bootDiagnostics] Boot Diagnostics is a
 * debugging feature which allows you to view Console Output and Screenshot to
 * diagnose VM status. <br><br> You can easily view the output of your console
 * log. <br><br> Azure also enables you to see a screenshot of the VM from the
 * hypervisor.
 * @property {string} [instanceView.bootDiagnostics.consoleScreenshotBlobUri]
 * The console screenshot blob URI.
 * @property {string} [instanceView.bootDiagnostics.serialConsoleLogBlobUri]
 * The Linux serial console log blob Uri.
 * @property {object} [instanceView.bootDiagnostics.status] The boot
 * diagnostics status information for the VM. <br><br> NOTE: It will be set
 * only if there are errors encountered in enabling boot diagnostics.
 * @property {string} [instanceView.bootDiagnostics.status.code] The status
 * code.
 * @property {string} [instanceView.bootDiagnostics.status.level] The level
 * code. Possible values include: 'Info', 'Warning', 'Error'
 * @property {string} [instanceView.bootDiagnostics.status.displayStatus] The
 * short localizable label for the status.
 * @property {string} [instanceView.bootDiagnostics.status.message] The
 * detailed status message, including for alerts and error messages.
 * @property {date} [instanceView.bootDiagnostics.status.time] The time of the
 * status.
 * @property {array} [instanceView.statuses] The resource status information.
 * @property {string} [instanceView.placementGroupId] The placement group in
 * which the VM is running. If the VM is deallocated it will not have a
 * placementGroupId.
 * @property {object} [hardwareProfile] Specifies the hardware settings for the
 * virtual machine.
 * @property {string} [hardwareProfile.vmSize] Specifies the size of the
 * virtual machine. For more information about virtual machine sizes, see
 * [Sizes for virtual
 * machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-sizes?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
 * <br><br> The available VM sizes depend on region and availability set. For a
 * list of available sizes use these APIs:  <br><br> [List all available
 * virtual machine sizes in an availability
 * set](https://docs.microsoft.com/rest/api/compute/availabilitysets/listavailablesizes)
 * <br><br> [List all available virtual machine sizes in a
 * region](https://docs.microsoft.com/rest/api/compute/virtualmachinesizes/list)
 * <br><br> [List all available virtual machine sizes for
 * resizing](https://docs.microsoft.com/rest/api/compute/virtualmachines/listavailablesizes).
 * Possible values include: 'Basic_A0', 'Basic_A1', 'Basic_A2', 'Basic_A3',
 * 'Basic_A4', 'Standard_A0', 'Standard_A1', 'Standard_A2', 'Standard_A3',
 * 'Standard_A4', 'Standard_A5', 'Standard_A6', 'Standard_A7', 'Standard_A8',
 * 'Standard_A9', 'Standard_A10', 'Standard_A11', 'Standard_A1_v2',
 * 'Standard_A2_v2', 'Standard_A4_v2', 'Standard_A8_v2', 'Standard_A2m_v2',
 * 'Standard_A4m_v2', 'Standard_A8m_v2', 'Standard_B1s', 'Standard_B1ms',
 * 'Standard_B2s', 'Standard_B2ms', 'Standard_B4ms', 'Standard_B8ms',
 * 'Standard_D1', 'Standard_D2', 'Standard_D3', 'Standard_D4', 'Standard_D11',
 * 'Standard_D12', 'Standard_D13', 'Standard_D14', 'Standard_D1_v2',
 * 'Standard_D2_v2', 'Standard_D3_v2', 'Standard_D4_v2', 'Standard_D5_v2',
 * 'Standard_D2_v3', 'Standard_D4_v3', 'Standard_D8_v3', 'Standard_D16_v3',
 * 'Standard_D32_v3', 'Standard_D64_v3', 'Standard_D2s_v3', 'Standard_D4s_v3',
 * 'Standard_D8s_v3', 'Standard_D16s_v3', 'Standard_D32s_v3',
 * 'Standard_D64s_v3', 'Standard_D11_v2', 'Standard_D12_v2', 'Standard_D13_v2',
 * 'Standard_D14_v2', 'Standard_D15_v2', 'Standard_DS1', 'Standard_DS2',
 * 'Standard_DS3', 'Standard_DS4', 'Standard_DS11', 'Standard_DS12',
 * 'Standard_DS13', 'Standard_DS14', 'Standard_DS1_v2', 'Standard_DS2_v2',
 * 'Standard_DS3_v2', 'Standard_DS4_v2', 'Standard_DS5_v2', 'Standard_DS11_v2',
 * 'Standard_DS12_v2', 'Standard_DS13_v2', 'Standard_DS14_v2',
 * 'Standard_DS15_v2', 'Standard_DS13-4_v2', 'Standard_DS13-2_v2',
 * 'Standard_DS14-8_v2', 'Standard_DS14-4_v2', 'Standard_E2_v3',
 * 'Standard_E4_v3', 'Standard_E8_v3', 'Standard_E16_v3', 'Standard_E32_v3',
 * 'Standard_E64_v3', 'Standard_E2s_v3', 'Standard_E4s_v3', 'Standard_E8s_v3',
 * 'Standard_E16s_v3', 'Standard_E32s_v3', 'Standard_E64s_v3',
 * 'Standard_E32-16_v3', 'Standard_E32-8s_v3', 'Standard_E64-32s_v3',
 * 'Standard_E64-16s_v3', 'Standard_F1', 'Standard_F2', 'Standard_F4',
 * 'Standard_F8', 'Standard_F16', 'Standard_F1s', 'Standard_F2s',
 * 'Standard_F4s', 'Standard_F8s', 'Standard_F16s', 'Standard_F2s_v2',
 * 'Standard_F4s_v2', 'Standard_F8s_v2', 'Standard_F16s_v2',
 * 'Standard_F32s_v2', 'Standard_F64s_v2', 'Standard_F72s_v2', 'Standard_G1',
 * 'Standard_G2', 'Standard_G3', 'Standard_G4', 'Standard_G5', 'Standard_GS1',
 * 'Standard_GS2', 'Standard_GS3', 'Standard_GS4', 'Standard_GS5',
 * 'Standard_GS4-8', 'Standard_GS4-4', 'Standard_GS5-16', 'Standard_GS5-8',
 * 'Standard_H8', 'Standard_H16', 'Standard_H8m', 'Standard_H16m',
 * 'Standard_H16r', 'Standard_H16mr', 'Standard_L4s', 'Standard_L8s',
 * 'Standard_L16s', 'Standard_L32s', 'Standard_M64s', 'Standard_M64ms',
 * 'Standard_M128s', 'Standard_M128ms', 'Standard_M64-32ms',
 * 'Standard_M64-16ms', 'Standard_M128-64ms', 'Standard_M128-32ms',
 * 'Standard_NC6', 'Standard_NC12', 'Standard_NC24', 'Standard_NC24r',
 * 'Standard_NC6s_v2', 'Standard_NC12s_v2', 'Standard_NC24s_v2',
 * 'Standard_NC24rs_v2', 'Standard_NC6s_v3', 'Standard_NC12s_v3',
 * 'Standard_NC24s_v3', 'Standard_NC24rs_v3', 'Standard_ND6s',
 * 'Standard_ND12s', 'Standard_ND24s', 'Standard_ND24rs', 'Standard_NV6',
 * 'Standard_NV12', 'Standard_NV24'
 * @property {object} [storageProfile] Specifies the storage settings for the
 * virtual machine disks.
 * @property {object} [storageProfile.imageReference] Specifies information
 * about the image to use. You can specify information about platform images,
 * marketplace images, or virtual machine images. This element is required when
 * you want to use a platform image, marketplace image, or virtual machine
 * image, but is not used in other creation operations.
 * @property {string} [storageProfile.imageReference.publisher] The image
 * publisher.
 * @property {string} [storageProfile.imageReference.offer] Specifies the offer
 * of the platform image or marketplace image used to create the virtual
 * machine.
 * @property {string} [storageProfile.imageReference.sku] The image SKU.
 * @property {string} [storageProfile.imageReference.version] Specifies the
 * version of the platform image or marketplace image used to create the
 * virtual machine. The allowed formats are Major.Minor.Build or 'latest'.
 * Major, Minor, and Build are decimal numbers. Specify 'latest' to use the
 * latest version of an image available at deploy time. Even if you use
 * 'latest', the VM image will not automatically update after deploy time even
 * if a new version becomes available.
 * @property {object} [storageProfile.osDisk] Specifies information about the
 * operating system disk used by the virtual machine. <br><br> For more
 * information about disks, see [About disks and VHDs for Azure virtual
 * machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
 * @property {string} [storageProfile.osDisk.osType] This property allows you
 * to specify the type of the OS that is included in the disk if creating a VM
 * from user-image or a specialized VHD. <br><br> Possible values are: <br><br>
 * **Windows** <br><br> **Linux**. Possible values include: 'Windows', 'Linux'
 * @property {object} [storageProfile.osDisk.encryptionSettings] Specifies the
 * encryption settings for the OS Disk. <br><br> Minimum api-version:
 * 2015-06-15
 * @property {object}
 * [storageProfile.osDisk.encryptionSettings.diskEncryptionKey] Specifies the
 * location of the disk encryption key, which is a Key Vault Secret.
 * @property {string}
 * [storageProfile.osDisk.encryptionSettings.diskEncryptionKey.secretUrl] The
 * URL referencing a secret in a Key Vault.
 * @property {object}
 * [storageProfile.osDisk.encryptionSettings.diskEncryptionKey.sourceVault] The
 * relative URL of the Key Vault containing the secret.
 * @property {string}
 * [storageProfile.osDisk.encryptionSettings.diskEncryptionKey.sourceVault.id]
 * Resource Id
 * @property {object}
 * [storageProfile.osDisk.encryptionSettings.keyEncryptionKey] Specifies the
 * location of the key encryption key in Key Vault.
 * @property {string}
 * [storageProfile.osDisk.encryptionSettings.keyEncryptionKey.keyUrl] The URL
 * referencing a key encryption key in Key Vault.
 * @property {object}
 * [storageProfile.osDisk.encryptionSettings.keyEncryptionKey.sourceVault] The
 * relative URL of the Key Vault containing the key.
 * @property {string}
 * [storageProfile.osDisk.encryptionSettings.keyEncryptionKey.sourceVault.id]
 * Resource Id
 * @property {boolean} [storageProfile.osDisk.encryptionSettings.enabled]
 * Specifies whether disk encryption should be enabled on the virtual machine.
 * @property {string} [storageProfile.osDisk.name] The disk name.
 * @property {object} [storageProfile.osDisk.vhd] The virtual hard disk.
 * @property {string} [storageProfile.osDisk.vhd.uri] Specifies the virtual
 * hard disk's uri.
 * @property {object} [storageProfile.osDisk.image] The source user image
 * virtual hard disk. The virtual hard disk will be copied before being
 * attached to the virtual machine. If SourceImage is provided, the destination
 * virtual hard drive must not exist.
 * @property {string} [storageProfile.osDisk.image.uri] Specifies the virtual
 * hard disk's uri.
 * @property {string} [storageProfile.osDisk.caching] Specifies the caching
 * requirements. <br><br> Possible values are: <br><br> **None** <br><br>
 * **ReadOnly** <br><br> **ReadWrite** <br><br> Default: **None for Standard
 * storage. ReadOnly for Premium storage**. Possible values include: 'None',
 * 'ReadOnly', 'ReadWrite'
 * @property {boolean} [storageProfile.osDisk.writeAcceleratorEnabled]
 * Specifies whether writeAccelerator should be enabled or disabled on the
 * disk.
 * @property {object} [storageProfile.osDisk.diffDiskSettings] Specifies the
 * differencing Disk Settings for the operating system disk used by the virtual
 * machine.
 * @property {string} [storageProfile.osDisk.diffDiskSettings.option] Specifies
 * the differencing disk settings for operating system disk. Possible values
 * include: 'Local'
 * @property {string} [storageProfile.osDisk.createOption] Specifies how the
 * virtual machine should be created.<br><br> Possible values are:<br><br>
 * **Attach** \u2013 This value is used when you are using a specialized disk
 * to create the virtual machine.<br><br> **FromImage** \u2013 This value is
 * used when you are using an image to create the virtual machine. If you are
 * using a platform image, you also use the imageReference element described
 * above. If you are using a marketplace image, you  also use the plan element
 * previously described. Possible values include: 'FromImage', 'Empty',
 * 'Attach'
 * @property {number} [storageProfile.osDisk.diskSizeGB] Specifies the size of
 * an empty data disk in gigabytes. This element can be used to overwrite the
 * size of the disk in a virtual machine image. <br><br> This value cannot be
 * larger than 1023 GB
 * @property {object} [storageProfile.osDisk.managedDisk] The managed disk
 * parameters.
 * @property {string} [storageProfile.osDisk.managedDisk.storageAccountType]
 * Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS
 * can only be used with data disks, it cannot be used with OS Disk. Possible
 * values include: 'Standard_LRS', 'Premium_LRS', 'StandardSSD_LRS',
 * 'UltraSSD_LRS'
 * @property {array} [storageProfile.dataDisks] Specifies the parameters that
 * are used to add a data disk to a virtual machine. <br><br> For more
 * information about disks, see [About disks and VHDs for Azure virtual
 * machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
 * @property {object} [additionalCapabilities] Specifies additional
 * capabilities enabled or disabled on the virtual machine in the scale set.
 * For instance: whether the virtual machine has the capability to support
 * attaching managed data disks with UltraSSD_LRS storage account type.
 * @property {boolean} [additionalCapabilities.ultraSSDEnabled] The flag that
 * enables or disables a capability to have one or more managed data disks with
 * UltraSSD_LRS storage account type on the VM or VMSS. Managed disks with
 * storage account type UltraSSD_LRS can be added to a virtual machine or
 * virtual machine scale set only if this property is enabled.
 * @property {object} [osProfile] Specifies the operating system settings for
 * the virtual machine.
 * @property {string} [osProfile.computerName] Specifies the host OS name of
 * the virtual machine. <br><br> **Max-length (Windows):** 15 characters
 * <br><br> **Max-length (Linux):** 64 characters. <br><br> For naming
 * conventions and restrictions see [Azure infrastructure services
 * implementation
 * guidelines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-infrastructure-subscription-accounts-guidelines?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json#1-naming-conventions).
 * @property {string} [osProfile.adminUsername] Specifies the name of the
 * administrator account. <br><br> **Windows-only restriction:** Cannot end in
 * "." <br><br> **Disallowed values:** "administrator", "admin", "user",
 * "user1", "test", "user2", "test1", "user3", "admin1", "1", "123", "a",
 * "actuser", "adm", "admin2", "aspnet", "backup", "console", "david", "guest",
 * "john", "owner", "root", "server", "sql", "support", "support_388945a0",
 * "sys", "test2", "test3", "user4", "user5". <br><br> **Minimum-length
 * (Linux):** 1  character <br><br> **Max-length (Linux):** 64 characters
 * <br><br> **Max-length (Windows):** 20 characters  <br><br><li> For root
 * access to the Linux VM, see [Using root privileges on Linux virtual machines
 * in
 * Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-use-root-privileges?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)<br><li>
 * For a list of built-in system users on Linux that should not be used in this
 * field, see [Selecting User Names for Linux on
 * Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-usernames?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
 * @property {string} [osProfile.adminPassword] Specifies the password of the
 * administrator account. <br><br> **Minimum-length (Windows):** 8 characters
 * <br><br> **Minimum-length (Linux):** 6 characters <br><br> **Max-length
 * (Windows):** 123 characters <br><br> **Max-length (Linux):** 72 characters
 * <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be
 * fulfilled <br> Has lower characters <br>Has upper characters <br> Has a
 * digit <br> Has a special character (Regex match [\W_]) <br><br> **Disallowed
 * values:** "abc@123", "P@$$w0rd", "P@ssw0rd", "P@ssword123", "Pa$$word",
 * "pass@word1", "Password!", "Password1", "Password22", "iloveyou!" <br><br>
 * For resetting the password, see [How to reset the Remote Desktop service or
 * its login password in a Windows
 * VM](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-reset-rdp?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json)
 * <br><br> For resetting root password, see [Manage users, SSH, and check or
 * repair disks on Azure Linux VMs using the VMAccess
 * Extension](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-vmaccess-extension?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json#reset-root-password)
 * @property {string} [osProfile.customData] Specifies a base-64 encoded string
 * of custom data. The base-64 encoded string is decoded to a binary array that
 * is saved as a file on the Virtual Machine. The maximum length of the binary
 * array is 65535 bytes. <br><br> For using cloud-init for your VM, see [Using
 * cloud-init to customize a Linux VM during
 * creation](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-cloud-init?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
 * @property {object} [osProfile.windowsConfiguration] Specifies Windows
 * operating system settings on the virtual machine.
 * @property {boolean} [osProfile.windowsConfiguration.provisionVMAgent]
 * Indicates whether virtual machine agent should be provisioned on the virtual
 * machine. <br><br> When this property is not specified in the request body,
 * default behavior is to set it to true.  This will ensure that VM Agent is
 * installed on the VM so that extensions can be added to the VM later.
 * @property {boolean} [osProfile.windowsConfiguration.enableAutomaticUpdates]
 * Indicates whether virtual machine is enabled for automatic updates.
 * @property {string} [osProfile.windowsConfiguration.timeZone] Specifies the
 * time zone of the virtual machine. e.g. "Pacific Standard Time"
 * @property {array} [osProfile.windowsConfiguration.additionalUnattendContent]
 * Specifies additional base-64 encoded XML formatted information that can be
 * included in the Unattend.xml file, which is used by Windows Setup.
 * @property {object} [osProfile.windowsConfiguration.winRM] Specifies the
 * Windows Remote Management listeners. This enables remote Windows PowerShell.
 * @property {array} [osProfile.windowsConfiguration.winRM.listeners] The list
 * of Windows Remote Management listeners
 * @property {object} [osProfile.linuxConfiguration] Specifies the Linux
 * operating system settings on the virtual machine. <br><br>For a list of
 * supported Linux distributions, see [Linux on Azure-Endorsed
 * Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-endorsed-distros?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
 * <br><br> For running non-endorsed distributions, see [Information for
 * Non-Endorsed
 * Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-create-upload-generic?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json).
 * @property {boolean}
 * [osProfile.linuxConfiguration.disablePasswordAuthentication] Specifies
 * whether password authentication should be disabled.
 * @property {object} [osProfile.linuxConfiguration.ssh] Specifies the ssh key
 * configuration for a Linux OS.
 * @property {array} [osProfile.linuxConfiguration.ssh.publicKeys] The list of
 * SSH public keys used to authenticate with linux based VMs.
 * @property {boolean} [osProfile.linuxConfiguration.provisionVMAgent]
 * Indicates whether virtual machine agent should be provisioned on the virtual
 * machine. <br><br> When this property is not specified in the request body,
 * default behavior is to set it to true.  This will ensure that VM Agent is
 * installed on the VM so that extensions can be added to the VM later.
 * @property {array} [osProfile.secrets] Specifies set of certificates that
 * should be installed onto the virtual machine.
 * @property {boolean} [osProfile.allowExtensionOperations] Specifies whether
 * extension operations should be allowed on the virtual machine. <br><br>This
 * may only be set to False when no extensions are present on the virtual
 * machine.
 * @property {object} [networkProfile] Specifies the network interfaces of the
 * virtual machine.
 * @property {array} [networkProfile.networkInterfaces] Specifies the list of
 * resource Ids for the network interfaces associated with the virtual machine.
 * @property {object} [diagnosticsProfile] Specifies the boot diagnostic
 * settings state. <br><br>Minimum api-version: 2015-06-15.
 * @property {object} [diagnosticsProfile.bootDiagnostics] Boot Diagnostics is
 * a debugging feature which allows you to view Console Output and Screenshot
 * to diagnose VM status. <br><br> You can easily view the output of your
 * console log. <br><br> Azure also enables you to see a screenshot of the VM
 * from the hypervisor.
 * @property {boolean} [diagnosticsProfile.bootDiagnostics.enabled] Whether
 * boot diagnostics should be enabled on the Virtual Machine.
 * @property {string} [diagnosticsProfile.bootDiagnostics.storageUri] Uri of
 * the storage account to use for placing the console output and screenshot.
 * @property {object} [availabilitySet] Specifies information about the
 * availability set that the virtual machine should be assigned to. Virtual
 * machines specified in the same availability set are allocated to different
 * nodes to maximize availability. For more information about availability
 * sets, see [Manage the availability of virtual
 * machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-manage-availability?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
 * <br><br> For more information on Azure planned maintainance, see [Planned
 * maintenance for virtual machines in
 * Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-planned-maintenance?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json)
 * <br><br> Currently, a VM can only be added to availability set at creation
 * time. An existing VM cannot be added to an availability set.
 * @property {string} [availabilitySet.id] Resource Id
 * @property {string} [provisioningState] The provisioning state, which only
 * appears in the response.
 * @property {string} [licenseType] Specifies that the image or disk that is
 * being used was licensed on-premises. This element is only used for images
 * that contain the Windows Server operating system. <br><br> Possible values
 * are: <br><br> Windows_Client <br><br> Windows_Server <br><br> If this
 * element is included in a request for an update, the value must match the
 * initial value. This value cannot be updated. <br><br> For more information,
 * see [Azure Hybrid Use Benefit for Windows
 * Server](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-hybrid-use-benefit-licensing?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json)
 * <br><br> Minimum api-version: 2015-06-15
 * @property {object} [plan] Specifies information about the marketplace image
 * used to create the virtual machine. This element is only used for
 * marketplace images. Before you can use a marketplace image from an API, you
 * must enable the image for programmatic use.  In the Azure portal, find the
 * marketplace image that you want to use and then click **Want to deploy
 * programmatically, Get Started ->**. Enter any required information and then
 * click **Save**.
 * @property {string} [plan.name] The plan ID.
 * @property {string} [plan.publisher] The publisher ID.
 * @property {string} [plan.product] Specifies the product of the image from
 * the marketplace. This is the same value as Offer under the imageReference
 * element.
 * @property {string} [plan.promotionCode] The promotion code.
 * @property {array} [resources] The virtual machine child extension resources.
 * @property {array} [zones] The virtual machine zones.
 */
export interface VirtualMachineScaleSetVM extends Resource {
  readonly instanceId?: string;
  readonly sku?: Sku;
  readonly latestModelApplied?: boolean;
  readonly vmId?: string;
  readonly instanceView?: VirtualMachineScaleSetVMInstanceView;
  hardwareProfile?: HardwareProfile;
  storageProfile?: StorageProfile;
  additionalCapabilities?: AdditionalCapabilities;
  osProfile?: OSProfile;
  networkProfile?: NetworkProfile;
  diagnosticsProfile?: DiagnosticsProfile;
  availabilitySet?: SubResource;
  readonly provisioningState?: string;
  licenseType?: string;
  plan?: Plan;
  readonly resources?: VirtualMachineExtension[];
  readonly zones?: string[];
}

/**
 * @class
 * Initializes a new instance of the RollingUpgradeRunningStatus class.
 * @constructor
 * Information about the current running state of the overall upgrade.
 *
 * @property {string} [code] Code indicating the current status of the upgrade.
 * Possible values include: 'RollingForward', 'Cancelled', 'Completed',
 * 'Faulted'
 * @property {date} [startTime] Start time of the upgrade.
 * @property {string} [lastAction] The last action performed on the rolling
 * upgrade. Possible values include: 'Start', 'Cancel'
 * @property {date} [lastActionTime] Last action time of the upgrade.
 */
export interface RollingUpgradeRunningStatus {
  readonly code?: string;
  readonly startTime?: Date;
  readonly lastAction?: string;
  readonly lastActionTime?: Date;
}

/**
 * @class
 * Initializes a new instance of the RollingUpgradeStatusInfo class.
 * @constructor
 * The status of the latest virtual machine scale set rolling upgrade.
 *
 * @property {object} [policy] The rolling upgrade policies applied for this
 * upgrade.
 * @property {number} [policy.maxBatchInstancePercent] The maximum percent of
 * total virtual machine instances that will be upgraded simultaneously by the
 * rolling upgrade in one batch. As this is a maximum, unhealthy instances in
 * previous or future batches can cause the percentage of instances in a batch
 * to decrease to ensure higher reliability. The default value for this
 * parameter is 20%.
 * @property {number} [policy.maxUnhealthyInstancePercent] The maximum
 * percentage of the total virtual machine instances in the scale set that can
 * be simultaneously unhealthy, either as a result of being upgraded, or by
 * being found in an unhealthy state by the virtual machine health checks
 * before the rolling upgrade aborts. This constraint will be checked prior to
 * starting any batch. The default value for this parameter is 20%.
 * @property {number} [policy.maxUnhealthyUpgradedInstancePercent] The maximum
 * percentage of upgraded virtual machine instances that can be found to be in
 * an unhealthy state. This check will happen after each batch is upgraded. If
 * this percentage is ever exceeded, the rolling update aborts. The default
 * value for this parameter is 20%.
 * @property {string} [policy.pauseTimeBetweenBatches] The wait time between
 * completing the update for all virtual machines in one batch and starting the
 * next batch. The time duration should be specified in ISO 8601 format. The
 * default value is 0 seconds (PT0S).
 * @property {object} [runningStatus] Information about the current running
 * state of the overall upgrade.
 * @property {string} [runningStatus.code] Code indicating the current status
 * of the upgrade. Possible values include: 'RollingForward', 'Cancelled',
 * 'Completed', 'Faulted'
 * @property {date} [runningStatus.startTime] Start time of the upgrade.
 * @property {string} [runningStatus.lastAction] The last action performed on
 * the rolling upgrade. Possible values include: 'Start', 'Cancel'
 * @property {date} [runningStatus.lastActionTime] Last action time of the
 * upgrade.
 * @property {object} [progress] Information about the number of virtual
 * machine instances in each upgrade state.
 * @property {number} [progress.successfulInstanceCount] The number of
 * instances that have been successfully upgraded.
 * @property {number} [progress.failedInstanceCount] The number of instances
 * that have failed to be upgraded successfully.
 * @property {number} [progress.inProgressInstanceCount] The number of
 * instances that are currently being upgraded.
 * @property {number} [progress.pendingInstanceCount] The number of instances
 * that have not yet begun to be upgraded.
 * @property {object} [error] Error details for this upgrade, if there are any.
 * @property {array} [error.details] The Api error details
 * @property {object} [error.innererror] The Api inner error
 * @property {string} [error.innererror.exceptiontype] The exception type.
 * @property {string} [error.innererror.errordetail] The internal error message
 * or exception dump.
 * @property {string} [error.code] The error code.
 * @property {string} [error.target] The target of the particular error.
 * @property {string} [error.message] The error message.
 */
export interface RollingUpgradeStatusInfo extends Resource {
  readonly policy?: RollingUpgradePolicy;
  readonly runningStatus?: RollingUpgradeRunningStatus;
  readonly progress?: RollingUpgradeProgressInfo;
  readonly error?: ApiError;
}

/**
 * @class
 * Initializes a new instance of the RecoveryWalkResponse class.
 * @constructor
 * Response after calling a manual recovery walk
 *
 * @property {boolean} [walkPerformed] Whether the recovery walk was performed
 * @property {number} [nextPlatformUpdateDomain] The next update domain that
 * needs to be walked. Null means walk spanning all update domains has been
 * completed
 */
export interface RecoveryWalkResponse {
  readonly walkPerformed?: boolean;
  readonly nextPlatformUpdateDomain?: number;
}

/**
 * @class
 * Initializes a new instance of the LogAnalyticsInputBase class.
 * @constructor
 * Api input base class for LogAnalytics Api.
 *
 * @property {string} blobContainerSasUri SAS Uri of the logging blob container
 * to which LogAnalytics Api writes output logs to.
 * @property {date} fromTime From time of the query
 * @property {date} toTime To time of the query
 * @property {boolean} [groupByThrottlePolicy] Group query result by Throttle
 * Policy applied.
 * @property {boolean} [groupByOperationName] Group query result by  by
 * Operation Name.
 * @property {boolean} [groupByResourceName] Group query result by Resource
 * Name.
 */
export interface LogAnalyticsInputBase {
  blobContainerSasUri: string;
  fromTime: Date;
  toTime: Date;
  groupByThrottlePolicy?: boolean;
  groupByOperationName?: boolean;
  groupByResourceName?: boolean;
}

/**
 * @class
 * Initializes a new instance of the RequestRateByIntervalInput class.
 * @constructor
 * Api request input for LogAnalytics getRequestRateByInterval Api.
 *
 * @property {string} intervalLength Interval value in minutes used to create
 * LogAnalytics call rate logs. Possible values include: 'ThreeMins',
 * 'FiveMins', 'ThirtyMins', 'SixtyMins'
 */
export interface RequestRateByIntervalInput extends LogAnalyticsInputBase {
  intervalLength: string;
}

/**
 * @class
 * Initializes a new instance of the ThrottledRequestsInput class.
 * @constructor
 * Api request input for LogAnalytics getThrottledRequests Api.
 *
 */
export interface ThrottledRequestsInput extends LogAnalyticsInputBase {
}

/**
 * @class
 * Initializes a new instance of the LogAnalyticsOutput class.
 * @constructor
 * LogAnalytics output properties
 *
 * @property {string} [output] Output file Uri path to blob container.
 */
export interface LogAnalyticsOutput {
  readonly output?: string;
}

/**
 * @class
 * Initializes a new instance of the LogAnalyticsOperationResult class.
 * @constructor
 * LogAnalytics operation status response
 *
 * @property {object} [properties] LogAnalyticsOutput
 * @property {string} [properties.output] Output file Uri path to blob
 * container.
 */
export interface LogAnalyticsOperationResult {
  readonly properties?: LogAnalyticsOutput;
}

/**
 * @class
 * Initializes a new instance of the RunCommandInputParameter class.
 * @constructor
 * Describes the properties of a run command parameter.
 *
 * @property {string} name The run command parameter name.
 * @property {string} value The run command parameter value.
 */
export interface RunCommandInputParameter {
  name: string;
  value: string;
}

/**
 * @class
 * Initializes a new instance of the RunCommandInput class.
 * @constructor
 * Capture Virtual Machine parameters.
 *
 * @property {string} commandId The run command id.
 * @property {array} [script] Optional. The script to be executed.  When this
 * value is given, the given script will override the default script of the
 * command.
 * @property {array} [parameters] The run command parameters.
 */
export interface RunCommandInput {
  commandId: string;
  script?: string[];
  parameters?: RunCommandInputParameter[];
}

/**
 * @class
 * Initializes a new instance of the RunCommandParameterDefinition class.
 * @constructor
 * Describes the properties of a run command parameter.
 *
 * @property {string} name The run command parameter name.
 * @property {string} type The run command parameter type.
 * @property {string} [defaultValue] The run command parameter default value.
 * @property {boolean} [required] The run command parameter required. Default
 * value: false .
 */
export interface RunCommandParameterDefinition {
  name: string;
  type: string;
  defaultValue?: string;
  required?: boolean;
}

/**
 * @class
 * Initializes a new instance of the RunCommandDocumentBase class.
 * @constructor
 * Describes the properties of a Run Command metadata.
 *
 * @property {string} schema The VM run command schema.
 * @property {string} id The VM run command id.
 * @property {string} osType The Operating System type. Possible values
 * include: 'Windows', 'Linux'
 * @property {string} label The VM run command label.
 * @property {string} description The VM run command description.
 */
export interface RunCommandDocumentBase {
  schema: string;
  id: string;
  osType: string;
  label: string;
  description: string;
}

/**
 * @class
 * Initializes a new instance of the RunCommandDocument class.
 * @constructor
 * Describes the properties of a Run Command.
 *
 * @property {array} script The script to be executed.
 * @property {array} [parameters] The parameters used by the script.
 */
export interface RunCommandDocument extends RunCommandDocumentBase {
  script: string[];
  parameters?: RunCommandParameterDefinition[];
}

/**
 * @class
 * Initializes a new instance of the RunCommandResult class.
 * @constructor
 * @property {array} [value] Run command operation response.
 */
export interface RunCommandResult {
  value?: InstanceViewStatus[];
}

/**
 * @class
 * Initializes a new instance of the ResourceSkuCapacity class.
 * @constructor
 * Describes scaling information of a SKU.
 *
 * @property {number} [minimum] The minimum capacity.
 * @property {number} [maximum] The maximum capacity that can be set.
 * @property {number} [default] The default capacity.
 * @property {string} [scaleType] The scale type applicable to the sku.
 * Possible values include: 'Automatic', 'Manual', 'None'
 */
export interface ResourceSkuCapacity {
  readonly minimum?: number;
  readonly maximum?: number;
  readonly default?: number;
  readonly scaleType?: string;
}

/**
 * @class
 * Initializes a new instance of the ResourceSkuCosts class.
 * @constructor
 * Describes metadata for retrieving price info.
 *
 * @property {string} [meterID] Used for querying price from commerce.
 * @property {number} [quantity] The multiplier is needed to extend the base
 * metered cost.
 * @property {string} [extendedUnit] An invariant to show the extended unit.
 */
export interface ResourceSkuCosts {
  readonly meterID?: string;
  readonly quantity?: number;
  readonly extendedUnit?: string;
}

/**
 * @class
 * Initializes a new instance of the ResourceSkuCapabilities class.
 * @constructor
 * Describes The SKU capabilites object.
 *
 * @property {string} [name] An invariant to describe the feature.
 * @property {string} [value] An invariant if the feature is measured by
 * quantity.
 */
export interface ResourceSkuCapabilities {
  readonly name?: string;
  readonly value?: string;
}

/**
 * @class
 * Initializes a new instance of the ResourceSkuRestrictionInfo class.
 * @constructor
 * @property {array} [locations] Locations where the SKU is restricted
 * @property {array} [zones] List of availability zones where the SKU is
 * restricted.
 */
export interface ResourceSkuRestrictionInfo {
  readonly locations?: string[];
  readonly zones?: string[];
}

/**
 * @class
 * Initializes a new instance of the ResourceSkuRestrictions class.
 * @constructor
 * Describes scaling information of a SKU.
 *
 * @property {string} [type] The type of restrictions. Possible values include:
 * 'Location', 'Zone'
 * @property {array} [values] The value of restrictions. If the restriction
 * type is set to location. This would be different locations where the SKU is
 * restricted.
 * @property {object} [restrictionInfo] The information about the restriction
 * where the SKU cannot be used.
 * @property {array} [restrictionInfo.locations] Locations where the SKU is
 * restricted
 * @property {array} [restrictionInfo.zones] List of availability zones where
 * the SKU is restricted.
 * @property {string} [reasonCode] The reason for restriction. Possible values
 * include: 'QuotaId', 'NotAvailableForSubscription'
 */
export interface ResourceSkuRestrictions {
  readonly type?: string;
  readonly values?: string[];
  readonly restrictionInfo?: ResourceSkuRestrictionInfo;
  readonly reasonCode?: string;
}

/**
 * @class
 * Initializes a new instance of the ResourceSkuLocationInfo class.
 * @constructor
 * @property {string} [location] Location of the SKU
 * @property {array} [zones] List of availability zones where the SKU is
 * supported.
 */
export interface ResourceSkuLocationInfo {
  readonly location?: string;
  readonly zones?: string[];
}

/**
 * @class
 * Initializes a new instance of the ResourceSku class.
 * @constructor
 * Describes an available Compute SKU.
 *
 * @property {string} [resourceType] The type of resource the SKU applies to.
 * @property {string} [name] The name of SKU.
 * @property {string} [tier] Specifies the tier of virtual machines in a scale
 * set.<br /><br /> Possible Values:<br /><br /> **Standard**<br /><br />
 * **Basic**
 * @property {string} [size] The Size of the SKU.
 * @property {string} [family] The Family of this particular SKU.
 * @property {string} [kind] The Kind of resources that are supported in this
 * SKU.
 * @property {object} [capacity] Specifies the number of virtual machines in
 * the scale set.
 * @property {number} [capacity.minimum] The minimum capacity.
 * @property {number} [capacity.maximum] The maximum capacity that can be set.
 * @property {number} [capacity.default] The default capacity.
 * @property {string} [capacity.scaleType] The scale type applicable to the
 * sku. Possible values include: 'Automatic', 'Manual', 'None'
 * @property {array} [locations] The set of locations that the SKU is
 * available.
 * @property {array} [locationInfo] A list of locations and availability zones
 * in those locations where the SKU is available.
 * @property {array} [apiVersions] The api versions that support this SKU.
 * @property {array} [costs] Metadata for retrieving price info.
 * @property {array} [capabilities] A name value pair to describe the
 * capability.
 * @property {array} [restrictions] The restrictions because of which SKU
 * cannot be used. This is empty if there are no restrictions.
 */
export interface ResourceSku {
  readonly resourceType?: string;
  readonly name?: string;
  readonly tier?: string;
  readonly size?: string;
  readonly family?: string;
  readonly kind?: string;
  readonly capacity?: ResourceSkuCapacity;
  readonly locations?: string[];
  readonly locationInfo?: ResourceSkuLocationInfo[];
  readonly apiVersions?: string[];
  readonly costs?: ResourceSkuCosts[];
  readonly capabilities?: ResourceSkuCapabilities[];
  readonly restrictions?: ResourceSkuRestrictions[];
}

/**
 * @class
 * Initializes a new instance of the DiskSku class.
 * @constructor
 * The disks sku name. Can be Standard_LRS, Premium_LRS, StandardSSD_LRS, or
 * UltraSSD_LRS.
 *
 * @property {string} [name] The sku name. Possible values include:
 * 'Standard_LRS', 'Premium_LRS', 'StandardSSD_LRS', 'UltraSSD_LRS'
 * @property {string} [tier] The sku tier. Default value: 'Standard' .
 */
export interface DiskSku {
  name?: string;
  readonly tier?: string;
}

/**
 * @class
 * Initializes a new instance of the ImageDiskReference class.
 * @constructor
 * The source image used for creating the disk.
 *
 * @property {string} id A relative uri containing either a Platform Image
 * Repository or user image reference.
 * @property {number} [lun] If the disk is created from an image's data disk,
 * this is an index that indicates which of the data disks in the image to use.
 * For OS disks, this field is null.
 */
export interface ImageDiskReference {
  id: string;
  lun?: number;
}

/**
 * @class
 * Initializes a new instance of the CreationData class.
 * @constructor
 * Data used when creating a disk.
 *
 * @property {string} createOption This enumerates the possible sources of a
 * disk's creation. Possible values include: 'Empty', 'Attach', 'FromImage',
 * 'Import', 'Copy', 'Restore'
 * @property {string} [storageAccountId] If createOption is Import, the Azure
 * Resource Manager identifier of the storage account containing the blob to
 * import as a disk. Required only if the blob is in a different subscription
 * @property {object} [imageReference] Disk source information.
 * @property {string} [imageReference.id] A relative uri containing either a
 * Platform Image Repository or user image reference.
 * @property {number} [imageReference.lun] If the disk is created from an
 * image's data disk, this is an index that indicates which of the data disks
 * in the image to use. For OS disks, this field is null.
 * @property {string} [sourceUri] If createOption is Import, this is the URI of
 * a blob to be imported into a managed disk.
 * @property {string} [sourceResourceId] If createOption is Copy, this is the
 * ARM id of the source snapshot or disk.
 */
export interface CreationData {
  createOption: string;
  storageAccountId?: string;
  imageReference?: ImageDiskReference;
  sourceUri?: string;
  sourceResourceId?: string;
}

/**
 * @class
 * Initializes a new instance of the SourceVault class.
 * @constructor
 * The vault id is an Azure Resource Manager Resoure id in the form
 * /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}
 *
 * @property {string} [id] Resource Id
 */
export interface SourceVault {
  id?: string;
}

/**
 * @class
 * Initializes a new instance of the KeyVaultAndSecretReference class.
 * @constructor
 * Key Vault Secret Url and vault id of the encryption key
 *
 * @property {object} sourceVault Resource id of the KeyVault containing the
 * key or secret
 * @property {string} [sourceVault.id] Resource Id
 * @property {string} secretUrl Url pointing to a key or secret in KeyVault
 */
export interface KeyVaultAndSecretReference {
  sourceVault: SourceVault;
  secretUrl: string;
}

/**
 * @class
 * Initializes a new instance of the KeyVaultAndKeyReference class.
 * @constructor
 * Key Vault Key Url and vault id of KeK, KeK is optional and when provided is
 * used to unwrap the encryptionKey
 *
 * @property {object} sourceVault Resource id of the KeyVault containing the
 * key or secret
 * @property {string} [sourceVault.id] Resource Id
 * @property {string} keyUrl Url pointing to a key or secret in KeyVault
 */
export interface KeyVaultAndKeyReference {
  sourceVault: SourceVault;
  keyUrl: string;
}

/**
 * @class
 * Initializes a new instance of the EncryptionSettings class.
 * @constructor
 * Encryption settings for disk or snapshot
 *
 * @property {boolean} [enabled] Set this flag to true and provide
 * DiskEncryptionKey and optional KeyEncryptionKey to enable encryption. Set
 * this flag to false and remove DiskEncryptionKey and KeyEncryptionKey to
 * disable encryption. If EncryptionSettings is null in the request object, the
 * existing settings remain unchanged.
 * @property {object} [diskEncryptionKey] Key Vault Secret Url and vault id of
 * the disk encryption key
 * @property {object} [diskEncryptionKey.sourceVault] Resource id of the
 * KeyVault containing the key or secret
 * @property {string} [diskEncryptionKey.sourceVault.id] Resource Id
 * @property {string} [diskEncryptionKey.secretUrl] Url pointing to a key or
 * secret in KeyVault
 * @property {object} [keyEncryptionKey] Key Vault Key Url and vault id of the
 * key encryption key
 * @property {object} [keyEncryptionKey.sourceVault] Resource id of the
 * KeyVault containing the key or secret
 * @property {string} [keyEncryptionKey.sourceVault.id] Resource Id
 * @property {string} [keyEncryptionKey.keyUrl] Url pointing to a key or secret
 * in KeyVault
 */
export interface EncryptionSettings {
  enabled?: boolean;
  diskEncryptionKey?: KeyVaultAndSecretReference;
  keyEncryptionKey?: KeyVaultAndKeyReference;
}

/**
 * @class
 * Initializes a new instance of the Disk class.
 * @constructor
 * Disk resource.
 *
 * @property {string} [managedBy] A relative URI containing the ID of the VM
 * that has the disk attached.
 * @property {object} [sku]
 * @property {string} [sku.name] The sku name. Possible values include:
 * 'Standard_LRS', 'Premium_LRS', 'StandardSSD_LRS', 'UltraSSD_LRS'
 * @property {string} [sku.tier] The sku tier.
 * @property {array} [zones] The Logical zone list for Disk.
 * @property {date} [timeCreated] The time when the disk was created.
 * @property {string} [osType] The Operating System type. Possible values
 * include: 'Windows', 'Linux'
 * @property {object} creationData Disk source information. CreationData
 * information cannot be changed after the disk has been created.
 * @property {string} [creationData.createOption] This enumerates the possible
 * sources of a disk's creation. Possible values include: 'Empty', 'Attach',
 * 'FromImage', 'Import', 'Copy', 'Restore'
 * @property {string} [creationData.storageAccountId] If createOption is
 * Import, the Azure Resource Manager identifier of the storage account
 * containing the blob to import as a disk. Required only if the blob is in a
 * different subscription
 * @property {object} [creationData.imageReference] Disk source information.
 * @property {string} [creationData.imageReference.id] A relative uri
 * containing either a Platform Image Repository or user image reference.
 * @property {number} [creationData.imageReference.lun] If the disk is created
 * from an image's data disk, this is an index that indicates which of the data
 * disks in the image to use. For OS disks, this field is null.
 * @property {string} [creationData.sourceUri] If createOption is Import, this
 * is the URI of a blob to be imported into a managed disk.
 * @property {string} [creationData.sourceResourceId] If createOption is Copy,
 * this is the ARM id of the source snapshot or disk.
 * @property {number} [diskSizeGB] If creationData.createOption is Empty, this
 * field is mandatory and it indicates the size of the VHD to create. If this
 * field is present for updates or creation with other options, it indicates a
 * resize. Resizes are only allowed if the disk is not attached to a running
 * VM, and can only increase the disk's size.
 * @property {object} [encryptionSettings] Encryption settings for disk or
 * snapshot
 * @property {boolean} [encryptionSettings.enabled] Set this flag to true and
 * provide DiskEncryptionKey and optional KeyEncryptionKey to enable
 * encryption. Set this flag to false and remove DiskEncryptionKey and
 * KeyEncryptionKey to disable encryption. If EncryptionSettings is null in the
 * request object, the existing settings remain unchanged.
 * @property {object} [encryptionSettings.diskEncryptionKey] Key Vault Secret
 * Url and vault id of the disk encryption key
 * @property {object} [encryptionSettings.diskEncryptionKey.sourceVault]
 * Resource id of the KeyVault containing the key or secret
 * @property {string} [encryptionSettings.diskEncryptionKey.sourceVault.id]
 * Resource Id
 * @property {string} [encryptionSettings.diskEncryptionKey.secretUrl] Url
 * pointing to a key or secret in KeyVault
 * @property {object} [encryptionSettings.keyEncryptionKey] Key Vault Key Url
 * and vault id of the key encryption key
 * @property {object} [encryptionSettings.keyEncryptionKey.sourceVault]
 * Resource id of the KeyVault containing the key or secret
 * @property {string} [encryptionSettings.keyEncryptionKey.sourceVault.id]
 * Resource Id
 * @property {string} [encryptionSettings.keyEncryptionKey.keyUrl] Url pointing
 * to a key or secret in KeyVault
 * @property {string} [provisioningState] The disk provisioning state.
 * @property {number} [diskIOPSReadWrite] The number of IOPS allowed for this
 * disk; only settable for UltraSSD disks. One operation can transfer between
 * 4k and 256k bytes.
 * @property {number} [diskMBpsReadWrite] The bandwidth allowed for this disk;
 * only settable for UltraSSD disks. MBps means millions of bytes per second -
 * MB here uses the ISO notation, of powers of 10.
 */
export interface Disk extends Resource {
  readonly managedBy?: string;
  sku?: DiskSku;
  zones?: string[];
  readonly timeCreated?: Date;
  osType?: string;
  creationData: CreationData;
  diskSizeGB?: number;
  encryptionSettings?: EncryptionSettings;
  readonly provisioningState?: string;
  diskIOPSReadWrite?: number;
  diskMBpsReadWrite?: number;
}

/**
 * @class
 * Initializes a new instance of the DiskUpdate class.
 * @constructor
 * Disk update resource.
 *
 * @property {string} [osType] the Operating System type. Possible values
 * include: 'Windows', 'Linux'
 * @property {number} [diskSizeGB] If creationData.createOption is Empty, this
 * field is mandatory and it indicates the size of the VHD to create. If this
 * field is present for updates or creation with other options, it indicates a
 * resize. Resizes are only allowed if the disk is not attached to a running
 * VM, and can only increase the disk's size.
 * @property {object} [encryptionSettings] Encryption settings for disk or
 * snapshot
 * @property {boolean} [encryptionSettings.enabled] Set this flag to true and
 * provide DiskEncryptionKey and optional KeyEncryptionKey to enable
 * encryption. Set this flag to false and remove DiskEncryptionKey and
 * KeyEncryptionKey to disable encryption. If EncryptionSettings is null in the
 * request object, the existing settings remain unchanged.
 * @property {object} [encryptionSettings.diskEncryptionKey] Key Vault Secret
 * Url and vault id of the disk encryption key
 * @property {object} [encryptionSettings.diskEncryptionKey.sourceVault]
 * Resource id of the KeyVault containing the key or secret
 * @property {string} [encryptionSettings.diskEncryptionKey.sourceVault.id]
 * Resource Id
 * @property {string} [encryptionSettings.diskEncryptionKey.secretUrl] Url
 * pointing to a key or secret in KeyVault
 * @property {object} [encryptionSettings.keyEncryptionKey] Key Vault Key Url
 * and vault id of the key encryption key
 * @property {object} [encryptionSettings.keyEncryptionKey.sourceVault]
 * Resource id of the KeyVault containing the key or secret
 * @property {string} [encryptionSettings.keyEncryptionKey.sourceVault.id]
 * Resource Id
 * @property {string} [encryptionSettings.keyEncryptionKey.keyUrl] Url pointing
 * to a key or secret in KeyVault
 * @property {number} [diskIOPSReadWrite] The number of IOPS allowed for this
 * disk; only settable for UltraSSD disks. One operation can transfer between
 * 4k and 256k bytes.
 * @property {number} [diskMBpsReadWrite] The bandwidth allowed for this disk;
 * only settable for UltraSSD disks. MBps means millions of bytes per second -
 * MB here uses the ISO notation, of powers of 10.
 * @property {object} [tags] Resource tags
 * @property {object} [sku]
 * @property {string} [sku.name] The sku name. Possible values include:
 * 'Standard_LRS', 'Premium_LRS', 'StandardSSD_LRS', 'UltraSSD_LRS'
 * @property {string} [sku.tier] The sku tier.
 */
export interface DiskUpdate {
  osType?: string;
  diskSizeGB?: number;
  encryptionSettings?: EncryptionSettings;
  diskIOPSReadWrite?: number;
  diskMBpsReadWrite?: number;
  tags?: { [propertyName: string]: string };
  sku?: DiskSku;
}

/**
 * @class
 * Initializes a new instance of the SnapshotSku class.
 * @constructor
 * The snapshots sku name. Can be Standard_LRS, Premium_LRS, or Standard_ZRS.
 *
 * @property {string} [name] The sku name. Possible values include:
 * 'Standard_LRS', 'Premium_LRS', 'Standard_ZRS'
 * @property {string} [tier] The sku tier. Default value: 'Standard' .
 */
export interface SnapshotSku {
  name?: string;
  readonly tier?: string;
}

/**
 * @class
 * Initializes a new instance of the GrantAccessData class.
 * @constructor
 * Data used for requesting a SAS.
 *
 * @property {string} access Possible values include: 'None', 'Read'
 * @property {number} durationInSeconds Time duration in seconds until the SAS
 * access expires.
 */
export interface GrantAccessData {
  access: string;
  durationInSeconds: number;
}

/**
 * @class
 * Initializes a new instance of the AccessUri class.
 * @constructor
 * A disk access SAS uri.
 *
 * @property {string} [accessSAS] A SAS uri for accessing a disk.
 */
export interface AccessUri {
  readonly accessSAS?: string;
}

/**
 * @class
 * Initializes a new instance of the Snapshot class.
 * @constructor
 * Snapshot resource.
 *
 * @property {string} [managedBy] Unused. Always Null.
 * @property {object} [sku]
 * @property {string} [sku.name] The sku name. Possible values include:
 * 'Standard_LRS', 'Premium_LRS', 'Standard_ZRS'
 * @property {string} [sku.tier] The sku tier.
 * @property {date} [timeCreated] The time when the disk was created.
 * @property {string} [osType] The Operating System type. Possible values
 * include: 'Windows', 'Linux'
 * @property {object} creationData Disk source information. CreationData
 * information cannot be changed after the disk has been created.
 * @property {string} [creationData.createOption] This enumerates the possible
 * sources of a disk's creation. Possible values include: 'Empty', 'Attach',
 * 'FromImage', 'Import', 'Copy', 'Restore'
 * @property {string} [creationData.storageAccountId] If createOption is
 * Import, the Azure Resource Manager identifier of the storage account
 * containing the blob to import as a disk. Required only if the blob is in a
 * different subscription
 * @property {object} [creationData.imageReference] Disk source information.
 * @property {string} [creationData.imageReference.id] A relative uri
 * containing either a Platform Image Repository or user image reference.
 * @property {number} [creationData.imageReference.lun] If the disk is created
 * from an image's data disk, this is an index that indicates which of the data
 * disks in the image to use. For OS disks, this field is null.
 * @property {string} [creationData.sourceUri] If createOption is Import, this
 * is the URI of a blob to be imported into a managed disk.
 * @property {string} [creationData.sourceResourceId] If createOption is Copy,
 * this is the ARM id of the source snapshot or disk.
 * @property {number} [diskSizeGB] If creationData.createOption is Empty, this
 * field is mandatory and it indicates the size of the VHD to create. If this
 * field is present for updates or creation with other options, it indicates a
 * resize. Resizes are only allowed if the disk is not attached to a running
 * VM, and can only increase the disk's size.
 * @property {object} [encryptionSettings] Encryption settings for disk or
 * snapshot
 * @property {boolean} [encryptionSettings.enabled] Set this flag to true and
 * provide DiskEncryptionKey and optional KeyEncryptionKey to enable
 * encryption. Set this flag to false and remove DiskEncryptionKey and
 * KeyEncryptionKey to disable encryption. If EncryptionSettings is null in the
 * request object, the existing settings remain unchanged.
 * @property {object} [encryptionSettings.diskEncryptionKey] Key Vault Secret
 * Url and vault id of the disk encryption key
 * @property {object} [encryptionSettings.diskEncryptionKey.sourceVault]
 * Resource id of the KeyVault containing the key or secret
 * @property {string} [encryptionSettings.diskEncryptionKey.sourceVault.id]
 * Resource Id
 * @property {string} [encryptionSettings.diskEncryptionKey.secretUrl] Url
 * pointing to a key or secret in KeyVault
 * @property {object} [encryptionSettings.keyEncryptionKey] Key Vault Key Url
 * and vault id of the key encryption key
 * @property {object} [encryptionSettings.keyEncryptionKey.sourceVault]
 * Resource id of the KeyVault containing the key or secret
 * @property {string} [encryptionSettings.keyEncryptionKey.sourceVault.id]
 * Resource Id
 * @property {string} [encryptionSettings.keyEncryptionKey.keyUrl] Url pointing
 * to a key or secret in KeyVault
 * @property {string} [provisioningState] The disk provisioning state.
 */
export interface Snapshot extends Resource {
  readonly managedBy?: string;
  sku?: SnapshotSku;
  readonly timeCreated?: Date;
  osType?: string;
  creationData: CreationData;
  diskSizeGB?: number;
  encryptionSettings?: EncryptionSettings;
  readonly provisioningState?: string;
}

/**
 * @class
 * Initializes a new instance of the SnapshotUpdate class.
 * @constructor
 * Snapshot update resource.
 *
 * @property {string} [osType] the Operating System type. Possible values
 * include: 'Windows', 'Linux'
 * @property {number} [diskSizeGB] If creationData.createOption is Empty, this
 * field is mandatory and it indicates the size of the VHD to create. If this
 * field is present for updates or creation with other options, it indicates a
 * resize. Resizes are only allowed if the disk is not attached to a running
 * VM, and can only increase the disk's size.
 * @property {object} [encryptionSettings] Encryption settings for disk or
 * snapshot
 * @property {boolean} [encryptionSettings.enabled] Set this flag to true and
 * provide DiskEncryptionKey and optional KeyEncryptionKey to enable
 * encryption. Set this flag to false and remove DiskEncryptionKey and
 * KeyEncryptionKey to disable encryption. If EncryptionSettings is null in the
 * request object, the existing settings remain unchanged.
 * @property {object} [encryptionSettings.diskEncryptionKey] Key Vault Secret
 * Url and vault id of the disk encryption key
 * @property {object} [encryptionSettings.diskEncryptionKey.sourceVault]
 * Resource id of the KeyVault containing the key or secret
 * @property {string} [encryptionSettings.diskEncryptionKey.sourceVault.id]
 * Resource Id
 * @property {string} [encryptionSettings.diskEncryptionKey.secretUrl] Url
 * pointing to a key or secret in KeyVault
 * @property {object} [encryptionSettings.keyEncryptionKey] Key Vault Key Url
 * and vault id of the key encryption key
 * @property {object} [encryptionSettings.keyEncryptionKey.sourceVault]
 * Resource id of the KeyVault containing the key or secret
 * @property {string} [encryptionSettings.keyEncryptionKey.sourceVault.id]
 * Resource Id
 * @property {string} [encryptionSettings.keyEncryptionKey.keyUrl] Url pointing
 * to a key or secret in KeyVault
 * @property {object} [tags] Resource tags
 * @property {object} [sku]
 * @property {string} [sku.name] The sku name. Possible values include:
 * 'Standard_LRS', 'Premium_LRS', 'Standard_ZRS'
 * @property {string} [sku.tier] The sku tier.
 */
export interface SnapshotUpdate {
  osType?: string;
  diskSizeGB?: number;
  encryptionSettings?: EncryptionSettings;
  tags?: { [propertyName: string]: string };
  sku?: SnapshotSku;
}

/**
 * @class
 * Initializes a new instance of the GalleryIdentifier class.
 * @constructor
 * Describes the gallery unique name.
 *
 * @property {string} [uniqueName] The unique name of the Shared Image Gallery.
 * This name is generated automatically by Azure.
 */
export interface GalleryIdentifier {
  readonly uniqueName?: string;
}

/**
 * @class
 * Initializes a new instance of the Gallery class.
 * @constructor
 * Specifies information about the Shared Image Gallery that you want to create
 * or update.
 *
 * @property {string} [description] The description of this Shared Image
 * Gallery resource. This property is updateable.
 * @property {object} [identifier]
 * @property {string} [identifier.uniqueName] The unique name of the Shared
 * Image Gallery. This name is generated automatically by Azure.
 * @property {string} [provisioningState] The current state of the gallery. The
 * provisioning state, which only appears in the response. Possible values
 * include: 'Creating', 'Updating', 'Failed', 'Succeeded', 'Deleting',
 * 'Migrating'
 */
export interface Gallery extends Resource {
  description?: string;
  identifier?: GalleryIdentifier;
  readonly provisioningState?: string;
}

/**
 * @class
 * Initializes a new instance of the GalleryImageIdentifier class.
 * @constructor
 * This is the gallery Image Definition identifier.
 *
 * @property {string} publisher The name of the gallery Image Definition
 * publisher.
 * @property {string} offer The name of the gallery Image Definition offer.
 * @property {string} sku The name of the gallery Image Definition SKU.
 */
export interface GalleryImageIdentifier {
  publisher: string;
  offer: string;
  sku: string;
}

/**
 * @class
 * Initializes a new instance of the ResourceRange class.
 * @constructor
 * Describes the resource range.
 *
 * @property {number} [min] The minimum number of the resource.
 * @property {number} [max] The maximum number of the resource.
 */
export interface ResourceRange {
  min?: number;
  max?: number;
}

/**
 * @class
 * Initializes a new instance of the RecommendedMachineConfiguration class.
 * @constructor
 * The properties describe the recommended machine configuration for this Image
 * Definition. These properties are updateable.
 *
 * @property {object} [vCPUs]
 * @property {number} [vCPUs.min] The minimum number of the resource.
 * @property {number} [vCPUs.max] The maximum number of the resource.
 * @property {object} [memory]
 * @property {number} [memory.min] The minimum number of the resource.
 * @property {number} [memory.max] The maximum number of the resource.
 */
export interface RecommendedMachineConfiguration {
  vCPUs?: ResourceRange;
  memory?: ResourceRange;
}

/**
 * @class
 * Initializes a new instance of the Disallowed class.
 * @constructor
 * Describes the disallowed disk types.
 *
 * @property {array} [diskTypes] A list of disk types.
 */
export interface Disallowed {
  diskTypes?: string[];
}

/**
 * @class
 * Initializes a new instance of the ImagePurchasePlan class.
 * @constructor
 * Describes the gallery Image Definition purchase plan. This is used by
 * marketplace images.
 *
 * @property {string} [name] The plan ID.
 * @property {string} [publisher] The publisher ID.
 * @property {string} [product] The product ID.
 */
export interface ImagePurchasePlan {
  name?: string;
  publisher?: string;
  product?: string;
}

/**
 * @class
 * Initializes a new instance of the GalleryImage class.
 * @constructor
 * Specifies information about the gallery Image Definition that you want to
 * create or update.
 *
 * @property {string} [description] The description of this gallery Image
 * Definition resource. This property is updateable.
 * @property {string} [eula] The Eula agreement for the gallery Image
 * Definition.
 * @property {string} [privacyStatementUri] The privacy statement uri.
 * @property {string} [releaseNoteUri] The release note uri.
 * @property {string} osType This property allows you to specify the type of
 * the OS that is included in the disk when creating a VM from a managed image.
 * <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**.
 * Possible values include: 'Windows', 'Linux'
 * @property {string} osState The allowed values for OS State are
 * 'Generalized'. Possible values include: 'Generalized', 'Specialized'
 * @property {date} [endOfLifeDate] The end of life date of the gallery Image
 * Definition. This property can be used for decommissioning purposes. This
 * property is updateable.
 * @property {object} identifier
 * @property {string} [identifier.publisher] The name of the gallery Image
 * Definition publisher.
 * @property {string} [identifier.offer] The name of the gallery Image
 * Definition offer.
 * @property {string} [identifier.sku] The name of the gallery Image Definition
 * SKU.
 * @property {object} [recommended]
 * @property {object} [recommended.vCPUs]
 * @property {number} [recommended.vCPUs.min] The minimum number of the
 * resource.
 * @property {number} [recommended.vCPUs.max] The maximum number of the
 * resource.
 * @property {object} [recommended.memory]
 * @property {number} [recommended.memory.min] The minimum number of the
 * resource.
 * @property {number} [recommended.memory.max] The maximum number of the
 * resource.
 * @property {object} [disallowed]
 * @property {array} [disallowed.diskTypes] A list of disk types.
 * @property {object} [purchasePlan]
 * @property {string} [purchasePlan.name] The plan ID.
 * @property {string} [purchasePlan.publisher] The publisher ID.
 * @property {string} [purchasePlan.product] The product ID.
 * @property {string} [provisioningState] The current state of the gallery
 * Image Definition. The provisioning state, which only appears in the
 * response. Possible values include: 'Creating', 'Updating', 'Failed',
 * 'Succeeded', 'Deleting', 'Migrating'
 */
export interface GalleryImage extends Resource {
  description?: string;
  eula?: string;
  privacyStatementUri?: string;
  releaseNoteUri?: string;
  osType: string;
  osState: string;
  endOfLifeDate?: Date;
  identifier: GalleryImageIdentifier;
  recommended?: RecommendedMachineConfiguration;
  disallowed?: Disallowed;
  purchasePlan?: ImagePurchasePlan;
  readonly provisioningState?: string;
}

/**
 * @class
 * Initializes a new instance of the GalleryArtifactPublishingProfileBase class.
 * @constructor
 * Describes the basic gallery artifact publishing profile.
 *
 * @property {array} [targetRegions] The target regions where the Image Version
 * is going to be replicated to. This property is updateable.
 * @property {object} source
 * @property {object} [source.managedImage]
 * @property {string} [source.managedImage.id] The managed artifact id.
 */
export interface GalleryArtifactPublishingProfileBase {
  targetRegions?: TargetRegion[];
  source: GalleryArtifactSource;
}

/**
 * @class
 * Initializes a new instance of the GalleryImageVersionPublishingProfile class.
 * @constructor
 * The publishing profile of a gallery Image Version.
 *
 * @property {number} [replicaCount] The number of replicas of the Image
 * Version to be created per region. This property would take effect for a
 * region when regionalReplicaCount is not specified. This property is
 * updateable.
 * @property {boolean} [excludeFromLatest] If set to true, Virtual Machines
 * deployed from the latest version of the Image Definition won't use this
 * Image Version.
 * @property {date} [publishedDate] The timestamp for when the gallery Image
 * Version is published.
 * @property {date} [endOfLifeDate] The end of life date of the gallery Image
 * Version. This property can be used for decommissioning purposes. This
 * property is updateable.
 */
export interface GalleryImageVersionPublishingProfile extends GalleryArtifactPublishingProfileBase {
  replicaCount?: number;
  excludeFromLatest?: boolean;
  readonly publishedDate?: Date;
  endOfLifeDate?: Date;
}

/**
 * @class
 * Initializes a new instance of the GalleryDiskImage class.
 * @constructor
 * This is the disk image base class.
 *
 * @property {number} [sizeInGB] This property indicates the size of the VHD to
 * be created.
 * @property {string} [hostCaching] The host caching of the disk. Valid values
 * are 'None', 'ReadOnly', and 'ReadWrite'. Possible values include: 'None',
 * 'ReadOnly', 'ReadWrite'
 */
export interface GalleryDiskImage {
  readonly sizeInGB?: number;
  readonly hostCaching?: string;
}

/**
 * @class
 * Initializes a new instance of the GalleryOSDiskImage class.
 * @constructor
 * This is the OS disk image.
 *
 */
export interface GalleryOSDiskImage extends GalleryDiskImage {
}

/**
 * @class
 * Initializes a new instance of the GalleryDataDiskImage class.
 * @constructor
 * This is the data disk image.
 *
 * @property {number} [lun] This property specifies the logical unit number of
 * the data disk. This value is used to identify data disks within the Virtual
 * Machine and therefore must be unique for each data disk attached to the
 * Virtual Machine.
 */
export interface GalleryDataDiskImage extends GalleryDiskImage {
  readonly lun?: number;
}

/**
 * @class
 * Initializes a new instance of the GalleryImageVersionStorageProfile class.
 * @constructor
 * This is the storage profile of a gallery Image Version.
 *
 * @property {object} [osDiskImage]
 * @property {array} [dataDiskImages] A list of data disk images.
 */
export interface GalleryImageVersionStorageProfile {
  readonly osDiskImage?: GalleryOSDiskImage;
  readonly dataDiskImages?: GalleryDataDiskImage[];
}

/**
 * @class
 * Initializes a new instance of the RegionalReplicationStatus class.
 * @constructor
 * This is the regional replication status.
 *
 * @property {string} [region] The region to which the gallery Image Version is
 * being replicated to.
 * @property {string} [state] This is the regional replication state. Possible
 * values include: 'Unknown', 'Replicating', 'Completed', 'Failed'
 * @property {string} [details] The details of the replication status.
 * @property {number} [progress] It indicates progress of the replication job.
 */
export interface RegionalReplicationStatus {
  readonly region?: string;
  readonly state?: string;
  readonly details?: string;
  readonly progress?: number;
}

/**
 * @class
 * Initializes a new instance of the ReplicationStatus class.
 * @constructor
 * This is the replication status of the gallery Image Version.
 *
 * @property {string} [aggregatedState] This is the aggregated replication
 * status based on all the regional replication status flags. Possible values
 * include: 'Unknown', 'InProgress', 'Completed', 'Failed'
 * @property {array} [summary] This is a summary of replication status for each
 * region.
 */
export interface ReplicationStatus {
  readonly aggregatedState?: string;
  readonly summary?: RegionalReplicationStatus[];
}

/**
 * @class
 * Initializes a new instance of the GalleryImageVersion class.
 * @constructor
 * Specifies information about the gallery Image Version that you want to
 * create or update.
 *
 * @property {object} publishingProfile
 * @property {number} [publishingProfile.replicaCount] The number of replicas
 * of the Image Version to be created per region. This property would take
 * effect for a region when regionalReplicaCount is not specified. This
 * property is updateable.
 * @property {boolean} [publishingProfile.excludeFromLatest] If set to true,
 * Virtual Machines deployed from the latest version of the Image Definition
 * won't use this Image Version.
 * @property {date} [publishingProfile.publishedDate] The timestamp for when
 * the gallery Image Version is published.
 * @property {date} [publishingProfile.endOfLifeDate] The end of life date of
 * the gallery Image Version. This property can be used for decommissioning
 * purposes. This property is updateable.
 * @property {string} [provisioningState] The current state of the gallery
 * Image Version. The provisioning state, which only appears in the response.
 * Possible values include: 'Creating', 'Updating', 'Failed', 'Succeeded',
 * 'Deleting', 'Migrating'
 * @property {object} [storageProfile]
 * @property {object} [storageProfile.osDiskImage]
 * @property {array} [storageProfile.dataDiskImages] A list of data disk
 * images.
 * @property {object} [replicationStatus]
 * @property {string} [replicationStatus.aggregatedState] This is the
 * aggregated replication status based on all the regional replication status
 * flags. Possible values include: 'Unknown', 'InProgress', 'Completed',
 * 'Failed'
 * @property {array} [replicationStatus.summary] This is a summary of
 * replication status for each region.
 */
export interface GalleryImageVersion extends Resource {
  publishingProfile: GalleryImageVersionPublishingProfile;
  readonly provisioningState?: string;
  readonly storageProfile?: GalleryImageVersionStorageProfile;
  readonly replicationStatus?: ReplicationStatus;
}

/**
 * @class
 * Initializes a new instance of the TargetRegion class.
 * @constructor
 * Describes the target region information.
 *
 * @property {string} name The name of the region.
 * @property {number} [regionalReplicaCount] The number of replicas of the
 * Image Version to be created per region. This property is updateable.
 */
export interface TargetRegion {
  name: string;
  regionalReplicaCount?: number;
}

/**
 * @class
 * Initializes a new instance of the ManagedArtifact class.
 * @constructor
 * The managed artifact.
 *
 * @property {string} id The managed artifact id.
 */
export interface ManagedArtifact {
  id: string;
}

/**
 * @class
 * Initializes a new instance of the GalleryArtifactSource class.
 * @constructor
 * The source image from which the Image Version is going to be created.
 *
 * @property {object} managedImage
 * @property {string} [managedImage.id] The managed artifact id.
 */
export interface GalleryArtifactSource {
  managedImage: ManagedArtifact;
}

/**
 * @class
 * Initializes a new instance of the ContainerServiceCustomProfile class.
 * @constructor
 * Properties to configure a custom container service cluster.
 *
 * @property {string} orchestrator The name of the custom orchestrator to use.
 */
export interface ContainerServiceCustomProfile {
  orchestrator: string;
}

/**
 * @class
 * Initializes a new instance of the ContainerServiceServicePrincipalProfile class.
 * @constructor
 * Information about a service principal identity for the cluster to use for
 * manipulating Azure APIs.
 *
 * @property {string} clientId The ID for the service principal.
 * @property {string} secret The secret password associated with the service
 * principal.
 */
export interface ContainerServiceServicePrincipalProfile {
  clientId: string;
  secret: string;
}

/**
 * @class
 * Initializes a new instance of the ContainerServiceOrchestratorProfile class.
 * @constructor
 * Profile for the container service orchestrator.
 *
 * @property {string} orchestratorType The orchestrator to use to manage
 * container service cluster resources. Valid values are Swarm, DCOS, and
 * Custom. Possible values include: 'Swarm', 'DCOS', 'Custom', 'Kubernetes'
 */
export interface ContainerServiceOrchestratorProfile {
  orchestratorType: string;
}

/**
 * @class
 * Initializes a new instance of the ContainerServiceMasterProfile class.
 * @constructor
 * Profile for the container service master.
 *
 * @property {number} [count] Number of masters (VMs) in the container service
 * cluster. Allowed values are 1, 3, and 5. The default value is 1. Default
 * value: 1 .
 * @property {string} dnsPrefix DNS prefix to be used to create the FQDN for
 * master.
 * @property {string} [fqdn] FDQN for the master.
 */
export interface ContainerServiceMasterProfile {
  count?: number;
  dnsPrefix: string;
  readonly fqdn?: string;
}

/**
 * @class
 * Initializes a new instance of the ContainerServiceAgentPoolProfile class.
 * @constructor
 * Profile for the container service agent pool.
 *
 * @property {string} name Unique name of the agent pool profile in the context
 * of the subscription and resource group.
 * @property {number} count Number of agents (VMs) to host docker containers.
 * Allowed values must be in the range of 1 to 100 (inclusive). The default
 * value is 1. . Default value: 1 .
 * @property {string} vmSize Size of agent VMs. Possible values include:
 * 'Standard_A0', 'Standard_A1', 'Standard_A2', 'Standard_A3', 'Standard_A4',
 * 'Standard_A5', 'Standard_A6', 'Standard_A7', 'Standard_A8', 'Standard_A9',
 * 'Standard_A10', 'Standard_A11', 'Standard_D1', 'Standard_D2', 'Standard_D3',
 * 'Standard_D4', 'Standard_D11', 'Standard_D12', 'Standard_D13',
 * 'Standard_D14', 'Standard_D1_v2', 'Standard_D2_v2', 'Standard_D3_v2',
 * 'Standard_D4_v2', 'Standard_D5_v2', 'Standard_D11_v2', 'Standard_D12_v2',
 * 'Standard_D13_v2', 'Standard_D14_v2', 'Standard_G1', 'Standard_G2',
 * 'Standard_G3', 'Standard_G4', 'Standard_G5', 'Standard_DS1', 'Standard_DS2',
 * 'Standard_DS3', 'Standard_DS4', 'Standard_DS11', 'Standard_DS12',
 * 'Standard_DS13', 'Standard_DS14', 'Standard_GS1', 'Standard_GS2',
 * 'Standard_GS3', 'Standard_GS4', 'Standard_GS5'
 * @property {string} dnsPrefix DNS prefix to be used to create the FQDN for
 * the agent pool.
 * @property {string} [fqdn] FDQN for the agent pool.
 */
export interface ContainerServiceAgentPoolProfile {
  name: string;
  count: number;
  vmSize: string;
  dnsPrefix: string;
  readonly fqdn?: string;
}

/**
 * @class
 * Initializes a new instance of the ContainerServiceWindowsProfile class.
 * @constructor
 * Profile for Windows VMs in the container service cluster.
 *
 * @property {string} adminUsername The administrator username to use for
 * Windows VMs.
 * @property {string} adminPassword The administrator password to use for
 * Windows VMs.
 */
export interface ContainerServiceWindowsProfile {
  adminUsername: string;
  adminPassword: string;
}

/**
 * @class
 * Initializes a new instance of the ContainerServiceSshPublicKey class.
 * @constructor
 * Contains information about SSH certificate public key data.
 *
 * @property {string} keyData Certificate public key used to authenticate with
 * VMs through SSH. The certificate must be in PEM format with or without
 * headers.
 */
export interface ContainerServiceSshPublicKey {
  keyData: string;
}

/**
 * @class
 * Initializes a new instance of the ContainerServiceSshConfiguration class.
 * @constructor
 * SSH configuration for Linux-based VMs running on Azure.
 *
 * @property {array} publicKeys the list of SSH public keys used to
 * authenticate with Linux-based VMs.
 */
export interface ContainerServiceSshConfiguration {
  publicKeys: ContainerServiceSshPublicKey[];
}

/**
 * @class
 * Initializes a new instance of the ContainerServiceLinuxProfile class.
 * @constructor
 * Profile for Linux VMs in the container service cluster.
 *
 * @property {string} adminUsername The administrator username to use for Linux
 * VMs.
 * @property {object} ssh The ssh key configuration for Linux VMs.
 * @property {array} [ssh.publicKeys] the list of SSH public keys used to
 * authenticate with Linux-based VMs.
 */
export interface ContainerServiceLinuxProfile {
  adminUsername: string;
  ssh: ContainerServiceSshConfiguration;
}

/**
 * @class
 * Initializes a new instance of the ContainerServiceVMDiagnostics class.
 * @constructor
 * Profile for diagnostics on the container service VMs.
 *
 * @property {boolean} enabled Whether the VM diagnostic agent is provisioned
 * on the VM.
 * @property {string} [storageUri] The URI of the storage account where
 * diagnostics are stored.
 */
export interface ContainerServiceVMDiagnostics {
  enabled: boolean;
  readonly storageUri?: string;
}

/**
 * @class
 * Initializes a new instance of the ContainerServiceDiagnosticsProfile class.
 * @constructor
 * @property {object} vmDiagnostics Profile for the container service VM
 * diagnostic agent.
 * @property {boolean} [vmDiagnostics.enabled] Whether the VM diagnostic agent
 * is provisioned on the VM.
 * @property {string} [vmDiagnostics.storageUri] The URI of the storage account
 * where diagnostics are stored.
 */
export interface ContainerServiceDiagnosticsProfile {
  vmDiagnostics: ContainerServiceVMDiagnostics;
}

/**
 * @class
 * Initializes a new instance of the ContainerService class.
 * @constructor
 * Container service.
 *
 * @property {string} [provisioningState] the current deployment or
 * provisioning state, which only appears in the response.
 * @property {object} [orchestratorProfile] Properties of the orchestrator.
 * @property {string} [orchestratorProfile.orchestratorType] The orchestrator
 * to use to manage container service cluster resources. Valid values are
 * Swarm, DCOS, and Custom. Possible values include: 'Swarm', 'DCOS', 'Custom',
 * 'Kubernetes'
 * @property {object} [customProfile] Properties for custom clusters.
 * @property {string} [customProfile.orchestrator] The name of the custom
 * orchestrator to use.
 * @property {object} [servicePrincipalProfile] Properties for cluster service
 * principals.
 * @property {string} [servicePrincipalProfile.clientId] The ID for the service
 * principal.
 * @property {string} [servicePrincipalProfile.secret] The secret password
 * associated with the service principal.
 * @property {object} masterProfile Properties of master agents.
 * @property {number} [masterProfile.count] Number of masters (VMs) in the
 * container service cluster. Allowed values are 1, 3, and 5. The default value
 * is 1.
 * @property {string} [masterProfile.dnsPrefix] DNS prefix to be used to create
 * the FQDN for master.
 * @property {string} [masterProfile.fqdn] FDQN for the master.
 * @property {array} agentPoolProfiles Properties of the agent pool.
 * @property {object} [windowsProfile] Properties of Windows VMs.
 * @property {string} [windowsProfile.adminUsername] The administrator username
 * to use for Windows VMs.
 * @property {string} [windowsProfile.adminPassword] The administrator password
 * to use for Windows VMs.
 * @property {object} linuxProfile Properties of Linux VMs.
 * @property {string} [linuxProfile.adminUsername] The administrator username
 * to use for Linux VMs.
 * @property {object} [linuxProfile.ssh] The ssh key configuration for Linux
 * VMs.
 * @property {array} [linuxProfile.ssh.publicKeys] the list of SSH public keys
 * used to authenticate with Linux-based VMs.
 * @property {object} [diagnosticsProfile] Properties of the diagnostic agent.
 * @property {object} [diagnosticsProfile.vmDiagnostics] Profile for the
 * container service VM diagnostic agent.
 * @property {boolean} [diagnosticsProfile.vmDiagnostics.enabled] Whether the
 * VM diagnostic agent is provisioned on the VM.
 * @property {string} [diagnosticsProfile.vmDiagnostics.storageUri] The URI of
 * the storage account where diagnostics are stored.
 */
export interface ContainerService extends Resource {
  readonly provisioningState?: string;
  orchestratorProfile?: ContainerServiceOrchestratorProfile;
  customProfile?: ContainerServiceCustomProfile;
  servicePrincipalProfile?: ContainerServiceServicePrincipalProfile;
  masterProfile: ContainerServiceMasterProfile;
  agentPoolProfiles: ContainerServiceAgentPoolProfile[];
  windowsProfile?: ContainerServiceWindowsProfile;
  linuxProfile: ContainerServiceLinuxProfile;
  diagnosticsProfile?: ContainerServiceDiagnosticsProfile;
}


/**
 * @class
 * Initializes a new instance of the ComputeOperationListResult class.
 * @constructor
 * The List Compute Operation operation response.
 *
 */
export interface ComputeOperationListResult extends Array<ComputeOperationValue> {
}

/**
 * @class
 * Initializes a new instance of the AvailabilitySetListResult class.
 * @constructor
 * The List Availability Set operation response.
 *
 * @property {string} [nextLink] The URI to fetch the next page of
 * AvailabilitySets. Call ListNext() with this URI to fetch the next page of
 * AvailabilitySets.
 */
export interface AvailabilitySetListResult extends Array<AvailabilitySet> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineSizeListResult class.
 * @constructor
 * The List Virtual Machine operation response.
 *
 */
export interface VirtualMachineSizeListResult extends Array<VirtualMachineSize> {
}

/**
 * @class
 * Initializes a new instance of the ListUsagesResult class.
 * @constructor
 * The List Usages operation response.
 *
 * @property {string} [nextLink] The URI to fetch the next page of compute
 * resource usage information. Call ListNext() with this to fetch the next page
 * of compute resource usage information.
 */
export interface ListUsagesResult extends Array<Usage> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineListResult class.
 * @constructor
 * The List Virtual Machine operation response.
 *
 * @property {string} [nextLink] The URI to fetch the next page of VMs. Call
 * ListNext() with this URI to fetch the next page of Virtual Machines.
 */
export interface VirtualMachineListResult extends Array<VirtualMachine> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the ImageListResult class.
 * @constructor
 * The List Image operation response.
 *
 * @property {string} [nextLink] The uri to fetch the next page of Images. Call
 * ListNext() with this to fetch the next page of Images.
 */
export interface ImageListResult extends Array<Image> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineScaleSetListResult class.
 * @constructor
 * The List Virtual Machine operation response.
 *
 * @property {string} [nextLink] The uri to fetch the next page of Virtual
 * Machine Scale Sets. Call ListNext() with this to fetch the next page of
 * VMSS.
 */
export interface VirtualMachineScaleSetListResult extends Array<VirtualMachineScaleSet> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineScaleSetListWithLinkResult class.
 * @constructor
 * The List Virtual Machine operation response.
 *
 * @property {string} [nextLink] The uri to fetch the next page of Virtual
 * Machine Scale Sets. Call ListNext() with this to fetch the next page of
 * Virtual Machine Scale Sets.
 */
export interface VirtualMachineScaleSetListWithLinkResult extends Array<VirtualMachineScaleSet> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineScaleSetListSkusResult class.
 * @constructor
 * The Virtual Machine Scale Set List Skus operation response.
 *
 * @property {string} [nextLink] The uri to fetch the next page of Virtual
 * Machine Scale Set Skus. Call ListNext() with this to fetch the next page of
 * VMSS Skus.
 */
export interface VirtualMachineScaleSetListSkusResult extends Array<VirtualMachineScaleSetSku> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineScaleSetListOSUpgradeHistory class.
 * @constructor
 * List of Virtual Machine Scale Set OS Upgrade History operation response.
 *
 * @property {string} [nextLink] The uri to fetch the next page of OS Upgrade
 * History. Call ListNext() with this to fetch the next page of history of
 * upgrades.
 */
export interface VirtualMachineScaleSetListOSUpgradeHistory extends Array<UpgradeOperationHistoricalStatusInfo> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineScaleSetExtensionListResult class.
 * @constructor
 * The List VM scale set extension operation response.
 *
 * @property {string} [nextLink] The uri to fetch the next page of VM scale set
 * extensions. Call ListNext() with this to fetch the next page of VM scale set
 * extensions.
 */
export interface VirtualMachineScaleSetExtensionListResult extends Array<VirtualMachineScaleSetExtension> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineScaleSetVMListResult class.
 * @constructor
 * The List Virtual Machine Scale Set VMs operation response.
 *
 * @property {string} [nextLink] The uri to fetch the next page of Virtual
 * Machine Scale Set VMs. Call ListNext() with this to fetch the next page of
 * VMSS VMs
 */
export interface VirtualMachineScaleSetVMListResult extends Array<VirtualMachineScaleSetVM> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the RunCommandListResult class.
 * @constructor
 * The List Virtual Machine operation response.
 *
 * @property {string} [nextLink] The uri to fetch the next page of run
 * commands. Call ListNext() with this to fetch the next page of run commands.
 */
export interface RunCommandListResult extends Array<RunCommandDocumentBase> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the ResourceSkusResult class.
 * @constructor
 * The Compute List Skus operation response.
 *
 * @property {string} [nextLink] The uri to fetch the next page of Compute
 * Skus. Call ListNext() with this to fetch the next page of VMSS Skus.
 */
export interface ResourceSkusResult extends Array<ResourceSku> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the DiskList class.
 * @constructor
 * The List Disks operation response.
 *
 * @property {string} [nextLink] The uri to fetch the next page of disks. Call
 * ListNext() with this to fetch the next page of disks.
 */
export interface DiskList extends Array<Disk> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the SnapshotList class.
 * @constructor
 * The List Snapshots operation response.
 *
 * @property {string} [nextLink] The uri to fetch the next page of snapshots.
 * Call ListNext() with this to fetch the next page of snapshots.
 */
export interface SnapshotList extends Array<Snapshot> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the GalleryList class.
 * @constructor
 * The List Galleries operation response.
 *
 * @property {string} [nextLink] The uri to fetch the next page of galleries.
 * Call ListNext() with this to fetch the next page of galleries.
 */
export interface GalleryList extends Array<Gallery> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the GalleryImageList class.
 * @constructor
 * The List Gallery Images operation response.
 *
 * @property {string} [nextLink] The uri to fetch the next page of Image
 * Definitions in the Shared Image Gallery. Call ListNext() with this to fetch
 * the next page of gallery Image Definitions.
 */
export interface GalleryImageList extends Array<GalleryImage> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the GalleryImageVersionList class.
 * @constructor
 * The List Gallery Image version operation response.
 *
 * @property {string} [nextLink] The uri to fetch the next page of gallery
 * Image Versions. Call ListNext() with this to fetch the next page of gallery
 * Image Versions.
 */
export interface GalleryImageVersionList extends Array<GalleryImageVersion> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the ContainerServiceListResult class.
 * @constructor
 * The response from the List Container Services operation.
 *
 * @property {string} [nextLink] The URL to get the next set of container
 * service results.
 */
export interface ContainerServiceListResult extends Array<ContainerService> {
  nextLink?: string;
}
