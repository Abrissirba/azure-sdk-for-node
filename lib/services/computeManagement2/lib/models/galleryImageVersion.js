/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Specifies information about the gallery image version that you want to
 * create or update.
 *
 */
class GalleryImageVersion {
  /**
   * Create a GalleryImageVersion.
   * @member {object} [publishingProfile]
   * @member {boolean} [publishingProfile.excludeFromLatest] The flag means
   * that if it is set to true, people deploying VMs with 'latest' as version
   * will not use this version.
   * @member {date} [publishingProfile.publishedDate] The time when the gallery
   * image version is published.
   * @member {date} [publishingProfile.endOfLifeDate] The end of life date of
   * the gallery image version.
   * @member {string} [provisioningState] The provisioning state, which only
   * appears in the response.
   * @member {object} [storageProfile]
   * @member {object} [storageProfile.osDiskImage]
   * @member {array} [storageProfile.dataDiskImages] A list of data disk
   * images.
   * @member {object} [replicationStatus]
   * @member {string} [replicationStatus.aggregatedState] This is the
   * aggregated replication status based on the regional replication status.
   * Possible values include: 'Unknown', 'InProgress', 'Completed', 'Failed'
   * @member {array} [replicationStatus.summary] This is a summary of
   * replication status for each region.
   */
  constructor() {
  }

  /**
   * Defines the metadata of GalleryImageVersion
   *
   * @returns {object} metadata of GalleryImageVersion
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'GalleryImageVersion',
      type: {
        name: 'Composite',
        className: 'GalleryImageVersion',
        modelProperties: {
          publishingProfile: {
            required: false,
            serializedName: 'properties.publishingProfile',
            type: {
              name: 'Composite',
              className: 'GalleryImageVersionPublishingProfile'
            }
          },
          provisioningState: {
            required: false,
            readOnly: true,
            serializedName: 'properties.provisioningState',
            type: {
              name: 'String'
            }
          },
          storageProfile: {
            required: false,
            serializedName: 'properties.storageProfile',
            type: {
              name: 'Composite',
              className: 'GalleryImageVersionStorageProfile'
            }
          },
          replicationStatus: {
            required: false,
            serializedName: 'properties.replicationStatus',
            type: {
              name: 'Composite',
              className: 'ReplicationStatus'
            }
          }
        }
      }
    };
  }
}

module.exports = GalleryImageVersion;
