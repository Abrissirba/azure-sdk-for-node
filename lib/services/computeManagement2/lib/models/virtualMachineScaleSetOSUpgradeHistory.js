/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Describes each OS upgrade on the Virtual Machine Scale Set.
 *
 */
class VirtualMachineScaleSetOSUpgradeHistory {
  /**
   * Create a VirtualMachineScaleSetOSUpgradeHistory.
   * @member {object} [runningStatus] Information about the overall status of
   * the upgrade operation.
   * @member {string} [runningStatus.code] Code indicating the current status
   * of the upgrade. Possible values include: 'RollingForward', 'Cancelled',
   * 'Completed', 'Faulted'
   * @member {date} [runningStatus.startTime] Start time of the upgrade.
   * @member {string} [runningStatus.lastAction] The last action performed on
   * the rolling upgrade. Possible values include: 'Start', 'Cancel'
   * @member {date} [runningStatus.lastActionTime] Last action time of the
   * upgrade.
   * @member {object} [progressInfo] Counts of the VM's in each state.
   * @member {number} [progressInfo.successfulInstanceCount] The number of
   * instances that have been successfully upgraded.
   * @member {number} [progressInfo.failedInstanceCount] The number of
   * instances that have failed to be upgraded successfully.
   * @member {number} [progressInfo.inProgressInstanceCount] The number of
   * instances that are currently being upgraded.
   * @member {number} [progressInfo.pendingInstanceCount] The number of
   * instances that have not yet begun to be upgraded.
   * @member {object} [error] Error Details for this upgrade if there are any.
   * @member {array} [error.details] The Api error details
   * @member {object} [error.innererror] The Api inner error
   * @member {string} [error.innererror.exceptiontype] The exception type.
   * @member {string} [error.innererror.errordetail] The internal error message
   * or exception dump.
   * @member {string} [error.code] The error code.
   * @member {string} [error.target] The target of the particular error.
   * @member {string} [error.message] The error message.
   * @member {string} [startedBy] Error Details for this upgrade if there are
   * any. Possible values include: 'Unknown', 'User', 'Platform'
   * @member {object} [targetImageReference] Error Details for this upgrade if
   * there are any.
   * @member {string} [targetImageReference.publisher] Publisher
   * @member {string} [targetImageReference.offer] Offer
   * @member {string} [targetImageReference.sku] Sku
   * @member {string} [targetImageReference.version] Version
   * @member {string} [targetImageReference.uri] Specifies the virtual hard
   * disk's uri.
   */
  constructor() {
  }

  /**
   * Defines the metadata of VirtualMachineScaleSetOSUpgradeHistory
   *
   * @returns {object} metadata of VirtualMachineScaleSetOSUpgradeHistory
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'VirtualMachineScaleSetOSUpgradeHistory',
      type: {
        name: 'Composite',
        className: 'VirtualMachineScaleSetOSUpgradeHistory',
        modelProperties: {
          runningStatus: {
            required: false,
            readOnly: true,
            serializedName: 'runningStatus',
            type: {
              name: 'Composite',
              className: 'RollingUpgradeRunningStatus'
            }
          },
          progressInfo: {
            required: false,
            readOnly: true,
            serializedName: 'progressInfo',
            type: {
              name: 'Composite',
              className: 'RollingUpgradeProgressInfo'
            }
          },
          error: {
            required: false,
            readOnly: true,
            serializedName: 'error',
            type: {
              name: 'Composite',
              className: 'ApiError'
            }
          },
          startedBy: {
            required: false,
            readOnly: true,
            serializedName: 'startedBy',
            type: {
              name: 'String'
            }
          },
          targetImageReference: {
            required: false,
            readOnly: true,
            serializedName: 'targetImageReference',
            type: {
              name: 'Composite',
              className: 'PlatformImageReference'
            }
          }
        }
      }
    };
  }
}

module.exports = VirtualMachineScaleSetOSUpgradeHistory;
