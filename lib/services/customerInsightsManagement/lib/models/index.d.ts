/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { BaseResource } from 'ms-rest-azure';
import { CloudError } from 'ms-rest-azure';
import * as moment from 'moment';

export { BaseResource } from 'ms-rest-azure';
export { CloudError } from 'ms-rest-azure';


/**
 * @class
 * Initializes a new instance of the HubBillingInfoFormat class.
 * @constructor
 * Hub billing info.
 *
 * @property {string} [skuName] The sku name.
 * @property {number} [minUnits] The minimum number of units will be billed.
 * One unit is 10,000 Profiles and 100,000 Interactions.
 * @property {number} [maxUnits] The maximum number of units can be used.  One
 * unit is 10,000 Profiles and 100,000 Interactions.
 */
export interface HubBillingInfoFormat {
  skuName?: string;
  minUnits?: number;
  maxUnits?: number;
}

/**
 * @class
 * Initializes a new instance of the Resource class.
 * @constructor
 * Common properties of Azure resource.
 *
 * @property {string} [id] Resource ID.
 * @property {string} [name] Resource name.
 * @property {string} [type] Resource type.
 * @property {string} [location] Resource location.
 * @property {object} [tags] Resource tags.
 */
export interface Resource extends BaseResource {
  readonly id?: string;
  readonly name?: string;
  readonly type?: string;
  location?: string;
  tags?: { [propertyName: string]: string };
}

/**
 * @class
 * Initializes a new instance of the Hub class.
 * @constructor
 * Hub resource.
 *
 * @property {string} [apiEndpoint] API endpoint URL of the hub.
 * @property {string} [webEndpoint] Web endpoint URL of the hub.
 * @property {string} [provisioningState] Provisioning state of the hub.
 * @property {number} [tenantFeatures] The bit flags for enabled hub features.
 * Bit 0 is set to 1 indicates graph is enabled, or disabled if set to 0. Bit 1
 * is set to 1 indicates the hub is disabled, or enabled if set to 0.
 * @property {object} [hubBillingInfo] Billing settings of the hub.
 * @property {string} [hubBillingInfo.skuName] The sku name.
 * @property {number} [hubBillingInfo.minUnits] The minimum number of units
 * will be billed. One unit is 10,000 Profiles and 100,000 Interactions.
 * @property {number} [hubBillingInfo.maxUnits] The maximum number of units can
 * be used.  One unit is 10,000 Profiles and 100,000 Interactions.
 */
export interface Hub extends Resource {
  readonly apiEndpoint?: string;
  readonly webEndpoint?: string;
  readonly provisioningState?: string;
  tenantFeatures?: number;
  hubBillingInfo?: HubBillingInfoFormat;
}

/**
 * @class
 * Initializes a new instance of the MetadataDefinitionBase class.
 * @constructor
 * The Metadata definition base.
 *
 * @property {object} [attributes] The attributes for the Type.
 * @property {object} [description] Localized descriptions for the property.
 * @property {object} [displayName] Localized display names for the property.
 * @property {object} [localizedAttributes] Any custom localized attributes for
 * the Type.
 * @property {string} [smallImage] Small Image associated with the Property or
 * EntityType.
 * @property {string} [mediumImage] Medium Image associated with the Property
 * or EntityType.
 * @property {string} [largeImage] Large Image associated with the Property or
 * EntityType.
 */
export interface MetadataDefinitionBase {
  attributes?: { [propertyName: string]: string[] };
  description?: { [propertyName: string]: string };
  displayName?: { [propertyName: string]: string };
  localizedAttributes?: { [propertyName: string]: { [propertyName: string]: string } };
  smallImage?: string;
  mediumImage?: string;
  largeImage?: string;
}

/**
 * @class
 * Initializes a new instance of the ProfileEnumValidValuesFormat class.
 * @constructor
 * Valid enum values in case of an enum property.
 *
 * @property {number} [value] The integer value of the enum member.
 * @property {object} [localizedValueNames] Localized names of the enum member.
 */
export interface ProfileEnumValidValuesFormat {
  value?: number;
  localizedValueNames?: { [propertyName: string]: string };
}

/**
 * @class
 * Initializes a new instance of the DataSourcePrecedence class.
 * @constructor
 * The data source precedence is a way to know the precedence of each data
 * source.
 *
 * @property {string} [name] The data source name
 * @property {string} [dataSourceType] The data source type. Possible values
 * include: 'Connector', 'LinkInteraction', 'SystemDefault'
 * @property {string} [status] The data source status. Possible values include:
 * 'None', 'Active', 'Deleted'
 * @property {number} [id] The data source ID.
 * @property {string} [dataSourceReferenceId] The data source reference id.
 * @property {number} [precedence] the precedence value.
 */
export interface DataSourcePrecedence {
  readonly name?: string;
  readonly dataSourceType?: string;
  readonly status?: string;
  readonly id?: number;
  readonly dataSourceReferenceId?: string;
  precedence?: number;
}

/**
 * @class
 * Initializes a new instance of the PropertyDefinition class.
 * @constructor
 * Property definition.
 *
 * @property {string} [arrayValueSeparator] Array value separator for
 * properties with isArray set.
 * @property {array} [enumValidValues] Describes valid values for an enum
 * property.
 * @property {string} fieldName Name of the property.
 * @property {string} fieldType Type of the property.
 * @property {boolean} [isArray] Indicates if the property is actually an array
 * of the fieldType above on the data api.
 * @property {boolean} [isEnum] Indicates if the property is an enum.
 * @property {boolean} [isFlagEnum] Indicates if the property is an flag enum.
 * @property {boolean} [isImage] Whether the property is an Image.
 * @property {boolean} [isLocalizedString] Whether the property is a localized
 * string.
 * @property {boolean} [isName] Whether the property is a name or a part of
 * name.
 * @property {boolean} [isRequired] Whether property value is required on
 * instances, IsRequired field only for Intercation. Profile Instance will not
 * check for required field.
 * @property {string} [propertyId] The ID associated with the property.
 * @property {string} [schemaItemPropLink] URL encoded schema.org item prop
 * link for the property.
 * @property {number} [maxLength] Max length of string. Used only if type is
 * string.
 * @property {boolean} [isAvailableInGraph] Whether property is available in
 * graph or not.
 * @property {array} [dataSourcePrecedenceRules] This is specific to
 * interactions modeled as activities. Data sources are used to determine where
 * data is stored and also in precedence rules.
 */
export interface PropertyDefinition {
  arrayValueSeparator?: string;
  enumValidValues?: ProfileEnumValidValuesFormat[];
  fieldName: string;
  fieldType: string;
  isArray?: boolean;
  isEnum?: boolean;
  isFlagEnum?: boolean;
  isImage?: boolean;
  isLocalizedString?: boolean;
  isName?: boolean;
  isRequired?: boolean;
  propertyId?: string;
  schemaItemPropLink?: string;
  maxLength?: number;
  isAvailableInGraph?: boolean;
  readonly dataSourcePrecedenceRules?: DataSourcePrecedence[];
}

/**
 * @class
 * Initializes a new instance of the EntityTypeDefinition class.
 * @constructor
 * Describes an entity.
 *
 * @property {string} [apiEntitySetName] The api entity set name. This becomes
 * the odata entity set name for the entity Type being refered in this object.
 * @property {string} [entityType] Type of entity. Possible values include:
 * 'None', 'Profile', 'Interaction', 'Relationship'
 * @property {array} [fields] The properties of the Profile.
 * @property {number} [instancesCount] The instance count.
 * @property {date} [lastChangedUtc] The last changed time for the type
 * definition.
 * @property {string} [provisioningState] Provisioning state. Possible values
 * include: 'Provisioning', 'Succeeded', 'Expiring', 'Deleting',
 * 'HumanIntervention', 'Failed'
 * @property {string} [schemaItemTypeLink] The schema org link. This helps ACI
 * identify and suggest semantic models.
 * @property {string} [tenantId] The hub name.
 * @property {string} [timestampFieldName] The timestamp property name.
 * Represents the time when the interaction or profile update happened.
 * @property {string} [typeName] The name of the entity.
 */
export interface EntityTypeDefinition extends MetadataDefinitionBase {
  apiEntitySetName?: string;
  entityType?: string;
  fields?: PropertyDefinition[];
  instancesCount?: number;
  readonly lastChangedUtc?: Date;
  readonly provisioningState?: string;
  schemaItemTypeLink?: string;
  readonly tenantId?: string;
  timestampFieldName?: string;
  typeName?: string;
}

/**
 * @class
 * Initializes a new instance of the AuthorizationPolicy class.
 * @constructor
 * The authorization policy.
 *
 * @property {string} [policyName] Name of the policy.
 * @property {array} permissions The permissions associated with the policy.
 * @property {string} [primaryKey] Primary key assiciated with the policy.
 * @property {string} [secondaryKey] Secondary key assiciated with the policy.
 */
export interface AuthorizationPolicy {
  readonly policyName?: string;
  permissions: string[];
  primaryKey?: string;
  secondaryKey?: string;
}

/**
 * @class
 * Initializes a new instance of the SalesforceDiscoverSetting class.
 * @constructor
 * Salesforce discover setting.
 *
 * @property {string} salesforceConnectionStringSecretUrl The salesforce
 * connection string secret URL.
 */
export interface SalesforceDiscoverSetting {
  salesforceConnectionStringSecretUrl: string;
}

/**
 * @class
 * Initializes a new instance of the SalesforceTable class.
 * @constructor
 * Salesforce table.
 *
 * @property {string} [isProfile] Indicating whether this instance is profile.
 * @property {string} tableCategory The table category.
 * @property {string} tableName The name of the table.
 * @property {string} [tableRemarks] The table remarks.
 * @property {string} tableSchema The table schema.
 */
export interface SalesforceTable {
  isProfile?: string;
  tableCategory: string;
  tableName: string;
  tableRemarks?: string;
  tableSchema: string;
}

/**
 * @class
 * Initializes a new instance of the SalesforceConnectorProperties class.
 * @constructor
 * The Salesforce connector properties.
 *
 * @property {object} usersetting The user settings.
 * @property {string} [usersetting.salesforceConnectionStringSecretUrl] The
 * salesforce connection string secret URL.
 * @property {array} salesforcetables The Salesforce tables.
 */
export interface SalesforceConnectorProperties {
  usersetting: SalesforceDiscoverSetting;
  salesforcetables: SalesforceTable[];
}

/**
 * @class
 * Initializes a new instance of the AzureBlobConnectorProperties class.
 * @constructor
 * The Azure Blob connector properties.
 *
 * @property {string} connectionKeyVaultUrl The connection KeyVault URL.
 */
export interface AzureBlobConnectorProperties {
  connectionKeyVaultUrl: string;
}

/**
 * @class
 * Initializes a new instance of the CrmConnectorEntities class.
 * @constructor
 * The CRM connector entities.
 *
 * @property {string} logicalName The logical name.
 * @property {string} [displayName] The display name.
 * @property {boolean} [isProfile] Indicating whether this is profile.
 */
export interface CrmConnectorEntities {
  logicalName: string;
  displayName?: string;
  isProfile?: boolean;
}

/**
 * @class
 * Initializes a new instance of the CrmConnectorProperties class.
 * @constructor
 * The CRM connector properties.
 *
 * @property {string} [connectionString] The connection string.
 * @property {string} organizationId The organization ID.
 * @property {string} organizationUrl The organization URL.
 * @property {array} entities The entities like account, contact, opportunity.
 * @property {string} [accessToken] The access token.
 */
export interface CrmConnectorProperties {
  connectionString?: string;
  organizationId: string;
  organizationUrl: string;
  entities: CrmConnectorEntities[];
  accessToken?: string;
}

/**
 * @class
 * Initializes a new instance of the ConnectorMappingErrorManagement class.
 * @constructor
 * The error mangement.
 *
 * @property {string} errorManagementType The type of error management to use
 * for the mapping. Possible values include: 'RejectAndContinue', 'StopImport',
 * 'RejectUntilLimit'
 * @property {number} [errorLimit] The error limit allowed while importing
 * data.
 */
export interface ConnectorMappingErrorManagement {
  errorManagementType: string;
  errorLimit?: number;
}

/**
 * @class
 * Initializes a new instance of the ConnectorMappingFormat class.
 * @constructor
 * Connector mapping property format.
 *
 * @property {string} [columnDelimiter] The character that signifies a break
 * between columns.
 * @property {string} [acceptLanguage] The oData language.
 * @property {string} [quoteCharacter] Quote character, used to indicate
 * enquoted fields.
 * @property {string} [quoteEscapeCharacter] Escape character for quotes, can
 * be the same as the quoteCharacter.
 * @property {string} [arraySeparator] Character separating array elements.
 */
export interface ConnectorMappingFormat {
  columnDelimiter?: string;
  acceptLanguage?: string;
  quoteCharacter?: string;
  quoteEscapeCharacter?: string;
  arraySeparator?: string;
}

/**
 * @class
 * Initializes a new instance of the ConnectorMappingAvailability class.
 * @constructor
 * Connector mapping property availability.
 *
 * @property {string} [frequency] The frequency to update. Possible values
 * include: 'Minute', 'Hour', 'Day', 'Week', 'Month'
 * @property {number} interval The interval of the given frequency to use.
 */
export interface ConnectorMappingAvailability {
  frequency?: string;
  interval: number;
}

/**
 * @class
 * Initializes a new instance of the ConnectorMappingStructure class.
 * @constructor
 * Connector mapping property structure.
 *
 * @property {string} propertyName The property name of the mapping entity.
 * @property {string} columnName The column name of the import file.
 * @property {string} [customFormatSpecifier] Custom format specifier for input
 * parsing.
 * @property {boolean} [isEncrypted] Indicates if the column is encrypted.
 */
export interface ConnectorMappingStructure {
  propertyName: string;
  columnName: string;
  customFormatSpecifier?: string;
  isEncrypted?: boolean;
}

/**
 * @class
 * Initializes a new instance of the ConnectorMappingCompleteOperation class.
 * @constructor
 * The complete operation.
 *
 * @property {string} [completionOperationType] The type of completion
 * operation. Possible values include: 'DoNothing', 'DeleteFile', 'MoveFile'
 * @property {string} [destinationFolder] The destination folder where files
 * will be moved to once the import is done.
 */
export interface ConnectorMappingCompleteOperation {
  completionOperationType?: string;
  destinationFolder?: string;
}

/**
 * @class
 * Initializes a new instance of the ConnectorMappingProperties class.
 * @constructor
 * The connector mapping properties.
 *
 * @property {string} [folderPath] The folder path for the mapping.
 * @property {string} [fileFilter] The file filter for the mapping.
 * @property {boolean} [hasHeader] If the file contains a header or not.
 * @property {object} errorManagement The error management setting for the
 * mapping.
 * @property {string} [errorManagement.errorManagementType] The type of error
 * management to use for the mapping. Possible values include:
 * 'RejectAndContinue', 'StopImport', 'RejectUntilLimit'
 * @property {number} [errorManagement.errorLimit] The error limit allowed
 * while importing data.
 * @property {object} format The format of mapping property.
 * @property {string} [format.columnDelimiter] The character that signifies a
 * break between columns.
 * @property {string} [format.acceptLanguage] The oData language.
 * @property {string} [format.quoteCharacter] Quote character, used to indicate
 * enquoted fields.
 * @property {string} [format.quoteEscapeCharacter] Escape character for
 * quotes, can be the same as the quoteCharacter.
 * @property {string} [format.arraySeparator] Character separating array
 * elements.
 * @property {object} availability The availability of mapping property.
 * @property {string} [availability.frequency] The frequency to update.
 * Possible values include: 'Minute', 'Hour', 'Day', 'Week', 'Month'
 * @property {number} [availability.interval] The interval of the given
 * frequency to use.
 * @property {array} structure Ingestion mapping information at property level.
 * @property {object} completeOperation The operation after import is done.
 * @property {string} [completeOperation.completionOperationType] The type of
 * completion operation. Possible values include: 'DoNothing', 'DeleteFile',
 * 'MoveFile'
 * @property {string} [completeOperation.destinationFolder] The destination
 * folder where files will be moved to once the import is done.
 */
export interface ConnectorMappingProperties {
  folderPath?: string;
  fileFilter?: string;
  hasHeader?: boolean;
  errorManagement: ConnectorMappingErrorManagement;
  format: ConnectorMappingFormat;
  availability: ConnectorMappingAvailability;
  structure: ConnectorMappingStructure[];
  completeOperation: ConnectorMappingCompleteOperation;
}

/**
 * @class
 * Initializes a new instance of the KpiThresholds class.
 * @constructor
 * Defines the KPI Threshold limits.
 *
 * @property {number} lowerLimit The lower threshold limit.
 * @property {number} upperLimit The upper threshold limit.
 * @property {boolean} increasingKpi Whether or not the KPI is an increasing
 * KPI.
 */
export interface KpiThresholds {
  lowerLimit: number;
  upperLimit: number;
  increasingKpi: boolean;
}

/**
 * @class
 * Initializes a new instance of the KpiGroupByMetadata class.
 * @constructor
 * The KPI GroupBy field metadata.
 *
 * @property {object} [displayName] The display name.
 * @property {string} [fieldName] The name of the field.
 * @property {string} [fieldType] The type of the field.
 */
export interface KpiGroupByMetadata {
  displayName?: { [propertyName: string]: string };
  fieldName?: string;
  fieldType?: string;
}

/**
 * @class
 * Initializes a new instance of the KpiParticipantProfilesMetadata class.
 * @constructor
 * The KPI participant profile metadata.
 *
 * @property {string} typeName Name of the type.
 */
export interface KpiParticipantProfilesMetadata {
  typeName: string;
}

/**
 * @class
 * Initializes a new instance of the KpiAlias class.
 * @constructor
 * The KPI alias.
 *
 * @property {string} aliasName KPI alias name.
 * @property {string} expression The expression.
 */
export interface KpiAlias {
  aliasName: string;
  expression: string;
}

/**
 * @class
 * Initializes a new instance of the KpiExtract class.
 * @constructor
 * The KPI extract.
 *
 * @property {string} extractName KPI extract name.
 * @property {string} expression The expression.
 */
export interface KpiExtract {
  extractName: string;
  expression: string;
}

/**
 * @class
 * Initializes a new instance of the KpiDefinition class.
 * @constructor
 * Defines the KPI Threshold limits.
 *
 * @property {string} entityType The mapping entity type. Possible values
 * include: 'None', 'Profile', 'Interaction', 'Relationship'
 * @property {string} entityTypeName The mapping entity name.
 * @property {string} [tenantId] The hub name.
 * @property {string} [kpiName] The KPI name.
 * @property {object} [displayName] Localized display name for the KPI.
 * @property {object} [description] Localized description for the KPI.
 * @property {string} calculationWindow The calculation window. Possible values
 * include: 'Lifetime', 'Hour', 'Day', 'Week', 'Month'
 * @property {string} [calculationWindowFieldName] Name of calculation window
 * field.
 * @property {string} functionProperty The computation function for the KPI.
 * Possible values include: 'Sum', 'Avg', 'Min', 'Max', 'Last', 'Count',
 * 'None', 'CountDistinct'
 * @property {string} expression The computation expression for the KPI.
 * @property {string} [unit] The unit of measurement for the KPI.
 * @property {string} [filter] The filter expression for the KPI.
 * @property {array} [groupBy] the group by properties for the KPI.
 * @property {array} [groupByMetadata] The KPI GroupByMetadata.
 * @property {array} [participantProfilesMetadata] The participant profiles.
 * @property {string} [provisioningState] Provisioning state. Possible values
 * include: 'Provisioning', 'Succeeded', 'Expiring', 'Deleting',
 * 'HumanIntervention', 'Failed'
 * @property {object} [thresHolds] The KPI thresholds.
 * @property {number} [thresHolds.lowerLimit] The lower threshold limit.
 * @property {number} [thresHolds.upperLimit] The upper threshold limit.
 * @property {boolean} [thresHolds.increasingKpi] Whether or not the KPI is an
 * increasing KPI.
 * @property {array} [aliases] The aliases.
 * @property {array} [extracts] The KPI extracts.
 */
export interface KpiDefinition {
  entityType: string;
  entityTypeName: string;
  readonly tenantId?: string;
  readonly kpiName?: string;
  displayName?: { [propertyName: string]: string };
  description?: { [propertyName: string]: string };
  calculationWindow: string;
  calculationWindowFieldName?: string;
  functionProperty: string;
  expression: string;
  unit?: string;
  filter?: string;
  groupBy?: string[];
  readonly groupByMetadata?: KpiGroupByMetadata[];
  readonly participantProfilesMetadata?: KpiParticipantProfilesMetadata[];
  readonly provisioningState?: string;
  thresHolds?: KpiThresholds;
  aliases?: KpiAlias[];
  extracts?: KpiExtract[];
}

/**
 * @class
 * Initializes a new instance of the ProxyResource class.
 * @constructor
 * Common properties of proxy resource.
 *
 * @property {string} [id] Resource ID.
 * @property {string} [name] Resource name.
 * @property {string} [type] Resource type.
 */
export interface ProxyResource extends BaseResource {
  readonly id?: string;
  readonly name?: string;
  readonly type?: string;
}

/**
 * @class
 * Initializes a new instance of the TypePropertiesMapping class.
 * @constructor
 * Metadata for a Link's property mapping.
 *
 * @property {string} sourcePropertyName Property name on the source Entity
 * Type.
 * @property {string} targetPropertyName Property name on the target Entity
 * Type.
 * @property {string} [linkType] Link type. Possible values include:
 * 'UpdateAlways', 'CopyIfNull'
 */
export interface TypePropertiesMapping {
  sourcePropertyName: string;
  targetPropertyName: string;
  linkType?: string;
}

/**
 * @class
 * Initializes a new instance of the ParticipantPropertyReference class.
 * @constructor
 * The participant property reference.
 *
 * @property {string} sourcePropertyName The source property that maps to the
 * target property.
 * @property {string} targetPropertyName The target property that maps to the
 * source property.
 */
export interface ParticipantPropertyReference {
  sourcePropertyName: string;
  targetPropertyName: string;
}

/**
 * @class
 * Initializes a new instance of the RelationshipTypeFieldMapping class.
 * @constructor
 * Map a field of profile to its corresponding StrongId in Related Profile.
 *
 * @property {string} profileFieldName Specifies the fieldName in profile.
 * @property {string} relatedProfileKeyProperty Specifies the KeyProperty (from
 * StrongId) of the related profile.
 */
export interface RelationshipTypeFieldMapping {
  profileFieldName: string;
  relatedProfileKeyProperty: string;
}

/**
 * @class
 * Initializes a new instance of the RelationshipTypeMapping class.
 * @constructor
 * Maps fields in Profile to their corresponding StrongIds in Related Profile.
 *
 * @property {array} fieldMappings Maps a profile property with the StrongId of
 * related profile. This is an array to support StrongIds that are composite
 * key as well.
 */
export interface RelationshipTypeMapping {
  fieldMappings: RelationshipTypeFieldMapping[];
}

/**
 * @class
 * Initializes a new instance of the RelationshipLinkFieldMapping class.
 * @constructor
 * The fields mapping for Relationships.
 *
 * @property {string} interactionFieldName The field name on the Interaction
 * Type.
 * @property {string} [linkType] Link type. Possible values include:
 * 'UpdateAlways', 'CopyIfNull'
 * @property {string} relationshipFieldName The field name on the Relationship
 * metadata.
 */
export interface RelationshipLinkFieldMapping {
  interactionFieldName: string;
  linkType?: string;
  relationshipFieldName: string;
}

/**
 * @class
 * Initializes a new instance of the ParticipantProfilePropertyReference class.
 * @constructor
 * The participant profile property reference.
 *
 * @property {string} interactionPropertyName The source interaction property
 * that maps to the target profile property.
 * @property {string} profilePropertyName The target profile property that maps
 * to the source interaction property.
 */
export interface ParticipantProfilePropertyReference {
  interactionPropertyName: string;
  profilePropertyName: string;
}

/**
 * @class
 * Initializes a new instance of the Participant class.
 * @constructor
 * Describes a profile type participating in an interaction.
 *
 * @property {string} profileTypeName Profile type name.
 * @property {array} participantPropertyReferences The property references.
 * @property {string} participantName Participant name.
 * @property {object} [displayName] Localized display name.
 * @property {object} [description] Localized descriptions.
 * @property {string} [role] The role that the participant is playing in the
 * interaction.
 */
export interface Participant {
  profileTypeName: string;
  participantPropertyReferences: ParticipantPropertyReference[];
  participantName: string;
  displayName?: { [propertyName: string]: string };
  description?: { [propertyName: string]: string };
  role?: string;
}

/**
 * @class
 * Initializes a new instance of the StrongId class.
 * @constructor
 * Property/Properties which represent a unique ID.
 *
 * @property {array} keyPropertyNames The properties which make up the unique
 * ID.
 * @property {string} strongIdName The Name identifying the strong ID.
 * @property {object} [displayName] Localized display name.
 * @property {object} [description] Localized descriptions.
 */
export interface StrongId {
  keyPropertyNames: string[];
  strongIdName: string;
  displayName?: { [propertyName: string]: string };
  description?: { [propertyName: string]: string };
}

/**
 * @class
 * Initializes a new instance of the ProfileResourceFormat class.
 * @constructor
 * The profile resource format.
 *
 * @property {object} [attributes] The attributes for the Type.
 * @property {object} [description] Localized descriptions for the property.
 * @property {object} [displayName] Localized display names for the property.
 * @property {object} [localizedAttributes] Any custom localized attributes for
 * the Type.
 * @property {string} [smallImage] Small Image associated with the Property or
 * EntityType.
 * @property {string} [mediumImage] Medium Image associated with the Property
 * or EntityType.
 * @property {string} [largeImage] Large Image associated with the Property or
 * EntityType.
 * @property {string} [apiEntitySetName] The api entity set name. This becomes
 * the odata entity set name for the entity Type being refered in this object.
 * @property {string} [entityType] Type of entity. Possible values include:
 * 'None', 'Profile', 'Interaction', 'Relationship'
 * @property {array} [fields] The properties of the Profile.
 * @property {number} [instancesCount] The instance count.
 * @property {date} [lastChangedUtc] The last changed time for the type
 * definition.
 * @property {string} [provisioningState] Provisioning state. Possible values
 * include: 'Provisioning', 'Succeeded', 'Expiring', 'Deleting',
 * 'HumanIntervention', 'Failed'
 * @property {string} [schemaItemTypeLink] The schema org link. This helps ACI
 * identify and suggest semantic models.
 * @property {string} [tenantId] The hub name.
 * @property {string} [timestampFieldName] The timestamp property name.
 * Represents the time when the interaction or profile update happened.
 * @property {string} [typeName] The name of the entity.
 * @property {array} [strongIds] The strong IDs.
 */
export interface ProfileResourceFormat extends ProxyResource {
  attributes?: { [propertyName: string]: string[] };
  description?: { [propertyName: string]: string };
  displayName?: { [propertyName: string]: string };
  localizedAttributes?: { [propertyName: string]: { [propertyName: string]: string } };
  smallImage?: string;
  mediumImage?: string;
  largeImage?: string;
  apiEntitySetName?: string;
  entityType?: string;
  fields?: PropertyDefinition[];
  instancesCount?: number;
  readonly lastChangedUtc?: Date;
  readonly provisioningState?: string;
  schemaItemTypeLink?: string;
  readonly tenantId?: string;
  timestampFieldName?: string;
  typeName?: string;
  strongIds?: StrongId[];
}

/**
 * @class
 * Initializes a new instance of the InteractionResourceFormat class.
 * @constructor
 * The interaction resource format.
 *
 * @property {object} [attributes] The attributes for the Type.
 * @property {object} [description] Localized descriptions for the property.
 * @property {object} [displayName] Localized display names for the property.
 * @property {object} [localizedAttributes] Any custom localized attributes for
 * the Type.
 * @property {string} [smallImage] Small Image associated with the Property or
 * EntityType.
 * @property {string} [mediumImage] Medium Image associated with the Property
 * or EntityType.
 * @property {string} [largeImage] Large Image associated with the Property or
 * EntityType.
 * @property {string} [apiEntitySetName] The api entity set name. This becomes
 * the odata entity set name for the entity Type being refered in this object.
 * @property {string} [entityType] Type of entity. Possible values include:
 * 'None', 'Profile', 'Interaction', 'Relationship'
 * @property {array} [fields] The properties of the Profile.
 * @property {number} [instancesCount] The instance count.
 * @property {date} [lastChangedUtc] The last changed time for the type
 * definition.
 * @property {string} [provisioningState] Provisioning state. Possible values
 * include: 'Provisioning', 'Succeeded', 'Expiring', 'Deleting',
 * 'HumanIntervention', 'Failed'
 * @property {string} [schemaItemTypeLink] The schema org link. This helps ACI
 * identify and suggest semantic models.
 * @property {string} [tenantId] The hub name.
 * @property {string} [timestampFieldName] The timestamp property name.
 * Represents the time when the interaction or profile update happened.
 * @property {string} [typeName] The name of the entity.
 * @property {array} [idPropertyNames] The id property names. Properties which
 * uniquely identify an interaction instance.
 * @property {array} [participantProfiles] Profiles that participated in the
 * interaction.
 * @property {string} [primaryParticipantProfilePropertyName] The primary
 * participant property name for an interaction ,This is used to logically
 * represent the agent of the interaction, Specify the participant name here
 * from ParticipantName.
 * @property {array} [dataSourcePrecedenceRules] This is specific to
 * interactions modeled as activities. Data sources are used to determine where
 * data is stored and also in precedence rules.
 * @property {string} [interactionResourceFormatName] The data source name
 * @property {string} [dataSourceType] The data source type. Possible values
 * include: 'Connector', 'LinkInteraction', 'SystemDefault'
 * @property {string} [status] The data source status. Possible values include:
 * 'None', 'Active', 'Deleted'
 * @property {number} [interactionResourceFormatId] The data source ID.
 * @property {string} [dataSourceReferenceId] The data source reference id.
 * @property {boolean} [isActivity] An interaction can be tagged as an activity
 * only during create. This enables the interaction to be editable and can
 * enable merging of properties from multiple data sources based on precedence,
 * which is defined at a link level.
 */
export interface InteractionResourceFormat extends ProxyResource {
  attributes?: { [propertyName: string]: string[] };
  description?: { [propertyName: string]: string };
  displayName?: { [propertyName: string]: string };
  localizedAttributes?: { [propertyName: string]: { [propertyName: string]: string } };
  smallImage?: string;
  mediumImage?: string;
  largeImage?: string;
  apiEntitySetName?: string;
  entityType?: string;
  fields?: PropertyDefinition[];
  instancesCount?: number;
  readonly lastChangedUtc?: Date;
  readonly provisioningState?: string;
  schemaItemTypeLink?: string;
  readonly tenantId?: string;
  timestampFieldName?: string;
  typeName?: string;
  idPropertyNames?: string[];
  participantProfiles?: Participant[];
  primaryParticipantProfilePropertyName?: string;
  readonly dataSourcePrecedenceRules?: DataSourcePrecedence[];
  readonly interactionResourceFormatName?: string;
  readonly dataSourceType?: string;
  readonly status?: string;
  readonly interactionResourceFormatId?: number;
  readonly dataSourceReferenceId?: string;
  isActivity?: boolean;
}

/**
 * @class
 * Initializes a new instance of the KpiResourceFormat class.
 * @constructor
 * The KPI resource format.
 *
 * @property {string} entityType The mapping entity type. Possible values
 * include: 'None', 'Profile', 'Interaction', 'Relationship'
 * @property {string} entityTypeName The mapping entity name.
 * @property {string} [tenantId] The hub name.
 * @property {string} [kpiName] The KPI name.
 * @property {object} [displayName] Localized display name for the KPI.
 * @property {object} [description] Localized description for the KPI.
 * @property {string} calculationWindow The calculation window. Possible values
 * include: 'Lifetime', 'Hour', 'Day', 'Week', 'Month'
 * @property {string} [calculationWindowFieldName] Name of calculation window
 * field.
 * @property {string} functionProperty The computation function for the KPI.
 * Possible values include: 'Sum', 'Avg', 'Min', 'Max', 'Last', 'Count',
 * 'None', 'CountDistinct'
 * @property {string} expression The computation expression for the KPI.
 * @property {string} [unit] The unit of measurement for the KPI.
 * @property {string} [filter] The filter expression for the KPI.
 * @property {array} [groupBy] the group by properties for the KPI.
 * @property {array} [groupByMetadata] The KPI GroupByMetadata.
 * @property {array} [participantProfilesMetadata] The participant profiles.
 * @property {string} [provisioningState] Provisioning state. Possible values
 * include: 'Provisioning', 'Succeeded', 'Expiring', 'Deleting',
 * 'HumanIntervention', 'Failed'
 * @property {object} [thresHolds] The KPI thresholds.
 * @property {number} [thresHolds.lowerLimit] The lower threshold limit.
 * @property {number} [thresHolds.upperLimit] The upper threshold limit.
 * @property {boolean} [thresHolds.increasingKpi] Whether or not the KPI is an
 * increasing KPI.
 * @property {array} [aliases] The aliases.
 * @property {array} [extracts] The KPI extracts.
 */
export interface KpiResourceFormat extends ProxyResource {
  entityType: string;
  entityTypeName: string;
  readonly tenantId?: string;
  readonly kpiName?: string;
  displayName?: { [propertyName: string]: string };
  description?: { [propertyName: string]: string };
  calculationWindow: string;
  calculationWindowFieldName?: string;
  functionProperty: string;
  expression: string;
  unit?: string;
  filter?: string;
  groupBy?: string[];
  readonly groupByMetadata?: KpiGroupByMetadata[];
  readonly participantProfilesMetadata?: KpiParticipantProfilesMetadata[];
  readonly provisioningState?: string;
  thresHolds?: KpiThresholds;
  aliases?: KpiAlias[];
  extracts?: KpiExtract[];
}

/**
 * @class
 * Initializes a new instance of the EnrichingKpi class.
 * @constructor
 * The enriching KPI definition.
 *
 */
export interface EnrichingKpi extends KpiDefinition {
}

/**
 * @class
 * Initializes a new instance of the ConnectorResourceFormat class.
 * @constructor
 * The connector resource format.
 *
 * @property {number} [connectorId] ID of the connector.
 * @property {string} [connectorName] Name of the connector.
 * @property {string} connectorType Type of connector. Possible values include:
 * 'None', 'CRM', 'AzureBlob', 'Salesforce', 'ExchangeOnline', 'Outbound'
 * @property {string} [displayName] Display name of the connector.
 * @property {string} [description] Description of the connector.
 * @property {object} connectorProperties The connector properties.
 * @property {date} [created] The created time.
 * @property {date} [lastModified] The last monified time.
 * @property {string} [state] State of connector. Possible values include:
 * 'Creating', 'Created', 'Ready', 'Expiring', 'Deleting', 'Failed'
 * @property {string} [tenantId] The hub name.
 * @property {boolean} [isInternal] If this is an internal connector.
 */
export interface ConnectorResourceFormat extends ProxyResource {
  readonly connectorId?: number;
  connectorName?: string;
  connectorType: string;
  displayName?: string;
  description?: string;
  connectorProperties: { [propertyName: string]: any };
  readonly created?: Date;
  readonly lastModified?: Date;
  readonly state?: string;
  readonly tenantId?: string;
  isInternal?: boolean;
}

/**
 * @class
 * Initializes a new instance of the ConnectorMappingResourceFormat class.
 * @constructor
 * The c onnector mapping resource format.
 *
 * @property {string} [connectorName] The connector name.
 * @property {string} [connectorType] Type of connector. Possible values
 * include: 'None', 'CRM', 'AzureBlob', 'Salesforce', 'ExchangeOnline',
 * 'Outbound'
 * @property {date} [created] The created time.
 * @property {date} [lastModified] The last monified time.
 * @property {string} entityType Defines which entity type the file should map
 * to. Possible values include: 'None', 'Profile', 'Interaction',
 * 'Relationship'
 * @property {string} entityTypeName The mapping entity name.
 * @property {string} [connectorMappingName] The connector mapping name
 * @property {string} [displayName] Display name for the connector mapping.
 * @property {string} [description] The description of the connector mapping.
 * @property {string} [dataFormatId] The DataFormat ID.
 * @property {object} mappingProperties The properties of the mapping.
 * @property {string} [mappingProperties.folderPath] The folder path for the
 * mapping.
 * @property {string} [mappingProperties.fileFilter] The file filter for the
 * mapping.
 * @property {boolean} [mappingProperties.hasHeader] If the file contains a
 * header or not.
 * @property {object} [mappingProperties.errorManagement] The error management
 * setting for the mapping.
 * @property {string} [mappingProperties.errorManagement.errorManagementType]
 * The type of error management to use for the mapping. Possible values
 * include: 'RejectAndContinue', 'StopImport', 'RejectUntilLimit'
 * @property {number} [mappingProperties.errorManagement.errorLimit] The error
 * limit allowed while importing data.
 * @property {object} [mappingProperties.format] The format of mapping
 * property.
 * @property {string} [mappingProperties.format.columnDelimiter] The character
 * that signifies a break between columns.
 * @property {string} [mappingProperties.format.acceptLanguage] The oData
 * language.
 * @property {string} [mappingProperties.format.quoteCharacter] Quote
 * character, used to indicate enquoted fields.
 * @property {string} [mappingProperties.format.quoteEscapeCharacter] Escape
 * character for quotes, can be the same as the quoteCharacter.
 * @property {string} [mappingProperties.format.arraySeparator] Character
 * separating array elements.
 * @property {object} [mappingProperties.availability] The availability of
 * mapping property.
 * @property {string} [mappingProperties.availability.frequency] The frequency
 * to update. Possible values include: 'Minute', 'Hour', 'Day', 'Week', 'Month'
 * @property {number} [mappingProperties.availability.interval] The interval of
 * the given frequency to use.
 * @property {array} [mappingProperties.structure] Ingestion mapping
 * information at property level.
 * @property {object} [mappingProperties.completeOperation] The operation after
 * import is done.
 * @property {string}
 * [mappingProperties.completeOperation.completionOperationType] The type of
 * completion operation. Possible values include: 'DoNothing', 'DeleteFile',
 * 'MoveFile'
 * @property {string} [mappingProperties.completeOperation.destinationFolder]
 * The destination folder where files will be moved to once the import is done.
 * @property {date} [nextRunTime] The next run time based on customer's
 * settings.
 * @property {string} [runId] The RunId.
 * @property {string} [state] State of connector mapping. Possible values
 * include: 'Creating', 'Created', 'Failed', 'Ready', 'Running', 'Stopped',
 * 'Expiring'
 * @property {string} [tenantId] The hub name.
 */
export interface ConnectorMappingResourceFormat extends ProxyResource {
  readonly connectorName?: string;
  connectorType?: string;
  readonly created?: Date;
  readonly lastModified?: Date;
  entityType: string;
  entityTypeName: string;
  readonly connectorMappingName?: string;
  displayName?: string;
  description?: string;
  readonly dataFormatId?: string;
  mappingProperties: ConnectorMappingProperties;
  readonly nextRunTime?: Date;
  readonly runId?: string;
  readonly state?: string;
  readonly tenantId?: string;
}

/**
 * @class
 * Initializes a new instance of the AuthorizationPolicyResourceFormat class.
 * @constructor
 * The authorization policy resource format.
 *
 * @property {string} [policyName] Name of the policy.
 * @property {array} permissions The permissions associated with the policy.
 * @property {string} [primaryKey] Primary key assiciated with the policy.
 * @property {string} [secondaryKey] Secondary key assiciated with the policy.
 */
export interface AuthorizationPolicyResourceFormat extends ProxyResource {
  readonly policyName?: string;
  permissions: string[];
  primaryKey?: string;
  secondaryKey?: string;
}

/**
 * @class
 * Initializes a new instance of the LinkResourceFormat class.
 * @constructor
 * The link resource format.
 *
 * @property {string} [tenantId] The hub name.
 * @property {string} [linkName] The link name.
 * @property {string} sourceEntityType Type of source entity. Possible values
 * include: 'None', 'Profile', 'Interaction', 'Relationship'
 * @property {string} targetEntityType Type of target entity. Possible values
 * include: 'None', 'Profile', 'Interaction', 'Relationship'
 * @property {string} sourceEntityTypeName Name of the source Entity Type.
 * @property {string} targetEntityTypeName Name of the target Entity Type.
 * @property {object} [displayName] Localized display name for the Link.
 * @property {object} [description] Localized descriptions for the Link.
 * @property {array} [mappings] The set of properties mappings between the
 * source and target Types.
 * @property {array} participantPropertyReferences The properties that
 * represent the participating profile.
 * @property {string} [provisioningState] Provisioning state. Possible values
 * include: 'Provisioning', 'Succeeded', 'Expiring', 'Deleting',
 * 'HumanIntervention', 'Failed'
 * @property {boolean} [referenceOnly] Indicating whether the link is reference
 * only link. This flag is ingored if the Mappings are defined. If the mappings
 * are not defined and it is set to true, links processing will not create or
 * update profiles.
 * @property {string} [operationType] Determines whether this link is supposed
 * to create or delete instances if Link is NOT Reference Only. Possible values
 * include: 'Upsert', 'Delete'
 */
export interface LinkResourceFormat extends ProxyResource {
  readonly tenantId?: string;
  readonly linkName?: string;
  sourceEntityType: string;
  targetEntityType: string;
  sourceEntityTypeName: string;
  targetEntityTypeName: string;
  displayName?: { [propertyName: string]: string };
  description?: { [propertyName: string]: string };
  mappings?: TypePropertiesMapping[];
  participantPropertyReferences: ParticipantPropertyReference[];
  readonly provisioningState?: string;
  referenceOnly?: boolean;
  operationType?: string;
}

/**
 * @class
 * Initializes a new instance of the RelationshipResourceFormat class.
 * @constructor
 * The relationship resource format.
 *
 * @property {string} [cardinality] The Relationship Cardinality. Possible
 * values include: 'OneToOne', 'OneToMany', 'ManyToMany'
 * @property {object} [displayName] Localized display name for the
 * Relationship.
 * @property {object} [description] Localized descriptions for the
 * Relationship.
 * @property {date} [expiryDateTimeUtc] The expiry date time in UTC.
 * @property {array} [fields] The properties of the Relationship.
 * @property {array} [lookupMappings] Optional property to be used to map
 * fields in profile to their strong ids in related profile.
 * @property {string} profileType Profile type.
 * @property {string} [provisioningState] Provisioning state. Possible values
 * include: 'Provisioning', 'Succeeded', 'Expiring', 'Deleting',
 * 'HumanIntervention', 'Failed'
 * @property {string} [relationshipName] The Relationship name.
 * @property {string} relatedProfileType Related profile being referenced.
 * @property {string} [relationshipGuidId] The relationship guid id.
 * @property {string} [tenantId] The hub name.
 */
export interface RelationshipResourceFormat extends ProxyResource {
  cardinality?: string;
  displayName?: { [propertyName: string]: string };
  description?: { [propertyName: string]: string };
  expiryDateTimeUtc?: Date;
  fields?: PropertyDefinition[];
  lookupMappings?: RelationshipTypeMapping[];
  profileType: string;
  readonly provisioningState?: string;
  readonly relationshipName?: string;
  relatedProfileType: string;
  readonly relationshipGuidId?: string;
  readonly tenantId?: string;
}

/**
 * @class
 * Initializes a new instance of the RelationshipLinkResourceFormat class.
 * @constructor
 * The relationship link resource format.
 *
 * @property {object} [displayName] Localized display name for the Relationship
 * Link.
 * @property {object} [description] Localized descriptions for the Relationship
 * Link.
 * @property {string} interactionType The InteractionType associated with the
 * Relationship Link.
 * @property {string} [linkName] The name of the Relationship Link.
 * @property {array} [mappings] The mappings between Interaction and
 * Relationship fields.
 * @property {array} profilePropertyReferences The property references for the
 * Profile of the Relationship.
 * @property {string} [provisioningState] Provisioning state. Possible values
 * include: 'Provisioning', 'Succeeded', 'Expiring', 'Deleting',
 * 'HumanIntervention', 'Failed'
 * @property {array} relatedProfilePropertyReferences The property references
 * for the Related Profile of the Relationship.
 * @property {string} relationshipName The Relationship associated with the
 * Link.
 * @property {string} [relationshipGuidId] The relationship guid id.
 * @property {string} [tenantId] The hub name.
 */
export interface RelationshipLinkResourceFormat extends ProxyResource {
  displayName?: { [propertyName: string]: string };
  description?: { [propertyName: string]: string };
  interactionType: string;
  readonly linkName?: string;
  mappings?: RelationshipLinkFieldMapping[];
  profilePropertyReferences: ParticipantProfilePropertyReference[];
  readonly provisioningState?: string;
  relatedProfilePropertyReferences: ParticipantProfilePropertyReference[];
  relationshipName: string;
  readonly relationshipGuidId?: string;
  readonly tenantId?: string;
}

/**
 * @class
 * Initializes a new instance of the ViewResourceFormat class.
 * @constructor
 * The view resource format.
 *
 * @property {string} [viewName] Name of the view.
 * @property {string} [userId] the user ID.
 * @property {string} [tenantId] the hub name.
 * @property {object} [displayName] Localized display name for the view.
 * @property {string} definition View definition.
 * @property {date} [changed] Date time when view was last modified.
 * @property {date} [created] Date time when view was created.
 */
export interface ViewResourceFormat extends ProxyResource {
  readonly viewName?: string;
  userId?: string;
  readonly tenantId?: string;
  displayName?: { [propertyName: string]: string };
  definition: string;
  readonly changed?: Date;
  readonly created?: Date;
}

/**
 * @class
 * Initializes a new instance of the WidgetTypeResourceFormat class.
 * @constructor
 * The WidgetTypeResourceFormat
 *
 * @property {string} [widgetTypeName] Name of the widget type.
 * @property {string} definition Definition for widget type.
 * @property {string} [description] Description for widget type.
 * @property {object} [displayName] Localized display name for the widget type.
 * @property {string} [imageUrl] The image URL.
 * @property {string} [tenantId] The hub name.
 * @property {string} [widgetVersion] The widget version.
 * @property {date} [changed] Date time when widget type was last modified.
 * @property {date} [created] Date time when widget type was created.
 */
export interface WidgetTypeResourceFormat extends ProxyResource {
  readonly widgetTypeName?: string;
  definition: string;
  description?: string;
  displayName?: { [propertyName: string]: string };
  imageUrl?: string;
  readonly tenantId?: string;
  widgetVersion?: string;
  readonly changed?: Date;
  readonly created?: Date;
}

/**
 * @class
 * Initializes a new instance of the AssignmentPrincipal class.
 * @constructor
 * The AssignmentPrincipal
 *
 * @property {string} principalId The principal id being assigned to.
 * @property {string} principalType The Type of the principal ID.
 * @property {object} [principalMetadata] Other metadata for the principal.
 */
export interface AssignmentPrincipal {
  principalId: string;
  principalType: string;
  principalMetadata?: { [propertyName: string]: string };
}

/**
 * @class
 * Initializes a new instance of the ResourceSetDescription class.
 * @constructor
 * The resource set description.
 *
 * @property {array} [elements] The elements included in the set.
 * @property {array} [exceptions] The elements that are not included in the
 * set, in case elements contains '*' indicating 'all'.
 */
export interface ResourceSetDescription {
  elements?: string[];
  exceptions?: string[];
}

/**
 * @class
 * Initializes a new instance of the RoleAssignmentResourceFormat class.
 * @constructor
 * The Role Assignment resource format.
 *
 * @property {string} [tenantId] The hub name.
 * @property {string} [assignmentName] The name of the metadata object.
 * @property {object} [displayName] Localized display names for the metadata.
 * @property {object} [description] Localized description for the metadata.
 * @property {string} [provisioningState] Provisioning state. Possible values
 * include: 'Provisioning', 'Succeeded', 'Expiring', 'Deleting',
 * 'HumanIntervention', 'Failed'
 * @property {string} role Type of roles. Possible values include: 'Admin',
 * 'Reader', 'ManageAdmin', 'ManageReader', 'DataAdmin', 'DataReader'
 * @property {array} principals The principals being assigned to.
 * @property {object} [profiles] Profiles set for the assignment.
 * @property {array} [profiles.elements] The elements included in the set.
 * @property {array} [profiles.exceptions] The elements that are not included
 * in the set, in case elements contains '*' indicating 'all'.
 * @property {object} [interactions] Interactions set for the assignment.
 * @property {array} [interactions.elements] The elements included in the set.
 * @property {array} [interactions.exceptions] The elements that are not
 * included in the set, in case elements contains '*' indicating 'all'.
 * @property {object} [links] Links set for the assignment.
 * @property {array} [links.elements] The elements included in the set.
 * @property {array} [links.exceptions] The elements that are not included in
 * the set, in case elements contains '*' indicating 'all'.
 * @property {object} [kpis] Kpis set for the assignment.
 * @property {array} [kpis.elements] The elements included in the set.
 * @property {array} [kpis.exceptions] The elements that are not included in
 * the set, in case elements contains '*' indicating 'all'.
 * @property {object} [sasPolicies] Sas Policies set for the assignment.
 * @property {array} [sasPolicies.elements] The elements included in the set.
 * @property {array} [sasPolicies.exceptions] The elements that are not
 * included in the set, in case elements contains '*' indicating 'all'.
 * @property {object} [connectors] Connectors set for the assignment.
 * @property {array} [connectors.elements] The elements included in the set.
 * @property {array} [connectors.exceptions] The elements that are not included
 * in the set, in case elements contains '*' indicating 'all'.
 * @property {object} [views] Views set for the assignment.
 * @property {array} [views.elements] The elements included in the set.
 * @property {array} [views.exceptions] The elements that are not included in
 * the set, in case elements contains '*' indicating 'all'.
 * @property {object} [relationshipLinks] The Role assignments set for the
 * relationship links.
 * @property {array} [relationshipLinks.elements] The elements included in the
 * set.
 * @property {array} [relationshipLinks.exceptions] The elements that are not
 * included in the set, in case elements contains '*' indicating 'all'.
 * @property {object} [relationships] The Role assignments set for the
 * relationships.
 * @property {array} [relationships.elements] The elements included in the set.
 * @property {array} [relationships.exceptions] The elements that are not
 * included in the set, in case elements contains '*' indicating 'all'.
 * @property {object} [widgetTypes] Widget types set for the assignment.
 * @property {array} [widgetTypes.elements] The elements included in the set.
 * @property {array} [widgetTypes.exceptions] The elements that are not
 * included in the set, in case elements contains '*' indicating 'all'.
 * @property {object} [roleAssignments] The Role assignments set for the
 * assignment.
 * @property {array} [roleAssignments.elements] The elements included in the
 * set.
 * @property {array} [roleAssignments.exceptions] The elements that are not
 * included in the set, in case elements contains '*' indicating 'all'.
 * @property {object} [conflationPolicies] Widget types set for the assignment.
 * @property {array} [conflationPolicies.elements] The elements included in the
 * set.
 * @property {array} [conflationPolicies.exceptions] The elements that are not
 * included in the set, in case elements contains '*' indicating 'all'.
 * @property {object} [segments] The Role assignments set for the assignment.
 * @property {array} [segments.elements] The elements included in the set.
 * @property {array} [segments.exceptions] The elements that are not included
 * in the set, in case elements contains '*' indicating 'all'.
 */
export interface RoleAssignmentResourceFormat extends ProxyResource {
  readonly tenantId?: string;
  readonly assignmentName?: string;
  displayName?: { [propertyName: string]: string };
  description?: { [propertyName: string]: string };
  readonly provisioningState?: string;
  role: string;
  principals: AssignmentPrincipal[];
  profiles?: ResourceSetDescription;
  interactions?: ResourceSetDescription;
  links?: ResourceSetDescription;
  kpis?: ResourceSetDescription;
  sasPolicies?: ResourceSetDescription;
  connectors?: ResourceSetDescription;
  views?: ResourceSetDescription;
  relationshipLinks?: ResourceSetDescription;
  relationships?: ResourceSetDescription;
  widgetTypes?: ResourceSetDescription;
  roleAssignments?: ResourceSetDescription;
  conflationPolicies?: ResourceSetDescription;
  segments?: ResourceSetDescription;
}

/**
 * @class
 * Initializes a new instance of the RoleResourceFormat class.
 * @constructor
 * The role resource format.
 *
 * @property {string} [roleName] The role name.
 * @property {string} [description] The description of the role.
 */
export interface RoleResourceFormat extends ProxyResource {
  roleName?: string;
  description?: string;
}

/**
 * @class
 * Initializes a new instance of the GetImageUploadUrlInput class.
 * @constructor
 * Input type for getting image upload url.
 *
 * @property {string} [entityType] Type of entity. Can be Profile or
 * Interaction.
 * @property {string} [entityTypeName] Name of the entity type.
 * @property {string} [relativePath] Relative path of the image.
 */
export interface GetImageUploadUrlInput {
  entityType?: string;
  entityTypeName?: string;
  relativePath?: string;
}

/**
 * @class
 * Initializes a new instance of the ImageDefinition class.
 * @constructor
 * The image definition.
 *
 * @property {boolean} [imageExists] Whether image exists already.
 * @property {string} [contentUrl] Content URL for the image blob.
 * @property {string} [relativePath] Relative path of the image.
 */
export interface ImageDefinition {
  imageExists?: boolean;
  contentUrl?: string;
  relativePath?: string;
}

/**
 * @class
 * Initializes a new instance of the RelationshipsLookup class.
 * @constructor
 * The definition of suggested relationship for the type.
 *
 * @property {string} [profileName] The relationship profile.
 * @property {array} [profilePropertyReferences] The property references for
 * the profile type.
 * @property {string} [relatedProfileName] The related profile.
 * @property {array} [relatedProfilePropertyReferences] The property references
 * for the related profile type.
 * @property {string} [existingRelationshipName] The name of existing
 * Relationship.
 */
export interface RelationshipsLookup {
  readonly profileName?: string;
  readonly profilePropertyReferences?: ParticipantProfilePropertyReference[];
  readonly relatedProfileName?: string;
  readonly relatedProfilePropertyReferences?: ParticipantProfilePropertyReference[];
  readonly existingRelationshipName?: string;
}

/**
 * @class
 * Initializes a new instance of the SuggestRelationshipLinksResponse class.
 * @constructor
 * The response of suggest relationship links operation.
 *
 * @property {string} [interactionName] The interaction name.
 * @property {array} [suggestedRelationships] Suggested relationships for the
 * type.
 */
export interface SuggestRelationshipLinksResponse {
  readonly interactionName?: string;
  readonly suggestedRelationships?: RelationshipsLookup[];
}

/**
 * @class
 * Initializes a new instance of the PredictionMappings class.
 * @constructor
 * Definition of the link mapping of prediction.
 *
 * @property {string} score The score of the link mapping.
 * @property {string} grade The grade of the link mapping.
 * @property {string} reason The reason of the link mapping.
 */
export interface PredictionMappings {
  score: string;
  grade: string;
  reason: string;
}

/**
 * @class
 * Initializes a new instance of the PredictionGradesItem class.
 * @constructor
 * The definition of a prediction grade.
 *
 * @property {string} [gradeName] Name of the grade.
 * @property {number} [minScoreThreshold] Minimum score threshold.
 * @property {number} [maxScoreThreshold] Maximum score threshold.
 */
export interface PredictionGradesItem {
  gradeName?: string;
  minScoreThreshold?: number;
  maxScoreThreshold?: number;
}

/**
 * @class
 * Initializes a new instance of the PredictionSystemGeneratedEntities class.
 * @constructor
 * System generated entities.
 *
 * @property {array} [generatedInteractionTypes] Generated interaction types.
 * @property {array} [generatedLinks] Generated links.
 * @property {object} [generatedKpis] Generated KPIs.
 */
export interface PredictionSystemGeneratedEntities {
  generatedInteractionTypes?: string[];
  generatedLinks?: string[];
  generatedKpis?: { [propertyName: string]: string };
}

/**
 * @class
 * Initializes a new instance of the PredictionDistributionDefinitionDistributionsItem class.
 * @constructor
 * The definition of a prediction distribution.
 *
 * @property {number} [scoreThreshold] Score threshold.
 * @property {number} [positives] Number of positives.
 * @property {number} [negatives] Number of negatives.
 * @property {number} [positivesAboveThreshold] Number of positives above
 * threshold.
 * @property {number} [negativesAboveThreshold] Number of negatives above
 * threshold.
 */
export interface PredictionDistributionDefinitionDistributionsItem {
  scoreThreshold?: number;
  positives?: number;
  negatives?: number;
  positivesAboveThreshold?: number;
  negativesAboveThreshold?: number;
}

/**
 * @class
 * Initializes a new instance of the PredictionDistributionDefinition class.
 * @constructor
 * The definition of the prediction distribution.
 *
 * @property {number} [totalPositives] Total positive in the distribution.
 * @property {number} [totalNegatives] Total negatives in the distribution.
 * @property {array} [distributions] Distributions of the prediction.
 */
export interface PredictionDistributionDefinition {
  totalPositives?: number;
  totalNegatives?: number;
  distributions?: PredictionDistributionDefinitionDistributionsItem[];
}

/**
 * @class
 * Initializes a new instance of the CanonicalProfileDefinitionPropertiesItem class.
 * @constructor
 * The definition of a canonical profile property.
 *
 * @property {string} [profileName] Profile name.
 * @property {string} [profilePropertyName] Property name of profile.
 * @property {number} [rank] The rank.
 * @property {string} [type] Type of canonical property value. Possible values
 * include: 'Numeric', 'Categorical', 'DerivedCategorical', 'DerivedNumeric'
 * @property {string} [value] Value of the canonical property.
 */
export interface CanonicalProfileDefinitionPropertiesItem {
  profileName?: string;
  profilePropertyName?: string;
  rank?: number;
  type?: string;
  value?: string;
}

/**
 * @class
 * Initializes a new instance of the CanonicalProfileDefinition class.
 * @constructor
 * Definition of canonical profile.
 *
 * @property {number} [canonicalProfileId] Canonical profile ID.
 * @property {array} [properties] Properties of the canonical profile.
 */
export interface CanonicalProfileDefinition {
  canonicalProfileId?: number;
  properties?: CanonicalProfileDefinitionPropertiesItem[];
}

/**
 * @class
 * Initializes a new instance of the PredictionTrainingResults class.
 * @constructor
 * The training results of the prediction.
 *
 * @property {string} [tenantId] The hub name.
 * @property {string} [scoreName] Score name.
 * @property {object} [predictionDistribution] Prediction distribution.
 * @property {number} [predictionDistribution.totalPositives] Total positive in
 * the distribution.
 * @property {number} [predictionDistribution.totalNegatives] Total negatives
 * in the distribution.
 * @property {array} [predictionDistribution.distributions] Distributions of
 * the prediction.
 * @property {array} [canonicalProfiles] Canonical profiles.
 * @property {number} [primaryProfileInstanceCount] Instance count of the
 * primary profile.
 */
export interface PredictionTrainingResults {
  readonly tenantId?: string;
  readonly scoreName?: string;
  readonly predictionDistribution?: PredictionDistributionDefinition;
  readonly canonicalProfiles?: CanonicalProfileDefinition[];
  readonly primaryProfileInstanceCount?: number;
}

/**
 * @class
 * Initializes a new instance of the PredictionModelStatus class.
 * @constructor
 * The prediction model status.
 *
 * @property {string} [tenantId] The hub name.
 * @property {string} [predictionName] The prediction name.
 * @property {string} [predictionGuidId] The prediction GUID ID.
 * @property {string} status Prediction model life cycle.  When prediction is
 * in PendingModelConfirmation status, it is allowed to update the status to
 * PendingFeaturing or Active through API. Possible values include: 'New',
 * 'Provisioning', 'ProvisioningFailed', 'PendingDiscovering', 'Discovering',
 * 'PendingFeaturing', 'Featuring', 'FeaturingFailed', 'PendingTraining',
 * 'Training', 'TrainingFailed', 'Evaluating', 'EvaluatingFailed',
 * 'PendingModelConfirmation', 'Active', 'Deleted', 'HumanIntervention',
 * 'Failed'
 * @property {string} [message] The model status message.
 * @property {number} [trainingSetCount] Count of the training set.
 * @property {number} [testSetCount] Count of the test set.
 * @property {number} [validationSetCount] Count of the validation set.
 * @property {number} [trainingAccuracy] The training accuracy.
 * @property {number} [signalsUsed] The singnas used.
 * @property {string} [modelVersion] Version of the model.
 */
export interface PredictionModelStatus {
  readonly tenantId?: string;
  readonly predictionName?: string;
  readonly predictionGuidId?: string;
  status: string;
  readonly message?: string;
  readonly trainingSetCount?: number;
  readonly testSetCount?: number;
  readonly validationSetCount?: number;
  readonly trainingAccuracy?: number;
  readonly signalsUsed?: number;
  readonly modelVersion?: string;
}

/**
 * @class
 * Initializes a new instance of the PredictionResourceFormat class.
 * @constructor
 * The prediction resource format.
 *
 * @property {object} [description] Description of the prediction.
 * @property {object} [displayName] Display name of the prediction.
 * @property {array} [involvedInteractionTypes] Interaction types involved in
 * the prediction.
 * @property {array} [involvedKpiTypes] KPI types involved in the prediction.
 * @property {array} [involvedRelationships] Relationships involved in the
 * prediction.
 * @property {string} negativeOutcomeExpression Negative outcome expression.
 * @property {string} positiveOutcomeExpression Positive outcome expression.
 * @property {string} primaryProfileType Primary profile type.
 * @property {string} [provisioningState] Provisioning state. Possible values
 * include: 'Provisioning', 'Succeeded', 'Expiring', 'Deleting',
 * 'HumanIntervention', 'Failed'
 * @property {string} [predictionName] Name of the prediction.
 * @property {string} scopeExpression Scope expression.
 * @property {string} [tenantId] The hub name.
 * @property {boolean} autoAnalyze Whether do auto analyze.
 * @property {object} mappings Definition of the link mapping of prediction.
 * @property {string} [mappings.score] The score of the link mapping.
 * @property {string} [mappings.grade] The grade of the link mapping.
 * @property {string} [mappings.reason] The reason of the link mapping.
 * @property {string} scoreLabel Score label.
 * @property {array} [grades] The prediction grades.
 * @property {object} [systemGeneratedEntities] System generated entities.
 * @property {array} [systemGeneratedEntities.generatedInteractionTypes]
 * Generated interaction types.
 * @property {array} [systemGeneratedEntities.generatedLinks] Generated links.
 * @property {object} [systemGeneratedEntities.generatedKpis] Generated KPIs.
 */
export interface PredictionResourceFormat extends ProxyResource {
  description?: { [propertyName: string]: string };
  displayName?: { [propertyName: string]: string };
  involvedInteractionTypes?: string[];
  involvedKpiTypes?: string[];
  involvedRelationships?: string[];
  negativeOutcomeExpression: string;
  positiveOutcomeExpression: string;
  primaryProfileType: string;
  readonly provisioningState?: string;
  predictionName?: string;
  scopeExpression: string;
  readonly tenantId?: string;
  autoAnalyze: boolean;
  mappings: PredictionMappings;
  scoreLabel: string;
  grades?: PredictionGradesItem[];
  readonly systemGeneratedEntities?: PredictionSystemGeneratedEntities;
}

/**
 * @class
 * Initializes a new instance of the OperationDisplay class.
 * @constructor
 * The object that represents the operation.
 *
 * @property {string} [provider] Service provider: Microsoft.CustomerInsights
 * @property {string} [resource] Resource on which the operation is performed:
 * Invoice, etc.
 * @property {string} [operation] Operation type: Read, write, delete, etc.
 */
export interface OperationDisplay {
  readonly provider?: string;
  readonly resource?: string;
  readonly operation?: string;
}

/**
 * @class
 * Initializes a new instance of the Operation class.
 * @constructor
 * A Customer Insights REST API operation
 *
 * @property {string} [name] Operation name: {provider}/{resource}/{operation}
 * @property {object} [display] The object that represents the operation.
 * @property {string} [display.provider] Service provider:
 * Microsoft.CustomerInsights
 * @property {string} [display.resource] Resource on which the operation is
 * performed: Invoice, etc.
 * @property {string} [display.operation] Operation type: Read, write, delete,
 * etc.
 */
export interface Operation {
  readonly name?: string;
  display?: OperationDisplay;
}


/**
 * @class
 * Initializes a new instance of the OperationListResult class.
 * @constructor
 * Result of the request to list Customer Insights operations. It contains a
 * list of operations and a URL link to get the next set of results.
 *
 * @property {string} [nextLink] URL to get the next set of operation list
 * results if there are any.
 */
export interface OperationListResult extends Array<Operation> {
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the HubListResult class.
 * @constructor
 * Response of list hub operation.
 *
 * @property {string} [nextLink] Link for next set of results.
 */
export interface HubListResult extends Array<Hub> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the ProfileListResult class.
 * @constructor
 * The response of list profile operation.
 *
 * @property {string} [nextLink] Link to the next set of results.
 */
export interface ProfileListResult extends Array<ProfileResourceFormat> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the InteractionListResult class.
 * @constructor
 * The response of list interaction operation.
 *
 * @property {string} [nextLink] Link to the next set of results.
 */
export interface InteractionListResult extends Array<InteractionResourceFormat> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the RelationshipListResult class.
 * @constructor
 * The response of list relationship operation.
 *
 * @property {string} [nextLink] Link to the next set of results.
 */
export interface RelationshipListResult extends Array<RelationshipResourceFormat> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the RelationshipLinkListResult class.
 * @constructor
 * The response of list relationship link operation.
 *
 * @property {string} [nextLink] Link to the next set of results.
 */
export interface RelationshipLinkListResult extends Array<RelationshipLinkResourceFormat> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the AuthorizationPolicyListResult class.
 * @constructor
 * The response of list authorization policy operation.
 *
 * @property {string} [nextLink] Link to the next set of results.
 */
export interface AuthorizationPolicyListResult extends Array<AuthorizationPolicyResourceFormat> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the ConnectorListResult class.
 * @constructor
 * The response of list connector operation.
 *
 * @property {string} [nextLink] Link to the next set of results.
 */
export interface ConnectorListResult extends Array<ConnectorResourceFormat> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the ConnectorMappingListResult class.
 * @constructor
 * The response of list connector mapping operation.
 *
 * @property {string} [nextLink] Link to the next set of results.
 */
export interface ConnectorMappingListResult extends Array<ConnectorMappingResourceFormat> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the KpiListResult class.
 * @constructor
 * The response of list KPI operation.
 *
 * @property {string} [nextLink] Link to the next set of results.
 */
export interface KpiListResult extends Array<KpiResourceFormat> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the WidgetTypeListResult class.
 * @constructor
 * The response of list widget type operation.
 *
 * @property {string} [nextLink] Link to the next set of results.
 */
export interface WidgetTypeListResult extends Array<WidgetTypeResourceFormat> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the ViewListResult class.
 * @constructor
 * The response of list view operation.
 *
 * @property {string} [nextLink] Link to the next set of results.
 */
export interface ViewListResult extends Array<ViewResourceFormat> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the LinkListResult class.
 * @constructor
 * The response of list link operation.
 *
 * @property {string} [nextLink] Link to the next set of results.
 */
export interface LinkListResult extends Array<LinkResourceFormat> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the RoleListResult class.
 * @constructor
 * The response of list role assignment operation.
 *
 * @property {string} [nextLink] Link to the next set of results.
 */
export interface RoleListResult extends Array<RoleResourceFormat> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the RoleAssignmentListResult class.
 * @constructor
 * The response of list role assignment operation.
 *
 * @property {string} [nextLink] Link to the next set of results.
 */
export interface RoleAssignmentListResult extends Array<RoleAssignmentResourceFormat> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the PredictionListResult class.
 * @constructor
 * The response of list predictions operation.
 *
 * @property {string} [nextLink] Link to the next set of results.
 */
export interface PredictionListResult extends Array<PredictionResourceFormat> {
  nextLink?: string;
}
