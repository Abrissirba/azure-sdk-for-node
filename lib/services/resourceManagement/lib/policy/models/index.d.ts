/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { BaseResource } from 'ms-rest-azure';
import { CloudError } from 'ms-rest-azure';
import * as moment from 'moment';

export { BaseResource } from 'ms-rest-azure';
export { CloudError } from 'ms-rest-azure';


/**
 * @class
 * Initializes a new instance of the PolicySku class.
 * @constructor
 * The policy sku. This property is optional, obsolete, and will be ignored.
 *
 * @property {string} name The name of the policy sku. Possible values are A0
 * and A1.
 * @property {string} [tier] The policy sku tier. Possible values are Free and
 * Standard.
 */
export interface PolicySku {
  name: string;
  tier?: string;
}

/**
 * @class
 * Initializes a new instance of the Identity class.
 * @constructor
 * Identity for the resource.
 *
 * @property {string} [principalId] The principal ID of the resource identity.
 * @property {string} [tenantId] The tenant ID of the resource identity.
 * @property {string} [type] The identity type. Possible values include:
 * 'SystemAssigned', 'None'
 */
export interface Identity {
  readonly principalId?: string;
  readonly tenantId?: string;
  type?: string;
}

/**
 * @class
 * Initializes a new instance of the PolicyAssignment class.
 * @constructor
 * The policy assignment.
 *
 * @property {string} [displayName] The display name of the policy assignment.
 * @property {string} [policyDefinitionId] The ID of the policy definition or
 * policy set definition being assigned.
 * @property {string} [scope] The scope for the policy assignment.
 * @property {array} [notScopes] The policy's excluded scopes.
 * @property {object} [parameters] Required if a parameter is used in policy
 * rule.
 * @property {string} [description] This message will be part of response in
 * case of policy violation.
 * @property {object} [metadata] The policy assignment metadata.
 * @property {string} [id] The ID of the policy assignment.
 * @property {string} [type] The type of the policy assignment.
 * @property {string} [name] The name of the policy assignment.
 * @property {object} [sku] The policy sku. This property is optional,
 * obsolete, and will be ignored.
 * @property {string} [sku.name] The name of the policy sku. Possible values
 * are A0 and A1.
 * @property {string} [sku.tier] The policy sku tier. Possible values are Free
 * and Standard.
 * @property {string} [location] The location of the policy assignment. Only
 * required when utilizing managed identity.
 * @property {object} [identity] The managed identity associated with the
 * policy assignment.
 * @property {string} [identity.principalId] The principal ID of the resource
 * identity.
 * @property {string} [identity.tenantId] The tenant ID of the resource
 * identity.
 * @property {string} [identity.type] The identity type. Possible values
 * include: 'SystemAssigned', 'None'
 */
export interface PolicyAssignment extends BaseResource {
  displayName?: string;
  policyDefinitionId?: string;
  scope?: string;
  notScopes?: string[];
  parameters?: any;
  description?: string;
  metadata?: any;
  readonly id?: string;
  readonly type?: string;
  readonly name?: string;
  sku?: PolicySku;
  location?: string;
  identity?: Identity;
}

/**
 * @class
 * Initializes a new instance of the ErrorResponse class.
 * @constructor
 * Error reponse indicates Azure Resource Manager is not able to process the
 * incoming request. The reason is provided in the error message.
 *
 * @property {string} [httpStatus] Http status code.
 * @property {string} [errorCode] Error code.
 * @property {string} [errorMessage] Error message indicating why the operation
 * failed.
 */
export interface ErrorResponse {
  httpStatus?: string;
  errorCode?: string;
  errorMessage?: string;
}

/**
 * @class
 * Initializes a new instance of the PolicyDefinition class.
 * @constructor
 * The policy definition.
 *
 * @property {string} [policyType] The type of policy definition. Possible
 * values are NotSpecified, BuiltIn, and Custom. Possible values include:
 * 'NotSpecified', 'BuiltIn', 'Custom'
 * @property {string} [mode] The policy definition mode. Possible values are
 * NotSpecified, Indexed, and All. Possible values include: 'NotSpecified',
 * 'Indexed', 'All'
 * @property {string} [displayName] The display name of the policy definition.
 * @property {string} [description] The policy definition description.
 * @property {object} [policyRule] The policy rule.
 * @property {object} [metadata] The policy definition metadata.
 * @property {object} [parameters] Required if a parameter is used in policy
 * rule.
 * @property {string} [id] The ID of the policy definition.
 * @property {string} [name] The name of the policy definition.
 * @property {string} [type] The type of the resource
 * (Microsoft.Authorization/policyDefinitions).
 */
export interface PolicyDefinition extends BaseResource {
  policyType?: string;
  mode?: string;
  displayName?: string;
  description?: string;
  policyRule?: any;
  metadata?: any;
  parameters?: any;
  readonly id?: string;
  readonly name?: string;
  readonly type?: string;
}

/**
 * @class
 * Initializes a new instance of the PolicyDefinitionReference class.
 * @constructor
 * The policy definition reference.
 *
 * @property {string} [policyDefinitionId] The ID of the policy definition or
 * policy set definition.
 * @property {object} [parameters] Required if a parameter is used in policy
 * rule.
 */
export interface PolicyDefinitionReference {
  policyDefinitionId?: string;
  parameters?: any;
}

/**
 * @class
 * Initializes a new instance of the PolicySetDefinition class.
 * @constructor
 * The policy set definition.
 *
 * @property {string} [policyType] The type of policy definition. Possible
 * values are NotSpecified, BuiltIn, and Custom. Possible values include:
 * 'NotSpecified', 'BuiltIn', 'Custom'
 * @property {string} [displayName] The display name of the policy set
 * definition.
 * @property {string} [description] The policy set definition description.
 * @property {object} [metadata] The policy set definition metadata.
 * @property {object} [parameters] The policy set definition parameters that
 * can be used in policy definition references.
 * @property {array} policyDefinitions An array of policy definition
 * references.
 * @property {string} [id] The ID of the policy set definition.
 * @property {string} [name] The name of the policy set definition.
 * @property {string} [type] The type of the resource
 * (Microsoft.Authorization/policySetDefinitions).
 */
export interface PolicySetDefinition extends BaseResource {
  policyType?: string;
  displayName?: string;
  description?: string;
  metadata?: any;
  parameters?: any;
  policyDefinitions: PolicyDefinitionReference[];
  readonly id?: string;
  readonly name?: string;
  readonly type?: string;
}


/**
 * @class
 * Initializes a new instance of the PolicyAssignmentListResult class.
 * @constructor
 * List of policy assignments.
 *
 * @property {string} [nextLink] The URL to use for getting the next set of
 * results.
 */
export interface PolicyAssignmentListResult extends Array<PolicyAssignment> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the PolicyDefinitionListResult class.
 * @constructor
 * List of policy definitions.
 *
 * @property {string} [nextLink] The URL to use for getting the next set of
 * results.
 */
export interface PolicyDefinitionListResult extends Array<PolicyDefinition> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the PolicySetDefinitionListResult class.
 * @constructor
 * List of policy set definitions.
 *
 * @property {string} [nextLink] The URL to use for getting the next set of
 * results.
 */
export interface PolicySetDefinitionListResult extends Array<PolicySetDefinition> {
  nextLink?: string;
}
