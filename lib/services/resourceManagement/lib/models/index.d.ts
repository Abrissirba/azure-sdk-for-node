/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { BaseResource } from 'ms-rest-azure';
import { CloudError } from 'ms-rest-azure';
import * as moment from 'moment';

export { BaseResource } from 'ms-rest-azure';
export { CloudError } from 'ms-rest-azure';


/**
 * @class
 * Initializes a new instance of the Plan class.
 * @constructor
 * Plan for the appliance.
 *
 * @property {string} name The plan name.
 * @property {string} publisher The publisher ID.
 * @property {string} product The product code.
 * @property {string} [promotionCode] The promotion code.
 * @property {string} version The plan's version.
 */
export interface Plan {
  name: string;
  publisher: string;
  product: string;
  promotionCode?: string;
  version: string;
}

/**
 * @class
 * Initializes a new instance of the Resource class.
 * @constructor
 * Resource information.
 *
 * @property {string} [id] Resource ID
 * @property {string} [name] Resource name
 * @property {string} [type] Resource type
 * @property {string} [location] Resource location
 * @property {object} [tags] Resource tags
 */
export interface Resource extends BaseResource {
  readonly id?: string;
  readonly name?: string;
  readonly type?: string;
  location?: string;
  tags?: { [propertyName: string]: string };
}

/**
 * @class
 * Initializes a new instance of the GenericResource class.
 * @constructor
 * Resource information.
 *
 * @property {string} [managedBy] ID of the resource that manages this
 * resource.
 * @property {object} [sku] The SKU of the resource.
 * @property {string} [sku.name] The SKU name.
 * @property {string} [sku.tier] The SKU tier.
 * @property {string} [sku.size] The SKU size.
 * @property {string} [sku.family] The SKU family.
 * @property {string} [sku.model] The SKU model.
 * @property {number} [sku.capacity] The SKU capacity.
 * @property {object} [identity] The identity of the resource.
 * @property {string} [identity.principalId] The principal ID of resource
 * identity.
 * @property {string} [identity.tenantId] The tenant ID of resource.
 * @property {string} [identity.type] The identity type. Possible values
 * include: 'SystemAssigned'
 */
export interface GenericResource extends Resource {
  managedBy?: string;
  sku?: Sku;
  identity?: Identity;
}

/**
 * @class
 * Initializes a new instance of the Appliance class.
 * @constructor
 * Information about appliance.
 *
 * @property {string} managedResourceGroupId The managed resource group Id.
 * @property {string} [applianceDefinitionId] The fully qualified path of
 * appliance definition Id.
 * @property {object} [parameters] Name and value pairs that define the
 * appliance parameters. It can be a JObject or a well formed JSON string.
 * @property {object} [outputs] Name and value pairs that define the appliance
 * outputs.
 * @property {string} [provisioningState] The appliance provisioning state.
 * Possible values include: 'Accepted', 'Running', 'Ready', 'Creating',
 * 'Created', 'Deleting', 'Deleted', 'Canceled', 'Failed', 'Succeeded',
 * 'Updating'
 * @property {string} [uiDefinitionUri] The blob URI where the UI definition
 * file is located.
 * @property {object} [plan] The plan information.
 * @property {string} [plan.name] The plan name.
 * @property {string} [plan.publisher] The publisher ID.
 * @property {string} [plan.product] The product code.
 * @property {string} [plan.promotionCode] The promotion code.
 * @property {string} [plan.version] The plan's version.
 * @property {string} [kind] The kind of the appliance. Allowed values are
 * MarketPlace and ServiceCatalog.
 */
export interface Appliance extends GenericResource {
  managedResourceGroupId: string;
  applianceDefinitionId?: string;
  parameters?: any;
  readonly outputs?: any;
  readonly provisioningState?: string;
  uiDefinitionUri?: string;
  plan?: Plan;
  kind?: string;
}

/**
 * @class
 * Initializes a new instance of the PlanPatchable class.
 * @constructor
 * Plan for the appliance.
 *
 * @property {string} [name] The plan name.
 * @property {string} [publisher] The publisher ID.
 * @property {string} [product] The product code.
 * @property {string} [promotionCode] The promotion code.
 * @property {string} [version] The plan's version.
 */
export interface PlanPatchable {
  name?: string;
  publisher?: string;
  product?: string;
  promotionCode?: string;
  version?: string;
}

/**
 * @class
 * Initializes a new instance of the AppliancePatchable class.
 * @constructor
 * Information about appliance.
 *
 * @property {string} [managedResourceGroupId] The managed resource group Id.
 * @property {string} [applianceDefinitionId] The fully qualified path of
 * appliance definition Id.
 * @property {object} [parameters] Name and value pairs that define the
 * appliance parameters. It can be a JObject or a well formed JSON string.
 * @property {object} [outputs] Name and value pairs that define the appliance
 * outputs.
 * @property {string} [provisioningState] The appliance provisioning state.
 * Possible values include: 'Accepted', 'Running', 'Ready', 'Creating',
 * 'Created', 'Deleting', 'Deleted', 'Canceled', 'Failed', 'Succeeded',
 * 'Updating'
 * @property {string} [uiDefinitionUri] The blob URI where the UI definition
 * file is located.
 * @property {object} [plan] The plan information.
 * @property {string} [plan.name] The plan name.
 * @property {string} [plan.publisher] The publisher ID.
 * @property {string} [plan.product] The product code.
 * @property {string} [plan.promotionCode] The promotion code.
 * @property {string} [plan.version] The plan's version.
 * @property {string} [kind] The kind of the appliance. Allowed values are
 * MarketPlace and ServiceCatalog.
 */
export interface AppliancePatchable extends GenericResource {
  managedResourceGroupId?: string;
  applianceDefinitionId?: string;
  parameters?: any;
  readonly outputs?: any;
  readonly provisioningState?: string;
  uiDefinitionUri?: string;
  plan?: PlanPatchable;
  kind?: string;
}

/**
 * @class
 * Initializes a new instance of the ApplianceProviderAuthorization class.
 * @constructor
 * The appliance provider authorization.
 *
 * @property {string} principalId The provider's principal identifier. This is
 * the identity that the provider will use to call ARM to manage the appliance
 * resources.
 * @property {string} roleDefinitionId The provider's role definition
 * identifier. This role will define all the permissions that the provider must
 * have on the appliance's container resource group. This role definition
 * cannot have permission to delete the resource group.
 */
export interface ApplianceProviderAuthorization {
  principalId: string;
  roleDefinitionId: string;
}

/**
 * @class
 * Initializes a new instance of the ApplianceArtifact class.
 * @constructor
 * Appliance artifact.
 *
 * @property {string} [name] The appliance artifact name.
 * @property {string} [uri] The appliance artifact blob uri.
 * @property {string} [type] The the appliance artifact type. Possible values
 * include: 'Template', 'Custom'
 */
export interface ApplianceArtifact {
  name?: string;
  uri?: string;
  type?: string;
}

/**
 * @class
 * Initializes a new instance of the ApplianceDefinition class.
 * @constructor
 * Information about appliance definition.
 *
 * @property {string} lockLevel The appliance lock level. Possible values
 * include: 'CanNotDelete', 'ReadOnly', 'None'
 * @property {string} [displayName] The appliance definition display name.
 * @property {array} authorizations The appliance provider authorizations.
 * @property {array} [artifacts] The collection of appliance artifacts. The
 * portal will use the files specified as artifacts to construct the user
 * experience of creating an appliance from an appliance definition.
 * @property {string} [description] The appliance definition description.
 * @property {string} packageFileUri The appliance definition package file Uri.
 */
export interface ApplianceDefinition extends GenericResource {
  lockLevel: string;
  displayName?: string;
  authorizations: ApplianceProviderAuthorization[];
  artifacts?: ApplianceArtifact[];
  description?: string;
  packageFileUri: string;
}

/**
 * @class
 * Initializes a new instance of the Sku class.
 * @constructor
 * SKU for the resource.
 *
 * @property {string} name The SKU name.
 * @property {string} [tier] The SKU tier.
 * @property {string} [size] The SKU size.
 * @property {string} [family] The SKU family.
 * @property {string} [model] The SKU model.
 * @property {number} [capacity] The SKU capacity.
 */
export interface Sku {
  name: string;
  tier?: string;
  size?: string;
  family?: string;
  model?: string;
  capacity?: number;
}

/**
 * @class
 * Initializes a new instance of the Identity class.
 * @constructor
 * Identity for the resource.
 *
 * @property {string} [principalId] The principal ID of resource identity.
 * @property {string} [tenantId] The tenant ID of resource.
 * @property {string} [type] The identity type. Possible values include:
 * 'SystemAssigned'
 */
export interface Identity {
  readonly principalId?: string;
  readonly tenantId?: string;
  type?: string;
}

/**
 * @class
 * Initializes a new instance of the ErrorResponse class.
 * @constructor
 * Error reponse indicates ARM appliance is not able to process the incoming
 * request. The reason is provided in the error message.
 *
 * @property {string} [httpStatus] Http status code.
 * @property {string} [errorCode] Error code.
 * @property {string} [errorMessage] Error message indicating why the operation
 * failed.
 */
export interface ErrorResponse {
  httpStatus?: string;
  errorCode?: string;
  errorMessage?: string;
}

/**
 * @class
 * Initializes a new instance of the OperationDisplay class.
 * @constructor
 * The object that represents the operation.
 *
 * @property {string} [provider] Service provider: Microsoft.Solutions
 * @property {string} [resource] Resource on which the operation is performed:
 * Profile, endpoint, etc.
 * @property {string} [operation] Operation type: Read, write, delete, etc.
 */
export interface OperationDisplay {
  provider?: string;
  resource?: string;
  operation?: string;
}

/**
 * @class
 * Initializes a new instance of the Operation class.
 * @constructor
 * Microsoft.Solutions operation
 *
 * @property {string} [name] Operation name: {provider}/{resource}/{operation}
 * @property {object} [display] The object that represents the operation.
 * @property {string} [display.provider] Service provider: Microsoft.Solutions
 * @property {string} [display.resource] Resource on which the operation is
 * performed: Profile, endpoint, etc.
 * @property {string} [display.operation] Operation type: Read, write, delete,
 * etc.
 */
export interface Operation {
  name?: string;
  display?: OperationDisplay;
}


/**
 * @class
 * Initializes a new instance of the OperationListResult class.
 * @constructor
 * Result of the request to list Microsoft.Solutions operations. It contains a
 * list of operations and a URL link to get the next set of results.
 *
 * @property {string} [nextLink] URL to get the next set of operation list
 * results if there are any.
 */
export interface OperationListResult extends Array<Operation> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the ApplianceListResult class.
 * @constructor
 * List of appliances.
 *
 * @property {string} [nextLink] The URL to use for getting the next set of
 * results.
 */
export interface ApplianceListResult extends Array<Appliance> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the ApplianceDefinitionListResult class.
 * @constructor
 * List of appliance definitions.
 *
 * @property {string} [nextLink] The URL to use for getting the next set of
 * results.
 */
export interface ApplianceDefinitionListResult extends Array<ApplianceDefinition> {
  nextLink?: string;
}
