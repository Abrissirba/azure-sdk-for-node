/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Factory's VSTS repo information.
 *
 */
class FactoryRepoUpdate {
  /**
   * Create a FactoryRepoUpdate.
   * @member {string} [factoryResourceId] The factory resource id.
   * @member {object} [vstsConfiguration] VSTS repo information of the factory.
   * @member {string} [vstsConfiguration.accountName] VSTS account name.
   * @member {string} [vstsConfiguration.projectName] VSTS project name.
   * @member {string} [vstsConfiguration.repositoryName] VSTS repository name.
   * @member {string} [vstsConfiguration.collaborationBranch] VSTS
   * collaboration branch.
   * @member {string} [vstsConfiguration.rootFolder] VSTS root folder.
   * @member {string} [vstsConfiguration.lastCommitId] VSTS last commit id.
   * @member {string} [vstsConfiguration.tenantId] VSTS tenant id.
   */
  constructor() {
  }

  /**
   * Defines the metadata of FactoryRepoUpdate
   *
   * @returns {object} metadata of FactoryRepoUpdate
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'FactoryRepoUpdate',
      type: {
        name: 'Composite',
        className: 'FactoryRepoUpdate',
        modelProperties: {
          factoryResourceId: {
            required: false,
            serializedName: 'factoryResourceId',
            type: {
              name: 'String'
            }
          },
          vstsConfiguration: {
            required: false,
            serializedName: 'vstsConfiguration',
            type: {
              name: 'Composite',
              className: 'FactoryVSTSConfiguration'
            }
          }
        }
      }
    };
  }
}

module.exports = FactoryRepoUpdate;
