/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { BaseResource } from 'ms-rest-azure';
import { CloudError } from 'ms-rest-azure';
import * as moment from 'moment';

export { BaseResource } from 'ms-rest-azure';
export { CloudError } from 'ms-rest-azure';


/**
 * @class
 * Initializes a new instance of the Resource class.
 * @constructor
 * Azure Data Factory top-level resource.
 *
 * @property {string} [id] The resource identifier.
 * @property {string} [name] The resource name.
 * @property {string} [type] The resource type.
 * @property {string} [location] The resource location.
 * @property {object} [tags] The resource tags.
 * @property {string} [eTag] Etag identifies change in the resource.
 */
export interface Resource extends BaseResource {
  readonly id?: string;
  readonly name?: string;
  readonly type?: string;
  location?: string;
  tags?: { [propertyName: string]: string };
  readonly eTag?: string;
}

/**
 * @class
 * Initializes a new instance of the SubResource class.
 * @constructor
 * Azure Data Factory nested resource, which belongs to a factory.
 *
 * @property {string} [id] The resource identifier.
 * @property {string} [name] The resource name.
 * @property {string} [type] The resource type.
 * @property {string} [etag] Etag identifies change in the resource.
 */
export interface SubResource extends BaseResource {
  readonly id?: string;
  readonly name?: string;
  readonly type?: string;
  readonly etag?: string;
}

/**
 * @class
 * Initializes a new instance of the Expression class.
 * @constructor
 * Azure Data Factory expression definition.
 *
 * @property {string} value Expression value.
 */
export interface Expression {
  value: string;
}

/**
 * @class
 * Initializes a new instance of the SecretBase class.
 * @constructor
 * The base definition of a secret type.
 *
 * @property {string} type Polymorphic Discriminator
 */
export interface SecretBase {
  type: string;
}

/**
 * @class
 * Initializes a new instance of the SecureString class.
 * @constructor
 * Azure Data Factory secure string definition. The string value will be masked
 * with asterisks '*' during Get or List API calls.
 *
 * @property {string} value Value of secure string.
 */
export interface SecureString extends SecretBase {
  value: string;
}

/**
 * @class
 * Initializes a new instance of the LinkedServiceReference class.
 * @constructor
 * Linked service reference type.
 *
 * @property {string} referenceName Reference LinkedService name.
 * @property {object} [parameters] Arguments for LinkedService.
 */
export interface LinkedServiceReference {
  referenceName: string;
  parameters?: { [propertyName: string]: any };
}

/**
 * @class
 * Initializes a new instance of the AzureKeyVaultSecretReference class.
 * @constructor
 * Azure Key Vault secret reference.
 *
 * @property {object} store The Azure Key Vault linked service reference.
 * @property {string} [store.referenceName] Reference LinkedService name.
 * @property {object} [store.parameters] Arguments for LinkedService.
 * @property {object} secretName The name of the secret in Azure Key Vault.
 * Type: string (or Expression with resultType string).
 * @property {object} [secretVersion] The version of the secret in Azure Key
 * Vault. The default value is the latest version of the secret. Type: string
 * (or Expression with resultType string).
 */
export interface AzureKeyVaultSecretReference extends SecretBase {
  store: LinkedServiceReference;
  secretName: any;
  secretVersion?: any;
}

/**
 * @class
 * Initializes a new instance of the FactoryIdentity class.
 * @constructor
 * Identity properties of the factory resource.
 *
 * @property {uuid} [principalId] The principal id of the identity.
 * @property {uuid} [tenantId] The client tenant id of the identity.
 */
export interface FactoryIdentity {
  readonly principalId?: string;
  readonly tenantId?: string;
}

/**
 * @class
 * Initializes a new instance of the FactoryRepoConfiguration class.
 * @constructor
 * Factory's git repo information.
 *
 * @property {string} accountName Account name.
 * @property {string} repositoryName Rrepository name.
 * @property {string} collaborationBranch Collaboration branch.
 * @property {string} rootFolder Root folder.
 * @property {string} [lastCommitId] Last commit id.
 * @property {string} type Polymorphic Discriminator
 */
export interface FactoryRepoConfiguration {
  accountName: string;
  repositoryName: string;
  collaborationBranch: string;
  rootFolder: string;
  lastCommitId?: string;
  type: string;
}

/**
 * @class
 * Initializes a new instance of the Factory class.
 * @constructor
 * Factory resource type.
 *
 * @property {object} [identity] Managed service identity of the factory.
 * @property {uuid} [identity.principalId] The principal id of the identity.
 * @property {uuid} [identity.tenantId] The client tenant id of the identity.
 * @property {string} [provisioningState] Factory provisioning state, example
 * Succeeded.
 * @property {date} [createTime] Time the factory was created in ISO8601
 * format.
 * @property {string} [version] Version of the factory.
 * @property {object} [repoConfiguration] Git repo information of the factory.
 * @property {string} [repoConfiguration.accountName] Account name.
 * @property {string} [repoConfiguration.repositoryName] Rrepository name.
 * @property {string} [repoConfiguration.collaborationBranch] Collaboration
 * branch.
 * @property {string} [repoConfiguration.rootFolder] Root folder.
 * @property {string} [repoConfiguration.lastCommitId] Last commit id.
 * @property {string} [repoConfiguration.type] Polymorphic Discriminator
 */
export interface Factory extends Resource {
  identity?: FactoryIdentity;
  readonly provisioningState?: string;
  readonly createTime?: Date;
  readonly version?: string;
  repoConfiguration?: FactoryRepoConfiguration;
  /**
   * @property Describes unknown properties. The value of an unknown property
   * can be of "any" type.
   */
  [property: string]: any;
}

/**
 * @class
 * Initializes a new instance of the IntegrationRuntime class.
 * @constructor
 * Azure Data Factory nested object which serves as a compute resource for
 * activities.
 *
 * @property {string} [description] Integration runtime description.
 * @property {string} type Polymorphic Discriminator
 */
export interface IntegrationRuntime {
  description?: string;
  type: string;
  /**
   * @property Describes unknown properties. The value of an unknown property
   * can be of "any" type.
   */
  [property: string]: any;
}

/**
 * @class
 * Initializes a new instance of the IntegrationRuntimeResource class.
 * @constructor
 * Integration runtime resource type.
 *
 * @property {object} properties Integration runtime properties.
 * @property {string} [properties.description] Integration runtime description.
 * @property {string} [properties.type] Polymorphic Discriminator
 */
export interface IntegrationRuntimeResource extends SubResource {
  properties: IntegrationRuntime;
}

/**
 * @class
 * Initializes a new instance of the IntegrationRuntimeReference class.
 * @constructor
 * Integration runtime reference type.
 *
 * @property {string} referenceName Reference integration runtime name.
 * @property {object} [parameters] Arguments for integration runtime.
 */
export interface IntegrationRuntimeReference {
  referenceName: string;
  parameters?: { [propertyName: string]: any };
}

/**
 * @class
 * Initializes a new instance of the IntegrationRuntimeStatus class.
 * @constructor
 * Integration runtime status.
 *
 * @property {string} [dataFactoryName] The data factory name which the
 * integration runtime belong to.
 * @property {string} [state] The state of integration runtime. Possible values
 * include: 'Initial', 'Stopped', 'Started', 'Starting', 'Stopping',
 * 'NeedRegistration', 'Online', 'Limited', 'Offline', 'AccessDenied'
 * @property {string} type Polymorphic Discriminator
 */
export interface IntegrationRuntimeStatus {
  readonly dataFactoryName?: string;
  readonly state?: string;
  type: string;
  /**
   * @property Describes unknown properties. The value of an unknown property
   * can be of "any" type.
   */
  [property: string]: any;
}

/**
 * @class
 * Initializes a new instance of the IntegrationRuntimeStatusResponse class.
 * @constructor
 * Integration runtime status response.
 *
 * @property {string} [name] The integration runtime name.
 * @property {object} properties Integration runtime properties.
 * @property {string} [properties.dataFactoryName] The data factory name which
 * the integration runtime belong to.
 * @property {string} [properties.state] The state of integration runtime.
 * Possible values include: 'Initial', 'Stopped', 'Started', 'Starting',
 * 'Stopping', 'NeedRegistration', 'Online', 'Limited', 'Offline',
 * 'AccessDenied'
 * @property {string} [properties.type] Polymorphic Discriminator
 */
export interface IntegrationRuntimeStatusResponse {
  readonly name?: string;
  properties: IntegrationRuntimeStatus;
}

/**
 * @class
 * Initializes a new instance of the IntegrationRuntimeStatusListResponse class.
 * @constructor
 * A list of integration runtime status.
 *
 * @property {array} value List of integration runtime status.
 * @property {string} [nextLink] The link to the next page of results, if any
 * remaining results exist.
 */
export interface IntegrationRuntimeStatusListResponse {
  value: IntegrationRuntimeStatusResponse[];
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the UpdateIntegrationRuntimeRequest class.
 * @constructor
 * Update integration runtime request.
 *
 * @property {string} [autoUpdate] Enables or disables the auto-update feature
 * of the self-hosted integration runtime. See
 * https://go.microsoft.com/fwlink/?linkid=854189. Possible values include:
 * 'On', 'Off'
 * @property {string} [updateDelayOffset] The time offset (in hours) in the
 * day, e.g., PT03H is 3 hours. The integration runtime auto update will happen
 * on that time.
 */
export interface UpdateIntegrationRuntimeRequest {
  autoUpdate?: string;
  updateDelayOffset?: string;
}

/**
 * @class
 * Initializes a new instance of the UpdateIntegrationRuntimeNodeRequest class.
 * @constructor
 * Update integration runtime node request.
 *
 * @property {number} [concurrentJobsLimit] The number of concurrent jobs
 * permitted to run on the integration runtime node. Values between 1 and
 * maxConcurrentJobs(inclusive) are allowed.
 */
export interface UpdateIntegrationRuntimeNodeRequest {
  concurrentJobsLimit?: number;
}

/**
 * @class
 * Initializes a new instance of the LinkedIntegrationRuntimeRequest class.
 * @constructor
 * Data factory name for linked integration runtime request.
 *
 * @property {string} linkedFactoryName The data factory name for linked
 * integration runtime.
 */
export interface LinkedIntegrationRuntimeRequest {
  linkedFactoryName: string;
}

/**
 * @class
 * Initializes a new instance of the CreateLinkedIntegrationRuntimeRequest class.
 * @constructor
 * The linked integration runtime information.
 *
 * @property {string} [name] The name of the linked integration runtime.
 * @property {string} [subscriptionId] The ID of the subscription that the
 * linked integration runtime belongs to.
 * @property {string} [dataFactoryName] The name of the data factory that the
 * linked integration runtime belongs to.
 * @property {string} [dataFactoryLocation] The location of the data factory
 * that the linked integration runtime belongs to.
 */
export interface CreateLinkedIntegrationRuntimeRequest {
  name?: string;
  subscriptionId?: string;
  dataFactoryName?: string;
  dataFactoryLocation?: string;
}

/**
 * @class
 * Initializes a new instance of the ParameterSpecification class.
 * @constructor
 * Definition of a single parameter for an entity.
 *
 * @property {string} type Parameter type. Possible values include: 'Object',
 * 'String', 'Int', 'Float', 'Bool', 'Array', 'SecureString'
 * @property {object} [defaultValue] Default value of parameter.
 */
export interface ParameterSpecification {
  type: string;
  defaultValue?: any;
}

/**
 * @class
 * Initializes a new instance of the LinkedService class.
 * @constructor
 * The Azure Data Factory nested object which contains the information and
 * credential which can be used to connect with related store or compute
 * resource.
 *
 * @property {object} [connectVia] The integration runtime reference.
 * @property {string} [connectVia.referenceName] Reference integration runtime
 * name.
 * @property {object} [connectVia.parameters] Arguments for integration
 * runtime.
 * @property {string} [description] Linked service description.
 * @property {object} [parameters] Parameters for linked service.
 * @property {array} [annotations] List of tags that can be used for describing
 * the Dataset.
 * @property {string} type Polymorphic Discriminator
 */
export interface LinkedService {
  connectVia?: IntegrationRuntimeReference;
  description?: string;
  parameters?: { [propertyName: string]: ParameterSpecification };
  annotations?: any[];
  type: string;
  /**
   * @property Describes unknown properties. The value of an unknown property
   * can be of "any" type.
   */
  [property: string]: any;
}

/**
 * @class
 * Initializes a new instance of the LinkedServiceResource class.
 * @constructor
 * Linked service resource type.
 *
 * @property {object} properties Properties of linked service.
 * @property {object} [properties.connectVia] The integration runtime
 * reference.
 * @property {string} [properties.connectVia.referenceName] Reference
 * integration runtime name.
 * @property {object} [properties.connectVia.parameters] Arguments for
 * integration runtime.
 * @property {string} [properties.description] Linked service description.
 * @property {object} [properties.parameters] Parameters for linked service.
 * @property {array} [properties.annotations] List of tags that can be used for
 * describing the Dataset.
 * @property {string} [properties.type] Polymorphic Discriminator
 */
export interface LinkedServiceResource extends SubResource {
  properties: LinkedService;
}

/**
 * @class
 * Initializes a new instance of the DatasetFolder class.
 * @constructor
 * The folder that this Dataset is in. If not specified, Dataset will appear at
 * the root level.
 *
 * @property {string} [name] The name of the folder that this Dataset is in.
 */
export interface DatasetFolder {
  name?: string;
}

/**
 * @class
 * Initializes a new instance of the Dataset class.
 * @constructor
 * The Azure Data Factory nested object which identifies data within different
 * data stores, such as tables, files, folders, and documents.
 *
 * @property {string} [description] Dataset description.
 * @property {object} [structure] Columns that define the structure of the
 * dataset. Type: array (or Expression with resultType array), itemType:
 * DatasetDataElement.
 * @property {object} linkedServiceName Linked service reference.
 * @property {string} [linkedServiceName.referenceName] Reference LinkedService
 * name.
 * @property {object} [linkedServiceName.parameters] Arguments for
 * LinkedService.
 * @property {object} [parameters] Parameters for dataset.
 * @property {array} [annotations] List of tags that can be used for describing
 * the Dataset.
 * @property {object} [folder] The folder that this Dataset is in. If not
 * specified, Dataset will appear at the root level.
 * @property {string} [folder.name] The name of the folder that this Dataset is
 * in.
 * @property {string} type Polymorphic Discriminator
 */
export interface Dataset {
  description?: string;
  structure?: any;
  linkedServiceName: LinkedServiceReference;
  parameters?: { [propertyName: string]: ParameterSpecification };
  annotations?: any[];
  folder?: DatasetFolder;
  type: string;
  /**
   * @property Describes unknown properties. The value of an unknown property
   * can be of "any" type.
   */
  [property: string]: any;
}

/**
 * @class
 * Initializes a new instance of the DatasetResource class.
 * @constructor
 * Dataset resource type.
 *
 * @property {object} properties Dataset properties.
 * @property {string} [properties.description] Dataset description.
 * @property {object} [properties.structure] Columns that define the structure
 * of the dataset. Type: array (or Expression with resultType array), itemType:
 * DatasetDataElement.
 * @property {object} [properties.linkedServiceName] Linked service reference.
 * @property {string} [properties.linkedServiceName.referenceName] Reference
 * LinkedService name.
 * @property {object} [properties.linkedServiceName.parameters] Arguments for
 * LinkedService.
 * @property {object} [properties.parameters] Parameters for dataset.
 * @property {array} [properties.annotations] List of tags that can be used for
 * describing the Dataset.
 * @property {object} [properties.folder] The folder that this Dataset is in.
 * If not specified, Dataset will appear at the root level.
 * @property {string} [properties.folder.name] The name of the folder that this
 * Dataset is in.
 * @property {string} [properties.type] Polymorphic Discriminator
 */
export interface DatasetResource extends SubResource {
  properties: Dataset;
}

/**
 * @class
 * Initializes a new instance of the ActivityDependency class.
 * @constructor
 * Activity dependency information.
 *
 * @property {string} activity Activity name.
 * @property {array} dependencyConditions Match-Condition for the dependency.
 */
export interface ActivityDependency {
  activity: string;
  dependencyConditions: string[];
  /**
   * @property Describes unknown properties. The value of an unknown property
   * can be of "any" type.
   */
  [property: string]: any;
}

/**
 * @class
 * Initializes a new instance of the UserProperty class.
 * @constructor
 * User property.
 *
 * @property {string} name User proprety name.
 * @property {object} value User proprety value. Type: string (or Expression
 * with resultType string).
 */
export interface UserProperty {
  name: string;
  value: any;
}

/**
 * @class
 * Initializes a new instance of the Activity class.
 * @constructor
 * A pipeline activity.
 *
 * @property {string} name Activity name.
 * @property {string} [description] Activity description.
 * @property {array} [dependsOn] Activity depends on condition.
 * @property {array} [userProperties] Activity user properties.
 * @property {string} type Polymorphic Discriminator
 */
export interface Activity {
  name: string;
  description?: string;
  dependsOn?: ActivityDependency[];
  userProperties?: UserProperty[];
  type: string;
  /**
   * @property Describes unknown properties. The value of an unknown property
   * can be of "any" type.
   */
  [property: string]: any;
}

/**
 * @class
 * Initializes a new instance of the VariableSpecification class.
 * @constructor
 * Definition of a single variable for a Pipeline.
 *
 * @property {string} type Variable type. Possible values include: 'String',
 * 'Bool', 'Array'
 * @property {object} [defaultValue] Default value of variable.
 */
export interface VariableSpecification {
  type: string;
  defaultValue?: any;
}

/**
 * @class
 * Initializes a new instance of the PipelineFolder class.
 * @constructor
 * The folder that this Pipeline is in. If not specified, Pipeline will appear
 * at the root level.
 *
 * @property {string} [name] The name of the folder that this Pipeline is in.
 */
export interface PipelineFolder {
  name?: string;
}

/**
 * @class
 * Initializes a new instance of the PipelineResource class.
 * @constructor
 * Pipeline resource type.
 *
 * @property {string} [description] The description of the pipeline.
 * @property {array} [activities] List of activities in pipeline.
 * @property {object} [parameters] List of parameters for pipeline.
 * @property {object} [variables] List of variables for pipeline.
 * @property {number} [concurrency] The max number of concurrent runs for the
 * pipeline.
 * @property {array} [annotations] List of tags that can be used for describing
 * the Pipeline.
 * @property {object} [folder] The folder that this Pipeline is in. If not
 * specified, Pipeline will appear at the root level.
 * @property {string} [folder.name] The name of the folder that this Pipeline
 * is in.
 */
export interface PipelineResource extends SubResource {
  description?: string;
  activities?: Activity[];
  parameters?: { [propertyName: string]: ParameterSpecification };
  variables?: { [propertyName: string]: VariableSpecification };
  concurrency?: number;
  annotations?: any[];
  folder?: PipelineFolder;
  /**
   * @property Describes unknown properties. The value of an unknown property
   * can be of "any" type.
   */
  [property: string]: any;
}

/**
 * @class
 * Initializes a new instance of the Trigger class.
 * @constructor
 * Azure data factory nested object which contains information about creating
 * pipeline run
 *
 * @property {string} [description] Trigger description.
 * @property {string} [runtimeState] Indicates if trigger is running or not.
 * Updated when Start/Stop APIs are called on the Trigger. Possible values
 * include: 'Started', 'Stopped', 'Disabled'
 * @property {string} type Polymorphic Discriminator
 */
export interface Trigger {
  description?: string;
  readonly runtimeState?: string;
  type: string;
  /**
   * @property Describes unknown properties. The value of an unknown property
   * can be of "any" type.
   */
  [property: string]: any;
}

/**
 * @class
 * Initializes a new instance of the TriggerResource class.
 * @constructor
 * Trigger resource type.
 *
 * @property {object} properties Properties of the trigger.
 * @property {string} [properties.description] Trigger description.
 * @property {string} [properties.runtimeState] Indicates if trigger is running
 * or not. Updated when Start/Stop APIs are called on the Trigger. Possible
 * values include: 'Started', 'Stopped', 'Disabled'
 * @property {string} [properties.type] Polymorphic Discriminator
 */
export interface TriggerResource extends SubResource {
  properties: Trigger;
}

/**
 * @class
 * Initializes a new instance of the CreateRunResponse class.
 * @constructor
 * Response body with a run identifier.
 *
 * @property {string} runId Identifier of a run.
 */
export interface CreateRunResponse {
  runId: string;
}

/**
 * @class
 * Initializes a new instance of the FactoryVSTSConfiguration class.
 * @constructor
 * Factory's VSTS repo information.
 *
 * @property {string} projectName VSTS project name.
 * @property {string} [tenantId] VSTS tenant id.
 */
export interface FactoryVSTSConfiguration extends FactoryRepoConfiguration {
  projectName: string;
  tenantId?: string;
}

/**
 * @class
 * Initializes a new instance of the FactoryGitHubConfiguration class.
 * @constructor
 * Factory's GitHub repo information.
 *
 * @property {string} [hostName] GitHub Enterprise host name. For example:
 * https://github.mydomain.com
 */
export interface FactoryGitHubConfiguration extends FactoryRepoConfiguration {
  hostName?: string;
}

/**
 * @class
 * Initializes a new instance of the FactoryRepoUpdate class.
 * @constructor
 * Factory's git repo information.
 *
 * @property {string} [factoryResourceId] The factory resource id.
 * @property {object} [repoConfiguration] Git repo information of the factory.
 * @property {string} [repoConfiguration.accountName] Account name.
 * @property {string} [repoConfiguration.repositoryName] Rrepository name.
 * @property {string} [repoConfiguration.collaborationBranch] Collaboration
 * branch.
 * @property {string} [repoConfiguration.rootFolder] Root folder.
 * @property {string} [repoConfiguration.lastCommitId] Last commit id.
 * @property {string} [repoConfiguration.type] Polymorphic Discriminator
 */
export interface FactoryRepoUpdate {
  factoryResourceId?: string;
  repoConfiguration?: FactoryRepoConfiguration;
}

/**
 * @class
 * Initializes a new instance of the GitHubAccessTokenRequest class.
 * @constructor
 * Get GitHub access token request definition.
 *
 * @property {string} gitHubAccessCode GitHub access code.
 * @property {string} [gitHubClientId] GitHub application client ID.
 * @property {string} gitHubAccessTokenBaseUrl GitHub access token base URL.
 */
export interface GitHubAccessTokenRequest {
  gitHubAccessCode: string;
  gitHubClientId?: string;
  gitHubAccessTokenBaseUrl: string;
}

/**
 * @class
 * Initializes a new instance of the GitHubAccessTokenResponse class.
 * @constructor
 * Get GitHub access token response definition.
 *
 * @property {string} [gitHubAccessToken] GitHub access token.
 */
export interface GitHubAccessTokenResponse {
  gitHubAccessToken?: string;
}

/**
 * @class
 * Initializes a new instance of the PipelineReference class.
 * @constructor
 * Pipeline reference type.
 *
 * @property {string} referenceName Reference pipeline name.
 * @property {string} [name] Reference name.
 */
export interface PipelineReference {
  referenceName: string;
  name?: string;
}

/**
 * @class
 * Initializes a new instance of the TriggerPipelineReference class.
 * @constructor
 * Pipeline that needs to be triggered with the given parameters.
 *
 * @property {object} [pipelineReference] Pipeline reference.
 * @property {string} [pipelineReference.referenceName] Reference pipeline
 * name.
 * @property {string} [pipelineReference.name] Reference name.
 * @property {object} [parameters] Pipeline parameters.
 */
export interface TriggerPipelineReference {
  pipelineReference?: PipelineReference;
  parameters?: { [propertyName: string]: any };
}

/**
 * @class
 * Initializes a new instance of the FactoryUpdateParameters class.
 * @constructor
 * Parameters for updating a factory resource.
 *
 * @property {object} [tags] The resource tags.
 * @property {object} [identity] Managed service identity of the factory.
 * @property {uuid} [identity.principalId] The principal id of the identity.
 * @property {uuid} [identity.tenantId] The client tenant id of the identity.
 */
export interface FactoryUpdateParameters {
  tags?: { [propertyName: string]: string };
  identity?: FactoryIdentity;
}

/**
 * @class
 * Initializes a new instance of the DatasetReference class.
 * @constructor
 * Dataset reference type.
 *
 * @property {string} referenceName Reference dataset name.
 * @property {object} [parameters] Arguments for dataset.
 */
export interface DatasetReference {
  referenceName: string;
  parameters?: { [propertyName: string]: any };
}

/**
 * @class
 * Initializes a new instance of the RunQueryFilter class.
 * @constructor
 * Query filter option for listing runs.
 *
 * @property {string} operand Parameter name to be used for filter. The allowed
 * operands to query pipeline runs are PipelineName, RunStart, RunEnd and
 * Status; to query activity runs are ActivityName, ActivityRunStart,
 * ActivityRunEnd, ActivityType and Status, and to query trigger runs are
 * TriggerName, TriggerRunTimestamp and Status. Possible values include:
 * 'PipelineName', 'Status', 'RunStart', 'RunEnd', 'ActivityName',
 * 'ActivityRunStart', 'ActivityRunEnd', 'ActivityType', 'TriggerName',
 * 'TriggerRunTimestamp'
 * @property {string} operator Operator to be used for filter. Possible values
 * include: 'Equals', 'NotEquals', 'In', 'NotIn'
 * @property {array} values List of filter values.
 */
export interface RunQueryFilter {
  operand: string;
  operator: string;
  values: string[];
}

/**
 * @class
 * Initializes a new instance of the RunQueryOrderBy class.
 * @constructor
 * An object to provide order by options for listing runs.
 *
 * @property {string} orderBy Parameter name to be used for order by. The
 * allowed parameters to order by for pipeline runs are PipelineName, RunStart,
 * RunEnd and Status; for activity runs are ActivityName, ActivityRunStart,
 * ActivityRunEnd and Status; for trigger runs are TriggerName,
 * TriggerRunTimestamp and Status. Possible values include: 'RunStart',
 * 'RunEnd', 'PipelineName', 'Status', 'ActivityName', 'ActivityRunStart',
 * 'ActivityRunEnd', 'TriggerName', 'TriggerRunTimestamp'
 * @property {string} order Sorting order of the parameter. Possible values
 * include: 'ASC', 'DESC'
 */
export interface RunQueryOrderBy {
  orderBy: string;
  order: string;
}

/**
 * @class
 * Initializes a new instance of the RunFilterParameters class.
 * @constructor
 * Query parameters for listing runs.
 *
 * @property {string} [continuationToken] The continuation token for getting
 * the next page of results. Null for first page.
 * @property {date} lastUpdatedAfter The time at or after which the run event
 * was updated in 'ISO 8601' format.
 * @property {date} lastUpdatedBefore The time at or before which the run event
 * was updated in 'ISO 8601' format.
 * @property {array} [filters] List of filters.
 * @property {array} [orderBy] List of OrderBy option.
 */
export interface RunFilterParameters {
  continuationToken?: string;
  lastUpdatedAfter: Date;
  lastUpdatedBefore: Date;
  filters?: RunQueryFilter[];
  orderBy?: RunQueryOrderBy[];
}

/**
 * @class
 * Initializes a new instance of the PipelineRunInvokedBy class.
 * @constructor
 * Provides entity name and id that started the pipeline run.
 *
 * @property {string} [name] Name of the entity that started the pipeline run.
 * @property {string} [id] The ID of the entity that started the run.
 * @property {string} [invokedByType] The type of the entity that started the
 * run.
 */
export interface PipelineRunInvokedBy {
  readonly name?: string;
  readonly id?: string;
  readonly invokedByType?: string;
}

/**
 * @class
 * Initializes a new instance of the PipelineRun class.
 * @constructor
 * Information about a pipeline run.
 *
 * @property {string} [runId] Identifier of a run.
 * @property {string} [pipelineName] The pipeline name.
 * @property {object} [parameters] The full or partial list of parameter name,
 * value pair used in the pipeline run.
 * @property {object} [invokedBy] Entity that started the pipeline run.
 * @property {string} [invokedBy.name] Name of the entity that started the
 * pipeline run.
 * @property {string} [invokedBy.id] The ID of the entity that started the run.
 * @property {string} [invokedBy.invokedByType] The type of the entity that
 * started the run.
 * @property {date} [lastUpdated] The last updated timestamp for the pipeline
 * run event in ISO8601 format.
 * @property {date} [runStart] The start time of a pipeline run in ISO8601
 * format.
 * @property {date} [runEnd] The end time of a pipeline run in ISO8601 format.
 * @property {number} [durationInMs] The duration of a pipeline run.
 * @property {string} [status] The status of a pipeline run.
 * @property {string} [message] The message from a pipeline run.
 */
export interface PipelineRun {
  readonly runId?: string;
  readonly pipelineName?: string;
  readonly parameters?: { [propertyName: string]: string };
  readonly invokedBy?: PipelineRunInvokedBy;
  readonly lastUpdated?: Date;
  readonly runStart?: Date;
  readonly runEnd?: Date;
  readonly durationInMs?: number;
  readonly status?: string;
  readonly message?: string;
  /**
   * @property Describes unknown properties. The value of an unknown property
   * can be of "any" type.
   */
  [property: string]: any;
}

/**
 * @class
 * Initializes a new instance of the PipelineRunsQueryResponse class.
 * @constructor
 * A list pipeline runs.
 *
 * @property {array} value List of pipeline runs.
 * @property {string} [continuationToken] The continuation token for getting
 * the next page of results, if any remaining results exist, null otherwise.
 */
export interface PipelineRunsQueryResponse {
  value: PipelineRun[];
  continuationToken?: string;
}

/**
 * @class
 * Initializes a new instance of the ActivityRun class.
 * @constructor
 * Information about an activity run in a pipeline.
 *
 * @property {string} [pipelineName] The name of the pipeline.
 * @property {string} [pipelineRunId] The id of the pipeline run.
 * @property {string} [activityName] The name of the activity.
 * @property {string} [activityType] The type of the activity.
 * @property {string} [activityRunId] The id of the activity run.
 * @property {string} [linkedServiceName] The name of the compute linked
 * service.
 * @property {string} [status] The status of the activity run.
 * @property {date} [activityRunStart] The start time of the activity run in
 * 'ISO 8601' format.
 * @property {date} [activityRunEnd] The end time of the activity run in 'ISO
 * 8601' format.
 * @property {number} [durationInMs] The duration of the activity run.
 * @property {object} [input] The input for the activity.
 * @property {object} [output] The output for the activity.
 * @property {object} [error] The error if any from the activity run.
 */
export interface ActivityRun {
  readonly pipelineName?: string;
  readonly pipelineRunId?: string;
  readonly activityName?: string;
  readonly activityType?: string;
  readonly activityRunId?: string;
  readonly linkedServiceName?: string;
  readonly status?: string;
  readonly activityRunStart?: Date;
  readonly activityRunEnd?: Date;
  readonly durationInMs?: number;
  readonly input?: any;
  readonly output?: any;
  readonly error?: any;
  /**
   * @property Describes unknown properties. The value of an unknown property
   * can be of "any" type.
   */
  [property: string]: any;
}

/**
 * @class
 * Initializes a new instance of the ActivityRunsQueryResponse class.
 * @constructor
 * A list activity runs.
 *
 * @property {array} value List of activity runs.
 * @property {string} [continuationToken] The continuation token for getting
 * the next page of results, if any remaining results exist, null otherwise.
 */
export interface ActivityRunsQueryResponse {
  value: ActivityRun[];
  continuationToken?: string;
}

/**
 * @class
 * Initializes a new instance of the TriggerRun class.
 * @constructor
 * Trigger runs.
 *
 * @property {string} [triggerRunId] Trigger run id.
 * @property {string} [triggerName] Trigger name.
 * @property {string} [triggerType] Trigger type.
 * @property {date} [triggerRunTimestamp] Trigger run start time.
 * @property {string} [status] Trigger run status. Possible values include:
 * 'Succeeded', 'Failed', 'Inprogress'
 * @property {string} [message] Trigger error message.
 * @property {object} [properties] List of property name and value related to
 * trigger run. Name, value pair depends on type of trigger.
 * @property {object} [triggeredPipelines] List of pipeline name and run Id
 * triggered by the trigger run.
 */
export interface TriggerRun {
  readonly triggerRunId?: string;
  readonly triggerName?: string;
  readonly triggerType?: string;
  readonly triggerRunTimestamp?: Date;
  readonly status?: string;
  readonly message?: string;
  readonly properties?: { [propertyName: string]: string };
  readonly triggeredPipelines?: { [propertyName: string]: string };
  /**
   * @property Describes unknown properties. The value of an unknown property
   * can be of "any" type.
   */
  [property: string]: any;
}

/**
 * @class
 * Initializes a new instance of the TriggerRunsQueryResponse class.
 * @constructor
 * A list of trigger runs.
 *
 * @property {array} value List of trigger runs.
 * @property {string} [continuationToken] The continuation token for getting
 * the next page of results, if any remaining results exist, null otherwise.
 */
export interface TriggerRunsQueryResponse {
  value: TriggerRun[];
  continuationToken?: string;
}

/**
 * @class
 * Initializes a new instance of the RerunTumblingWindowTriggerActionParameters class.
 * @constructor
 * Rerun tumbling window trigger Parameters.
 *
 * @property {date} startTime The start time for the time period for which
 * restatement is initiated. Only UTC time is currently supported.
 * @property {date} endTime The end time for the time period for which
 * restatement is initiated. Only UTC time is currently supported.
 * @property {number} maxConcurrency The max number of parallel time windows
 * (ready for execution) for which a rerun is triggered.
 */
export interface RerunTumblingWindowTriggerActionParameters {
  startTime: Date;
  endTime: Date;
  maxConcurrency: number;
}

/**
 * @class
 * Initializes a new instance of the RerunTumblingWindowTrigger class.
 * @constructor
 * Trigger that schedules pipeline reruns for all fixed time interval windows
 * from a requested start time to requested end time.
 *
 * @property {object} [parentTrigger] The parent trigger reference.
 * @property {date} requestedStartTime The start time for the time period for
 * which restatement is initiated. Only UTC time is currently supported.
 * @property {date} requestedEndTime The end time for the time period for which
 * restatement is initiated. Only UTC time is currently supported.
 * @property {number} maxConcurrency The max number of parallel time windows
 * (ready for execution) for which a rerun is triggered.
 */
export interface RerunTumblingWindowTrigger extends Trigger {
  parentTrigger?: any;
  requestedStartTime: Date;
  requestedEndTime: Date;
  maxConcurrency: number;
}

/**
 * @class
 * Initializes a new instance of the RerunTriggerResource class.
 * @constructor
 * RerunTrigger resource type.
 *
 * @property {object} properties Properties of the rerun trigger.
 * @property {object} [properties.parentTrigger] The parent trigger reference.
 * @property {date} [properties.requestedStartTime] The start time for the time
 * period for which restatement is initiated. Only UTC time is currently
 * supported.
 * @property {date} [properties.requestedEndTime] The end time for the time
 * period for which restatement is initiated. Only UTC time is currently
 * supported.
 * @property {number} [properties.maxConcurrency] The max number of parallel
 * time windows (ready for execution) for which a rerun is triggered.
 */
export interface RerunTriggerResource extends SubResource {
  properties: RerunTumblingWindowTrigger;
}

/**
 * @class
 * Initializes a new instance of the OperationDisplay class.
 * @constructor
 * Metadata associated with the operation.
 *
 * @property {string} [description] The description of the operation.
 * @property {string} [provider] The name of the provider.
 * @property {string} [resource] The name of the resource type on which the
 * operation is performed.
 * @property {string} [operation] The type of operation: get, read, delete,
 * etc.
 */
export interface OperationDisplay {
  description?: string;
  provider?: string;
  resource?: string;
  operation?: string;
}

/**
 * @class
 * Initializes a new instance of the OperationLogSpecification class.
 * @constructor
 * Details about an operation related to logs.
 *
 * @property {string} [name] The name of the log category.
 * @property {string} [displayName] Localized display name.
 * @property {string} [blobDuration] Blobs created in the customer storage
 * account, per hour.
 */
export interface OperationLogSpecification {
  name?: string;
  displayName?: string;
  blobDuration?: string;
}

/**
 * @class
 * Initializes a new instance of the OperationMetricAvailability class.
 * @constructor
 * Defines how often data for a metric becomes available.
 *
 * @property {string} [timeGrain] The granularity for the metric.
 * @property {string} [blobDuration] Blob created in the customer storage
 * account, per hour.
 */
export interface OperationMetricAvailability {
  timeGrain?: string;
  blobDuration?: string;
}

/**
 * @class
 * Initializes a new instance of the OperationMetricDimension class.
 * @constructor
 * Defines the metric dimension.
 *
 * @property {string} [name] The name of the dimension for the metric.
 * @property {string} [displayName] The display name of the metric dimension.
 * @property {boolean} [toBeExportedForShoebox] Whether the dimension should be
 * exported to Azure Monitor.
 */
export interface OperationMetricDimension {
  name?: string;
  displayName?: string;
  toBeExportedForShoebox?: boolean;
}

/**
 * @class
 * Initializes a new instance of the OperationMetricSpecification class.
 * @constructor
 * Details about an operation related to metrics.
 *
 * @property {string} [name] The name of the metric.
 * @property {string} [displayName] Localized display name of the metric.
 * @property {string} [displayDescription] The description of the metric.
 * @property {string} [unit] The unit that the metric is measured in.
 * @property {string} [aggregationType] The type of metric aggregation.
 * @property {string} [enableRegionalMdmAccount] Whether or not the service is
 * using regional MDM accounts.
 * @property {string} [sourceMdmAccount] The name of the MDM account.
 * @property {string} [sourceMdmNamespace] The name of the MDM namespace.
 * @property {array} [availabilities] Defines how often data for metrics
 * becomes available.
 * @property {array} [dimensions] Defines the metric dimension.
 */
export interface OperationMetricSpecification {
  name?: string;
  displayName?: string;
  displayDescription?: string;
  unit?: string;
  aggregationType?: string;
  enableRegionalMdmAccount?: string;
  sourceMdmAccount?: string;
  sourceMdmNamespace?: string;
  availabilities?: OperationMetricAvailability[];
  dimensions?: OperationMetricDimension[];
}

/**
 * @class
 * Initializes a new instance of the OperationServiceSpecification class.
 * @constructor
 * Details about a service operation.
 *
 * @property {array} [logSpecifications] Details about operations related to
 * logs.
 * @property {array} [metricSpecifications] Details about operations related to
 * metrics.
 */
export interface OperationServiceSpecification {
  logSpecifications?: OperationLogSpecification[];
  metricSpecifications?: OperationMetricSpecification[];
}

/**
 * @class
 * Initializes a new instance of the Operation class.
 * @constructor
 * Azure Data Factory API operation definition.
 *
 * @property {string} [name] Operation name: {provider}/{resource}/{operation}
 * @property {string} [origin] The intended executor of the operation.
 * @property {object} [display] Metadata associated with the operation.
 * @property {string} [display.description] The description of the operation.
 * @property {string} [display.provider] The name of the provider.
 * @property {string} [display.resource] The name of the resource type on which
 * the operation is performed.
 * @property {string} [display.operation] The type of operation: get, read,
 * delete, etc.
 * @property {object} [serviceSpecification] Details about a service operation.
 * @property {array} [serviceSpecification.logSpecifications] Details about
 * operations related to logs.
 * @property {array} [serviceSpecification.metricSpecifications] Details about
 * operations related to metrics.
 */
export interface Operation {
  name?: string;
  origin?: string;
  display?: OperationDisplay;
  serviceSpecification?: OperationServiceSpecification;
}

/**
 * @class
 * Initializes a new instance of the DependencyReference class.
 * @constructor
 * Referenced dependency.
 *
 * @property {string} type Polymorphic Discriminator
 */
export interface DependencyReference {
  type: string;
}

/**
 * @class
 * Initializes a new instance of the SelfDependencyTumblingWindowTriggerReference class.
 * @constructor
 * Self referenced tumbling window trigger dependency.
 *
 * @property {string} offset Timespan applied to the start time of a tumbling
 * window when evaluating dependency.
 * @property {string} [size] The size of the window when evaluating the
 * dependency. If undefined the frequency of the tumbling window will be used.
 */
export interface SelfDependencyTumblingWindowTriggerReference extends DependencyReference {
  offset: string;
  size?: string;
}

/**
 * @class
 * Initializes a new instance of the TriggerReference class.
 * @constructor
 * Trigger reference type.
 *
 * @property {string} referenceName Reference trigger name.
 */
export interface TriggerReference {
  referenceName: string;
}

/**
 * @class
 * Initializes a new instance of the TriggerDependencyReference class.
 * @constructor
 * Trigger referenced dependency.
 *
 * @property {object} referenceTrigger Referenced trigger.
 * @property {string} [referenceTrigger.referenceName] Reference trigger name.
 */
export interface TriggerDependencyReference extends DependencyReference {
  referenceTrigger: TriggerReference;
}

/**
 * @class
 * Initializes a new instance of the TumblingWindowTriggerDependencyReference class.
 * @constructor
 * Referenced tumbling window trigger dependency.
 *
 * @property {string} [offset] Timespan applied to the start time of a tumbling
 * window when evaluating dependency.
 * @property {string} [size] The size of the window when evaluating the
 * dependency. If undefined the frequency of the tumbling window will be used.
 */
export interface TumblingWindowTriggerDependencyReference extends TriggerDependencyReference {
  offset?: string;
  size?: string;
}

/**
 * @class
 * Initializes a new instance of the RetryPolicy class.
 * @constructor
 * Execution policy for an activity.
 *
 * @property {object} [count] Maximum ordinary retry attempts. Default is 0.
 * Type: integer (or Expression with resultType integer), minimum: 0.
 * @property {number} [intervalInSeconds] Interval between retries in seconds.
 * Default is 30.
 */
export interface RetryPolicy {
  count?: any;
  intervalInSeconds?: number;
}

/**
 * @class
 * Initializes a new instance of the TumblingWindowTrigger class.
 * @constructor
 * Trigger that schedules pipeline runs for all fixed time interval windows
 * from a start time without gaps and also supports backfill scenarios (when
 * start time is in the past).
 *
 * @property {object} pipelineProperty Pipeline for which runs are created when
 * an event is fired for trigger window that is ready.
 * @property {object} [pipelineProperty.pipelineReference] Pipeline reference.
 * @property {string} [pipelineProperty.pipelineReference.referenceName]
 * Reference pipeline name.
 * @property {string} [pipelineProperty.pipelineReference.name] Reference name.
 * @property {object} [pipelineProperty.parameters] Pipeline parameters.
 * @property {string} frequency The frequency of the time windows. Possible
 * values include: 'Minute', 'Hour'
 * @property {number} interval The interval of the time windows. The minimum
 * interval allowed is 15 Minutes.
 * @property {date} startTime The start time for the time period for the
 * trigger during which events are fired for windows that are ready. Only UTC
 * time is currently supported.
 * @property {date} [endTime] The end time for the time period for the trigger
 * during which events are fired for windows that are ready. Only UTC time is
 * currently supported.
 * @property {object} [delay] Specifies how long the trigger waits past due
 * time before triggering new run. It doesn't alter window start and end time.
 * The default is 0. Type: string (or Expression with resultType string),
 * pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
 * @property {number} maxConcurrency The max number of parallel time windows
 * (ready for execution) for which a new run is triggered.
 * @property {object} [retryPolicy] Retry policy that will be applied for
 * failed pipeline runs.
 * @property {object} [retryPolicy.count] Maximum ordinary retry attempts.
 * Default is 0. Type: integer (or Expression with resultType integer),
 * minimum: 0.
 * @property {number} [retryPolicy.intervalInSeconds] Interval between retries
 * in seconds. Default is 30.
 * @property {array} [dependsOn] Triggers that this trigger depends on. Only
 * tumbling window triggers are supported.
 */
export interface TumblingWindowTrigger extends Trigger {
  pipelineProperty: TriggerPipelineReference;
  frequency: string;
  interval: number;
  startTime: Date;
  endTime?: Date;
  delay?: any;
  maxConcurrency: number;
  retryPolicy?: RetryPolicy;
  dependsOn?: DependencyReference[];
}

/**
 * @class
 * Initializes a new instance of the MultiplePipelineTrigger class.
 * @constructor
 * Base class for all triggers that support one to many model for trigger to
 * pipeline.
 *
 * @property {array} [pipelines] Pipelines that need to be started.
 */
export interface MultiplePipelineTrigger extends Trigger {
  pipelines?: TriggerPipelineReference[];
}

/**
 * @class
 * Initializes a new instance of the BlobEventsTrigger class.
 * @constructor
 * Trigger that runs everytime a Blob event occurs.
 *
 * @property {string} [blobPathBeginsWith] The blob path must begin with the
 * pattern provided for trigger to fire. For example,
 * '/records/blobs/december/' will only fire the trigger for blobs in the
 * december folder under the records container. At least one of these must be
 * provided: blobPathBeginsWith, blobPathEndsWith.
 * @property {string} [blobPathEndsWith] The blob path must end with the
 * pattern provided for trigger to fire. For example, 'december/boxes.csv' will
 * only fire the trigger for blobs named boxes in a december folder. At least
 * one of these must be provided: blobPathBeginsWith, blobPathEndsWith.
 * @property {array} events The type of events that cause this trigger to fire.
 * @property {string} scope The ARM resource ID of the Storage Account.
 */
export interface BlobEventsTrigger extends MultiplePipelineTrigger {
  blobPathBeginsWith?: string;
  blobPathEndsWith?: string;
  events: string[];
  scope: string;
}

/**
 * @class
 * Initializes a new instance of the BlobTrigger class.
 * @constructor
 * Trigger that runs everytime the selected Blob container changes.
 *
 * @property {string} folderPath The path of the container/folder that will
 * trigger the pipeline.
 * @property {number} maxConcurrency The max number of parallel files to handle
 * when it is triggered.
 * @property {object} linkedService The Azure Storage linked service reference.
 * @property {string} [linkedService.referenceName] Reference LinkedService
 * name.
 * @property {object} [linkedService.parameters] Arguments for LinkedService.
 */
export interface BlobTrigger extends MultiplePipelineTrigger {
  folderPath: string;
  maxConcurrency: number;
  linkedService: LinkedServiceReference;
}

/**
 * @class
 * Initializes a new instance of the RecurrenceScheduleOccurrence class.
 * @constructor
 * The recurrence schedule occurence.
 *
 * @property {string} [day] The day of the week. Possible values include:
 * 'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'
 * @property {number} [occurrence] The occurrence.
 */
export interface RecurrenceScheduleOccurrence {
  day?: string;
  occurrence?: number;
  /**
   * @property Describes unknown properties. The value of an unknown property
   * can be of "any" type.
   */
  [property: string]: any;
}

/**
 * @class
 * Initializes a new instance of the RecurrenceSchedule class.
 * @constructor
 * The recurrence schedule.
 *
 * @property {array} [minutes] The minutes.
 * @property {array} [hours] The hours.
 * @property {array} [weekDays] The days of the week.
 * @property {array} [monthDays] The month days.
 * @property {array} [monthlyOccurrences] The monthly occurrences.
 */
export interface RecurrenceSchedule {
  minutes?: number[];
  hours?: number[];
  weekDays?: string[];
  monthDays?: number[];
  monthlyOccurrences?: RecurrenceScheduleOccurrence[];
  /**
   * @property Describes unknown properties. The value of an unknown property
   * can be of "any" type.
   */
  [property: string]: any;
}

/**
 * @class
 * Initializes a new instance of the ScheduleTriggerRecurrence class.
 * @constructor
 * The workflow trigger recurrence.
 *
 * @property {string} [frequency] The frequency. Possible values include:
 * 'NotSpecified', 'Minute', 'Hour', 'Day', 'Week', 'Month', 'Year'
 * @property {number} [interval] The interval.
 * @property {date} [startTime] The start time.
 * @property {date} [endTime] The end time.
 * @property {string} [timeZone] The time zone.
 * @property {object} [schedule] The recurrence schedule.
 * @property {array} [schedule.minutes] The minutes.
 * @property {array} [schedule.hours] The hours.
 * @property {array} [schedule.weekDays] The days of the week.
 * @property {array} [schedule.monthDays] The month days.
 * @property {array} [schedule.monthlyOccurrences] The monthly occurrences.
 */
export interface ScheduleTriggerRecurrence {
  frequency?: string;
  interval?: number;
  startTime?: Date;
  endTime?: Date;
  timeZone?: string;
  schedule?: RecurrenceSchedule;
  /**
   * @property Describes unknown properties. The value of an unknown property
   * can be of "any" type.
   */
  [property: string]: any;
}

/**
 * @class
 * Initializes a new instance of the ScheduleTrigger class.
 * @constructor
 * Trigger that creates pipeline runs periodically, on schedule.
 *
 * @property {object} recurrence Recurrence schedule configuration.
 * @property {string} [recurrence.frequency] The frequency. Possible values
 * include: 'NotSpecified', 'Minute', 'Hour', 'Day', 'Week', 'Month', 'Year'
 * @property {number} [recurrence.interval] The interval.
 * @property {date} [recurrence.startTime] The start time.
 * @property {date} [recurrence.endTime] The end time.
 * @property {string} [recurrence.timeZone] The time zone.
 * @property {object} [recurrence.schedule] The recurrence schedule.
 * @property {array} [recurrence.schedule.minutes] The minutes.
 * @property {array} [recurrence.schedule.hours] The hours.
 * @property {array} [recurrence.schedule.weekDays] The days of the week.
 * @property {array} [recurrence.schedule.monthDays] The month days.
 * @property {array} [recurrence.schedule.monthlyOccurrences] The monthly
 * occurrences.
 */
export interface ScheduleTrigger extends MultiplePipelineTrigger {
  recurrence: ScheduleTriggerRecurrence;
}

/**
 * @class
 * Initializes a new instance of the ResponsysLinkedService class.
 * @constructor
 * Responsys linked service.
 *
 * @property {object} endpoint The endpoint of the Responsys server.
 * @property {object} clientId The client ID associated with the Responsys
 * application. Type: string (or Expression with resultType string).
 * @property {object} [clientSecret] The client secret associated with the
 * Responsys application. Type: string (or Expression with resultType string).
 * @property {string} [clientSecret.type] Polymorphic Discriminator
 * @property {object} [useEncryptedEndpoints] Specifies whether the data source
 * endpoints are encrypted using HTTPS. The default value is true. Type:
 * boolean (or Expression with resultType boolean).
 * @property {object} [useHostVerification] Specifies whether to require the
 * host name in the server's certificate to match the host name of the server
 * when connecting over SSL. The default value is true. Type: boolean (or
 * Expression with resultType boolean).
 * @property {object} [usePeerVerification] Specifies whether to verify the
 * identity of the server when connecting over SSL. The default value is true.
 * Type: boolean (or Expression with resultType boolean).
 * @property {object} [encryptedCredential] The encrypted credential used for
 * authentication. Credentials are encrypted using the integration runtime
 * credential manager. Type: string (or Expression with resultType string).
 */
export interface ResponsysLinkedService extends LinkedService {
  endpoint: any;
  clientId: any;
  clientSecret?: SecretBase;
  useEncryptedEndpoints?: any;
  useHostVerification?: any;
  usePeerVerification?: any;
  encryptedCredential?: any;
}

/**
 * @class
 * Initializes a new instance of the AzureDatabricksLinkedService class.
 * @constructor
 * Azure Databricks linked service.
 *
 * @property {object} domain <REGION>.azuredatabricks.net, domain name of your
 * Databricks deployment. Type: string (or Expression with resultType string).
 * @property {object} accessToken Access token for databricks REST API. Refer
 * to https://docs.azuredatabricks.net/api/latest/authentication.html. Type:
 * string (or Expression with resultType string).
 * @property {string} [accessToken.type] Polymorphic Discriminator
 * @property {object} [existingClusterId] The id of an existing cluster that
 * will be used for all runs of this job. Type: string (or Expression with
 * resultType string).
 * @property {object} [newClusterVersion] The Spark version of new cluster.
 * Type: string (or Expression with resultType string).
 * @property {object} [newClusterNumOfWorker] Number of worker nodes that new
 * cluster should have. A string formatted Int32, like '1' means numOfWorker is
 * 1 or '1:10' means auto-scale from 1 as min and 10 as max. Type: string (or
 * Expression with resultType string).
 * @property {object} [newClusterNodeType] The node types of new cluster. Type:
 * string (or Expression with resultType string).
 * @property {object} [newClusterSparkConf] A set of optional, user-specified
 * Spark configuration key-value pairs.
 * @property {object} [newClusterSparkEnvVars] A set of optional,
 * user-specified Spark environment variables key-value pairs.
 * @property {object} [newClusterCustomTags] Additional tags for cluster
 * resources.
 * @property {object} [encryptedCredential] The encrypted credential used for
 * authentication. Credentials are encrypted using the integration runtime
 * credential manager. Type: string (or Expression with resultType string).
 */
export interface AzureDatabricksLinkedService extends LinkedService {
  domain: any;
  accessToken: SecretBase;
  existingClusterId?: any;
  newClusterVersion?: any;
  newClusterNumOfWorker?: any;
  newClusterNodeType?: any;
  newClusterSparkConf?: { [propertyName: string]: any };
  newClusterSparkEnvVars?: { [propertyName: string]: any };
  newClusterCustomTags?: { [propertyName: string]: any };
  encryptedCredential?: any;
}

/**
 * @class
 * Initializes a new instance of the AzureDataLakeAnalyticsLinkedService class.
 * @constructor
 * Azure Data Lake Analytics linked service.
 *
 * @property {object} accountName The Azure Data Lake Analytics account name.
 * Type: string (or Expression with resultType string).
 * @property {object} [servicePrincipalId] The ID of the application used to
 * authenticate against the Azure Data Lake Analytics account. Type: string (or
 * Expression with resultType string).
 * @property {object} [servicePrincipalKey] The Key of the application used to
 * authenticate against the Azure Data Lake Analytics account.
 * @property {string} [servicePrincipalKey.type] Polymorphic Discriminator
 * @property {object} tenant The name or ID of the tenant to which the service
 * principal belongs. Type: string (or Expression with resultType string).
 * @property {object} [subscriptionId] Data Lake Analytics account subscription
 * ID (if different from Data Factory account). Type: string (or Expression
 * with resultType string).
 * @property {object} [resourceGroupName] Data Lake Analytics account resource
 * group name (if different from Data Factory account). Type: string (or
 * Expression with resultType string).
 * @property {object} [dataLakeAnalyticsUri] Azure Data Lake Analytics URI
 * Type: string (or Expression with resultType string).
 * @property {object} [encryptedCredential] The encrypted credential used for
 * authentication. Credentials are encrypted using the integration runtime
 * credential manager. Type: string (or Expression with resultType string).
 */
export interface AzureDataLakeAnalyticsLinkedService extends LinkedService {
  accountName: any;
  servicePrincipalId?: any;
  servicePrincipalKey?: SecretBase;
  tenant: any;
  subscriptionId?: any;
  resourceGroupName?: any;
  dataLakeAnalyticsUri?: any;
  encryptedCredential?: any;
}

/**
 * @class
 * Initializes a new instance of the ScriptAction class.
 * @constructor
 * Custom script action to run on HDI ondemand cluster once it's up.
 *
 * @property {string} name The user provided name of the script action.
 * @property {string} uri The URI for the script action.
 * @property {object} roles The node types on which the script action should be
 * executed.
 * @property {string} [parameters] The parameters for the script action.
 */
export interface ScriptAction {
  name: string;
  uri: string;
  roles: any;
  parameters?: string;
}

/**
 * @class
 * Initializes a new instance of the HDInsightOnDemandLinkedService class.
 * @constructor
 * HDInsight ondemand linked service.
 *
 * @property {object} clusterSize Number of worker/data nodes in the cluster.
 * Suggestion value: 4. Type: string (or Expression with resultType string).
 * @property {object} timeToLive The allowed idle time for the on-demand
 * HDInsight cluster. Specifies how long the on-demand HDInsight cluster stays
 * alive after completion of an activity run if there are no other active jobs
 * in the cluster. The minimum value is 5 mins. Type: string (or Expression
 * with resultType string).
 * @property {object} version Version of the HDInsight cluster.  Type: string
 * (or Expression with resultType string).
 * @property {object} linkedServiceName Azure Storage linked service to be used
 * by the on-demand cluster for storing and processing data.
 * @property {string} [linkedServiceName.referenceName] Reference LinkedService
 * name.
 * @property {object} [linkedServiceName.parameters] Arguments for
 * LinkedService.
 * @property {object} hostSubscriptionId The customer’s subscription to host
 * the cluster. Type: string (or Expression with resultType string).
 * @property {object} [servicePrincipalId] The service principal id for the
 * hostSubscriptionId. Type: string (or Expression with resultType string).
 * @property {object} [servicePrincipalKey] The key for the service principal
 * id.
 * @property {string} [servicePrincipalKey.type] Polymorphic Discriminator
 * @property {object} tenant The Tenant id/name to which the service principal
 * belongs. Type: string (or Expression with resultType string).
 * @property {object} clusterResourceGroup The resource group where the cluster
 * belongs. Type: string (or Expression with resultType string).
 * @property {object} [clusterNamePrefix] The prefix of cluster name, postfix
 * will be distinct with timestamp. Type: string (or Expression with resultType
 * string).
 * @property {object} [clusterUserName] The username to access the cluster.
 * Type: string (or Expression with resultType string).
 * @property {object} [clusterPassword] The password to access the cluster.
 * @property {string} [clusterPassword.type] Polymorphic Discriminator
 * @property {object} [clusterSshUserName] The username to SSH remotely connect
 * to cluster’s node (for Linux). Type: string (or Expression with resultType
 * string).
 * @property {object} [clusterSshPassword] The password to SSH remotely connect
 * cluster’s node (for Linux).
 * @property {string} [clusterSshPassword.type] Polymorphic Discriminator
 * @property {array} [additionalLinkedServiceNames] Specifies additional
 * storage accounts for the HDInsight linked service so that the Data Factory
 * service can register them on your behalf.
 * @property {object} [hcatalogLinkedServiceName] The name of Azure SQL linked
 * service that point to the HCatalog database. The on-demand HDInsight cluster
 * is created by using the Azure SQL database as the metastore.
 * @property {string} [hcatalogLinkedServiceName.referenceName] Reference
 * LinkedService name.
 * @property {object} [hcatalogLinkedServiceName.parameters] Arguments for
 * LinkedService.
 * @property {object} [clusterType] The cluster type. Type: string (or
 * Expression with resultType string).
 * @property {object} [sparkVersion] The version of spark if the cluster type
 * is 'spark'. Type: string (or Expression with resultType string).
 * @property {object} [coreConfiguration] Specifies the core configuration
 * parameters (as in core-site.xml) for the HDInsight cluster to be created.
 * @property {object} [hBaseConfiguration] Specifies the HBase configuration
 * parameters (hbase-site.xml) for the HDInsight cluster.
 * @property {object} [hdfsConfiguration] Specifies the HDFS configuration
 * parameters (hdfs-site.xml) for the HDInsight cluster.
 * @property {object} [hiveConfiguration] Specifies the hive configuration
 * parameters (hive-site.xml) for the HDInsight cluster.
 * @property {object} [mapReduceConfiguration] Specifies the MapReduce
 * configuration parameters (mapred-site.xml) for the HDInsight cluster.
 * @property {object} [oozieConfiguration] Specifies the Oozie configuration
 * parameters (oozie-site.xml) for the HDInsight cluster.
 * @property {object} [stormConfiguration] Specifies the Storm configuration
 * parameters (storm-site.xml) for the HDInsight cluster.
 * @property {object} [yarnConfiguration] Specifies the Yarn configuration
 * parameters (yarn-site.xml) for the HDInsight cluster.
 * @property {object} [encryptedCredential] The encrypted credential used for
 * authentication. Credentials are encrypted using the integration runtime
 * credential manager. Type: string (or Expression with resultType string).
 * @property {object} [headNodeSize] Specifies the size of the head node for
 * the HDInsight cluster.
 * @property {object} [dataNodeSize] Specifies the size of the data node for
 * the HDInsight cluster.
 * @property {object} [zookeeperNodeSize] Specifies the size of the Zoo Keeper
 * node for the HDInsight cluster.
 * @property {array} [scriptActions] Custom script actions to run on HDI
 * ondemand cluster once it's up. Please refer to
 * https://docs.microsoft.com/en-us/azure/hdinsight/hdinsight-hadoop-customize-cluster-linux?toc=%2Fen-us%2Fazure%2Fhdinsight%2Fr-server%2FTOC.json&bc=%2Fen-us%2Fazure%2Fbread%2Ftoc.json#understanding-script-actions.
 */
export interface HDInsightOnDemandLinkedService extends LinkedService {
  clusterSize: any;
  timeToLive: any;
  version: any;
  linkedServiceName: LinkedServiceReference;
  hostSubscriptionId: any;
  servicePrincipalId?: any;
  servicePrincipalKey?: SecretBase;
  tenant: any;
  clusterResourceGroup: any;
  clusterNamePrefix?: any;
  clusterUserName?: any;
  clusterPassword?: SecretBase;
  clusterSshUserName?: any;
  clusterSshPassword?: SecretBase;
  additionalLinkedServiceNames?: LinkedServiceReference[];
  hcatalogLinkedServiceName?: LinkedServiceReference;
  clusterType?: any;
  sparkVersion?: any;
  coreConfiguration?: any;
  hBaseConfiguration?: any;
  hdfsConfiguration?: any;
  hiveConfiguration?: any;
  mapReduceConfiguration?: any;
  oozieConfiguration?: any;
  stormConfiguration?: any;
  yarnConfiguration?: any;
  encryptedCredential?: any;
  headNodeSize?: any;
  dataNodeSize?: any;
  zookeeperNodeSize?: any;
  scriptActions?: ScriptAction[];
}

/**
 * @class
 * Initializes a new instance of the SalesforceMarketingCloudLinkedService class.
 * @constructor
 * Salesforce Marketing Cloud linked service.
 *
 * @property {object} clientId The client ID associated with the Salesforce
 * Marketing Cloud application. Type: string (or Expression with resultType
 * string).
 * @property {object} [clientSecret] The client secret associated with the
 * Salesforce Marketing Cloud application. Type: string (or Expression with
 * resultType string).
 * @property {string} [clientSecret.type] Polymorphic Discriminator
 * @property {object} [useEncryptedEndpoints] Specifies whether the data source
 * endpoints are encrypted using HTTPS. The default value is true. Type:
 * boolean (or Expression with resultType boolean).
 * @property {object} [useHostVerification] Specifies whether to require the
 * host name in the server's certificate to match the host name of the server
 * when connecting over SSL. The default value is true. Type: boolean (or
 * Expression with resultType boolean).
 * @property {object} [usePeerVerification] Specifies whether to verify the
 * identity of the server when connecting over SSL. The default value is true.
 * Type: boolean (or Expression with resultType boolean).
 * @property {object} [encryptedCredential] The encrypted credential used for
 * authentication. Credentials are encrypted using the integration runtime
 * credential manager. Type: string (or Expression with resultType string).
 */
export interface SalesforceMarketingCloudLinkedService extends LinkedService {
  clientId: any;
  clientSecret?: SecretBase;
  useEncryptedEndpoints?: any;
  useHostVerification?: any;
  usePeerVerification?: any;
  encryptedCredential?: any;
}

/**
 * @class
 * Initializes a new instance of the NetezzaLinkedService class.
 * @constructor
 * Netezza linked service.
 *
 * @property {object} [connectionString] An ODBC connection string. Type:
 * string, SecureString or AzureKeyVaultSecretReference.
 * @property {object} [pwd] The Azure key vault secret reference of password in
 * connection string.
 * @property {object} [pwd.store] The Azure Key Vault linked service reference.
 * @property {string} [pwd.store.referenceName] Reference LinkedService name.
 * @property {object} [pwd.store.parameters] Arguments for LinkedService.
 * @property {object} [pwd.secretName] The name of the secret in Azure Key
 * Vault. Type: string (or Expression with resultType string).
 * @property {object} [pwd.secretVersion] The version of the secret in Azure
 * Key Vault. The default value is the latest version of the secret. Type:
 * string (or Expression with resultType string).
 * @property {object} [encryptedCredential] The encrypted credential used for
 * authentication. Credentials are encrypted using the integration runtime
 * credential manager. Type: string (or Expression with resultType string).
 */
export interface NetezzaLinkedService extends LinkedService {
  connectionString?: any;
  pwd?: AzureKeyVaultSecretReference;
  encryptedCredential?: any;
}

/**
 * @class
 * Initializes a new instance of the VerticaLinkedService class.
 * @constructor
 * Vertica linked service.
 *
 * @property {object} [connectionString] An ODBC connection string. Type:
 * string, SecureString or AzureKeyVaultSecretReference.
 * @property {object} [pwd] The Azure key vault secret reference of password in
 * connection string.
 * @property {object} [pwd.store] The Azure Key Vault linked service reference.
 * @property {string} [pwd.store.referenceName] Reference LinkedService name.
 * @property {object} [pwd.store.parameters] Arguments for LinkedService.
 * @property {object} [pwd.secretName] The name of the secret in Azure Key
 * Vault. Type: string (or Expression with resultType string).
 * @property {object} [pwd.secretVersion] The version of the secret in Azure
 * Key Vault. The default value is the latest version of the secret. Type:
 * string (or Expression with resultType string).
 * @property {object} [encryptedCredential] The encrypted credential used for
 * authentication. Credentials are encrypted using the integration runtime
 * credential manager. Type: string (or Expression with resultType string).
 */
export interface VerticaLinkedService extends LinkedService {
  connectionString?: any;
  pwd?: AzureKeyVaultSecretReference;
  encryptedCredential?: any;
}

/**
 * @class
 * Initializes a new instance of the ZohoLinkedService class.
 * @constructor
 * Zoho server linked service.
 *
 * @property {object} endpoint The endpoint of the Zoho server. (i.e.
 * crm.zoho.com/crm/private)
 * @property {object} [accessToken] The access token for Zoho authentication.
 * @property {string} [accessToken.type] Polymorphic Discriminator
 * @property {object} [useEncryptedEndpoints] Specifies whether the data source
 * endpoints are encrypted using HTTPS. The default value is true.
 * @property {object} [useHostVerification] Specifies whether to require the
 * host name in the server's certificate to match the host name of the server
 * when connecting over SSL. The default value is true.
 * @property {object} [usePeerVerification] Specifies whether to verify the
 * identity of the server when connecting over SSL. The default value is true.
 * @property {object} [encryptedCredential] The encrypted credential used for
 * authentication. Credentials are encrypted using the integration runtime
 * credential manager. Type: string (or Expression with resultType string).
 */
export interface ZohoLinkedService extends LinkedService {
  endpoint: any;
  accessToken?: SecretBase;
  useEncryptedEndpoints?: any;
  useHostVerification?: any;
  usePeerVerification?: any;
  encryptedCredential?: any;
}

/**
 * @class
 * Initializes a new instance of the XeroLinkedService class.
 * @constructor
 * Xero Serivce linked service.
 *
 * @property {object} host The endpoint of the Xero server. (i.e. api.xero.com)
 * @property {object} [consumerKey] The consumer key associated with the Xero
 * application.
 * @property {string} [consumerKey.type] Polymorphic Discriminator
 * @property {object} [privateKey] The private key from the .pem file that was
 * generated for your Xero private application. You must include all the text
 * from the .pem file, including the Unix line endings(
 * ).
 * @property {string} [privateKey.type] Polymorphic Discriminator
 * @property {object} [useEncryptedEndpoints] Specifies whether the data source
 * endpoints are encrypted using HTTPS. The default value is true.
 * @property {object} [useHostVerification] Specifies whether to require the
 * host name in the server's certificate to match the host name of the server
 * when connecting over SSL. The default value is true.
 * @property {object} [usePeerVerification] Specifies whether to verify the
 * identity of the server when connecting over SSL. The default value is true.
 * @property {object} [encryptedCredential] The encrypted credential used for
 * authentication. Credentials are encrypted using the integration runtime
 * credential manager. Type: string (or Expression with resultType string).
 */
export interface XeroLinkedService extends LinkedService {
  host: any;
  consumerKey?: SecretBase;
  privateKey?: SecretBase;
  useEncryptedEndpoints?: any;
  useHostVerification?: any;
  usePeerVerification?: any;
  encryptedCredential?: any;
}

/**
 * @class
 * Initializes a new instance of the SquareLinkedService class.
 * @constructor
 * Square Serivce linked service.
 *
 * @property {object} host The URL of the Square instance. (i.e.
 * mystore.mysquare.com)
 * @property {object} clientId The client ID associated with your Square
 * application.
 * @property {object} [clientSecret] The client secret associated with your
 * Square application.
 * @property {string} [clientSecret.type] Polymorphic Discriminator
 * @property {object} redirectUri The redirect URL assigned in the Square
 * application dashboard. (i.e. http://localhost:2500)
 * @property {object} [useEncryptedEndpoints] Specifies whether the data source
 * endpoints are encrypted using HTTPS. The default value is true.
 * @property {object} [useHostVerification] Specifies whether to require the
 * host name in the server's certificate to match the host name of the server
 * when connecting over SSL. The default value is true.
 * @property {object} [usePeerVerification] Specifies whether to verify the
 * identity of the server when connecting over SSL. The default value is true.
 * @property {object} [encryptedCredential] The encrypted credential used for
 * authentication. Credentials are encrypted using the integration runtime
 * credential manager. Type: string (or Expression with resultType string).
 */
export interface SquareLinkedService extends LinkedService {
  host: any;
  clientId: any;
  clientSecret?: SecretBase;
  redirectUri: any;
  useEncryptedEndpoints?: any;
  useHostVerification?: any;
  usePeerVerification?: any;
  encryptedCredential?: any;
}

/**
 * @class
 * Initializes a new instance of the SparkLinkedService class.
 * @constructor
 * Spark Server linked service.
 *
 * @property {object} host IP address or host name of the Spark server
 * @property {object} port The TCP port that the Spark server uses to listen
 * for client connections.
 * @property {string} [serverType] The type of Spark server. Possible values
 * include: 'SharkServer', 'SharkServer2', 'SparkThriftServer'
 * @property {string} [thriftTransportProtocol] The transport protocol to use
 * in the Thrift layer. Possible values include: 'Binary', 'SASL', 'HTTP '
 * @property {string} authenticationType The authentication method used to
 * access the Spark server. Possible values include: 'Anonymous', 'Username',
 * 'UsernameAndPassword', 'WindowsAzureHDInsightService'
 * @property {object} [username] The user name that you use to access Spark
 * Server.
 * @property {object} [password] The password corresponding to the user name
 * that you provided in the Username field
 * @property {string} [password.type] Polymorphic Discriminator
 * @property {object} [httpPath] The partial URL corresponding to the Spark
 * server.
 * @property {object} [enableSsl] Specifies whether the connections to the
 * server are encrypted using SSL. The default value is false.
 * @property {object} [trustedCertPath] The full path of the .pem file
 * containing trusted CA certificates for verifying the server when connecting
 * over SSL. This property can only be set when using SSL on self-hosted IR.
 * The default value is the cacerts.pem file installed with the IR.
 * @property {object} [useSystemTrustStore] Specifies whether to use a CA
 * certificate from the system trust store or from a specified PEM file. The
 * default value is false.
 * @property {object} [allowHostNameCNMismatch] Specifies whether to require a
 * CA-issued SSL certificate name to match the host name of the server when
 * connecting over SSL. The default value is false.
 * @property {object} [allowSelfSignedServerCert] Specifies whether to allow
 * self-signed certificates from the server. The default value is false.
 * @property {object} [encryptedCredential] The encrypted credential used for
 * authentication. Credentials are encrypted using the integration runtime
 * credential manager. Type: string (or Expression with resultType string).
 */
export interface SparkLinkedService extends LinkedService {
  host: any;
  port: any;
  serverType?: string;
  thriftTransportProtocol?: string;
  authenticationType: string;
  username?: any;
  password?: SecretBase;
  httpPath?: any;
  enableSsl?: any;
  trustedCertPath?: any;
  useSystemTrustStore?: any;
  allowHostNameCNMismatch?: any;
  allowSelfSignedServerCert?: any;
  encryptedCredential?: any;
}

/**
 * @class
 * Initializes a new instance of the ShopifyLinkedService class.
 * @constructor
 * Shopify Serivce linked service.
 *
 * @property {object} host The endpoint of the Shopify server. (i.e.
 * mystore.myshopify.com)
 * @property {object} [accessToken] The API access token that can be used to
 * access Shopify’s data. The token won't expire if it is offline mode.
 * @property {string} [accessToken.type] Polymorphic Discriminator
 * @property {object} [useEncryptedEndpoints] Specifies whether the data source
 * endpoints are encrypted using HTTPS. The default value is true.
 * @property {object} [useHostVerification] Specifies whether to require the
 * host name in the server's certificate to match the host name of the server
 * when connecting over SSL. The default value is true.
 * @property {object} [usePeerVerification] Specifies whether to verify the
 * identity of the server when connecting over SSL. The default value is true.
 * @property {object} [encryptedCredential] The encrypted credential used for
 * authentication. Credentials are encrypted using the integration runtime
 * credential manager. Type: string (or Expression with resultType string).
 */
export interface ShopifyLinkedService extends LinkedService {
  host: any;
  accessToken?: SecretBase;
  useEncryptedEndpoints?: any;
  useHostVerification?: any;
  usePeerVerification?: any;
  encryptedCredential?: any;
}

/**
 * @class
 * Initializes a new instance of the ServiceNowLinkedService class.
 * @constructor
 * ServiceNow server linked service.
 *
 * @property {object} endpoint The endpoint of the ServiceNow server. (i.e.
 * <instance>.service-now.com)
 * @property {string} authenticationType The authentication type to use.
 * Possible values include: 'Basic', 'OAuth2'
 * @property {object} [username] The user name used to connect to the
 * ServiceNow server for Basic and OAuth2 authentication.
 * @property {object} [password] The password corresponding to the user name
 * for Basic and OAuth2 authentication.
 * @property {string} [password.type] Polymorphic Discriminator
 * @property {object} [clientId] The client id for OAuth2 authentication.
 * @property {object} [clientSecret] The client secret for OAuth2
 * authentication.
 * @property {string} [clientSecret.type] Polymorphic Discriminator
 * @property {object} [useEncryptedEndpoints] Specifies whether the data source
 * endpoints are encrypted using HTTPS. The default value is true.
 * @property {object} [useHostVerification] Specifies whether to require the
 * host name in the server's certificate to match the host name of the server
 * when connecting over SSL. The default value is true.
 * @property {object} [usePeerVerification] Specifies whether to verify the
 * identity of the server when connecting over SSL. The default value is true.
 * @property {object} [encryptedCredential] The encrypted credential used for
 * authentication. Credentials are encrypted using the integration runtime
 * credential manager. Type: string (or Expression with resultType string).
 */
export interface ServiceNowLinkedService extends LinkedService {
  endpoint: any;
  authenticationType: string;
  username?: any;
  password?: SecretBase;
  clientId?: any;
  clientSecret?: SecretBase;
  useEncryptedEndpoints?: any;
  useHostVerification?: any;
  usePeerVerification?: any;
  encryptedCredential?: any;
}

/**
 * @class
 * Initializes a new instance of the QuickBooksLinkedService class.
 * @constructor
 * QuickBooks server linked service.
 *
 * @property {object} endpoint The endpoint of the QuickBooks server. (i.e.
 * quickbooks.api.intuit.com)
 * @property {object} companyId The company ID of the QuickBooks company to
 * authorize.
 * @property {object} consumerKey The consumer key for OAuth 1.0
 * authentication.
 * @property {object} consumerSecret The consumer secret for OAuth 1.0
 * authentication.
 * @property {string} [consumerSecret.type] Polymorphic Discriminator
 * @property {object} accessToken The access token for OAuth 1.0
 * authentication.
 * @property {string} [accessToken.type] Polymorphic Discriminator
 * @property {object} accessTokenSecret The access token secret for OAuth 1.0
 * authentication.
 * @property {string} [accessTokenSecret.type] Polymorphic Discriminator
 * @property {object} [useEncryptedEndpoints] Specifies whether the data source
 * endpoints are encrypted using HTTPS. The default value is true.
 * @property {object} [encryptedCredential] The encrypted credential used for
 * authentication. Credentials are encrypted using the integration runtime
 * credential manager. Type: string (or Expression with resultType string).
 */
export interface QuickBooksLinkedService extends LinkedService {
  endpoint: any;
  companyId: any;
  consumerKey: any;
  consumerSecret: SecretBase;
  accessToken: SecretBase;
  accessTokenSecret: SecretBase;
  useEncryptedEndpoints?: any;
  encryptedCredential?: any;
}

/**
 * @class
 * Initializes a new instance of the PrestoLinkedService class.
 * @constructor
 * Presto server linked service.
 *
 * @property {object} host The IP address or host name of the Presto server.
 * (i.e. 192.168.222.160)
 * @property {object} serverVersion The version of the Presto server. (i.e.
 * 0.148-t)
 * @property {object} catalog The catalog context for all request against the
 * server.
 * @property {object} [port] The TCP port that the Presto server uses to listen
 * for client connections. The default value is 8080.
 * @property {string} authenticationType The authentication mechanism used to
 * connect to the Presto server. Possible values include: 'Anonymous', 'LDAP'
 * @property {object} [username] The user name used to connect to the Presto
 * server.
 * @property {object} [password] The password corresponding to the user name.
 * @property {string} [password.type] Polymorphic Discriminator
 * @property {object} [enableSsl] Specifies whether the connections to the
 * server are encrypted using SSL. The default value is false.
 * @property {object} [trustedCertPath] The full path of the .pem file
 * containing trusted CA certificates for verifying the server when connecting
 * over SSL. This property can only be set when using SSL on self-hosted IR.
 * The default value is the cacerts.pem file installed with the IR.
 * @property {object} [useSystemTrustStore] Specifies whether to use a CA
 * certificate from the system trust store or from a specified PEM file. The
 * default value is false.
 * @property {object} [allowHostNameCNMismatch] Specifies whether to require a
 * CA-issued SSL certificate name to match the host name of the server when
 * connecting over SSL. The default value is false.
 * @property {object} [allowSelfSignedServerCert] Specifies whether to allow
 * self-signed certificates from the server. The default value is false.
 * @property {object} [timeZoneID] The local time zone used by the connection.
 * Valid values for this option are specified in the IANA Time Zone Database.
 * The default value is the system time zone.
 * @property {object} [encryptedCredential] The encrypted credential used for
 * authentication. Credentials are encrypted using the integration runtime
 * credential manager. Type: string (or Expression with resultType string).
 */
export interface PrestoLinkedService extends LinkedService {
  host: any;
  serverVersion: any;
  catalog: any;
  port?: any;
  authenticationType: string;
  username?: any;
  password?: SecretBase;
  enableSsl?: any;
  trustedCertPath?: any;
  useSystemTrustStore?: any;
  allowHostNameCNMismatch?: any;
  allowSelfSignedServerCert?: any;
  timeZoneID?: any;
  encryptedCredential?: any;
}

/**
 * @class
 * Initializes a new instance of the PhoenixLinkedService class.
 * @constructor
 * Phoenix server linked service.
 *
 * @property {object} host The IP address or host name of the Phoenix server.
 * (i.e. 192.168.222.160)
 * @property {object} [port] The TCP port that the Phoenix server uses to
 * listen for client connections. The default value is 8765.
 * @property {object} [httpPath] The partial URL corresponding to the Phoenix
 * server. (i.e. /gateway/sandbox/phoenix/version). The default value is
 * hbasephoenix if using WindowsAzureHDInsightService.
 * @property {string} authenticationType The authentication mechanism used to
 * connect to the Phoenix server. Possible values include: 'Anonymous',
 * 'UsernameAndPassword', 'WindowsAzureHDInsightService'
 * @property {object} [username] The user name used to connect to the Phoenix
 * server.
 * @property {object} [password] The password corresponding to the user name.
 * @property {string} [password.type] Polymorphic Discriminator
 * @property {object} [enableSsl] Specifies whether the connections to the
 * server are encrypted using SSL. The default value is false.
 * @property {object} [trustedCertPath] The full path of the .pem file
 * containing trusted CA certificates for verifying the server when connecting
 * over SSL. This property can only be set when using SSL on self-hosted IR.
 * The default value is the cacerts.pem file installed with the IR.
 * @property {object} [useSystemTrustStore] Specifies whether to use a CA
 * certificate from the system trust store or from a specified PEM file. The
 * default value is false.
 * @property {object} [allowHostNameCNMismatch] Specifies whether to require a
 * CA-issued SSL certificate name to match the host name of the server when
 * connecting over SSL. The default value is false.
 * @property {object} [allowSelfSignedServerCert] Specifies whether to allow
 * self-signed certificates from the server. The default value is false.
 * @property {object} [encryptedCredential] The encrypted credential used for
 * authentication. Credentials are encrypted using the integration runtime
 * credential manager. Type: string (or Expression with resultType string).
 */
export interface PhoenixLinkedService extends LinkedService {
  host: any;
  port?: any;
  httpPath?: any;
  authenticationType: string;
  username?: any;
  password?: SecretBase;
  enableSsl?: any;
  trustedCertPath?: any;
  useSystemTrustStore?: any;
  allowHostNameCNMismatch?: any;
  allowSelfSignedServerCert?: any;
  encryptedCredential?: any;
}

/**
 * @class
 * Initializes a new instance of the PaypalLinkedService class.
 * @constructor
 * Paypal Serivce linked service.
 *
 * @property {object} host The URL of the PayPal instance. (i.e.
 * api.sandbox.paypal.com)
 * @property {object} clientId The client ID associated with your PayPal
 * application.
 * @property {object} [clientSecret] The client secret associated with your
 * PayPal application.
 * @property {string} [clientSecret.type] Polymorphic Discriminator
 * @property {object} [useEncryptedEndpoints] Specifies whether the data source
 * endpoints are encrypted using HTTPS. The default value is true.
 * @property {object} [useHostVerification] Specifies whether to require the
 * host name in the server's certificate to match the host name of the server
 * when connecting over SSL. The default value is true.
 * @property {object} [usePeerVerification] Specifies whether to verify the
 * identity of the server when connecting over SSL. The default value is true.
 * @property {object} [encryptedCredential] The encrypted credential used for
 * authentication. Credentials are encrypted using the integration runtime
 * credential manager. Type: string (or Expression with resultType string).
 */
export interface PaypalLinkedService extends LinkedService {
  host: any;
  clientId: any;
  clientSecret?: SecretBase;
  useEncryptedEndpoints?: any;
  useHostVerification?: any;
  usePeerVerification?: any;
  encryptedCredential?: any;
}

/**
 * @class
 * Initializes a new instance of the MarketoLinkedService class.
 * @constructor
 * Marketo server linked service.
 *
 * @property {object} endpoint The endpoint of the Marketo server. (i.e.
 * 123-ABC-321.mktorest.com)
 * @property {object} clientId The client Id of your Marketo service.
 * @property {object} [clientSecret] The client secret of your Marketo service.
 * @property {string} [clientSecret.type] Polymorphic Discriminator
 * @property {object} [useEncryptedEndpoints] Specifies whether the data source
 * endpoints are encrypted using HTTPS. The default value is true.
 * @property {object} [useHostVerification] Specifies whether to require the
 * host name in the server's certificate to match the host name of the server
 * when connecting over SSL. The default value is true.
 * @property {object} [usePeerVerification] Specifies whether to verify the
 * identity of the server when connecting over SSL. The default value is true.
 * @property {object} [encryptedCredential] The encrypted credential used for
 * authentication. Credentials are encrypted using the integration runtime
 * credential manager. Type: string (or Expression with resultType string).
 */
export interface MarketoLinkedService extends LinkedService {
  endpoint: any;
  clientId: any;
  clientSecret?: SecretBase;
  useEncryptedEndpoints?: any;
  useHostVerification?: any;
  usePeerVerification?: any;
  encryptedCredential?: any;
}

/**
 * @class
 * Initializes a new instance of the MariaDBLinkedService class.
 * @constructor
 * MariaDB server linked service.
 *
 * @property {object} [connectionString] An ODBC connection string. Type:
 * string, SecureString or AzureKeyVaultSecretReference.
 * @property {object} [pwd] The Azure key vault secret reference of password in
 * connection string.
 * @property {object} [pwd.store] The Azure Key Vault linked service reference.
 * @property {string} [pwd.store.referenceName] Reference LinkedService name.
 * @property {object} [pwd.store.parameters] Arguments for LinkedService.
 * @property {object} [pwd.secretName] The name of the secret in Azure Key
 * Vault. Type: string (or Expression with resultType string).
 * @property {object} [pwd.secretVersion] The version of the secret in Azure
 * Key Vault. The default value is the latest version of the secret. Type:
 * string (or Expression with resultType string).
 * @property {object} [encryptedCredential] The encrypted credential used for
 * authentication. Credentials are encrypted using the integration runtime
 * credential manager. Type: string (or Expression with resultType string).
 */
export interface MariaDBLinkedService extends LinkedService {
  connectionString?: any;
  pwd?: AzureKeyVaultSecretReference;
  encryptedCredential?: any;
}

/**
 * @class
 * Initializes a new instance of the MagentoLinkedService class.
 * @constructor
 * Magento server linked service.
 *
 * @property {object} host The URL of the Magento instance. (i.e.
 * 192.168.222.110/magento3)
 * @property {object} [accessToken] The access token from Magento.
 * @property {string} [accessToken.type] Polymorphic Discriminator
 * @property {object} [useEncryptedEndpoints] Specifies whether the data source
 * endpoints are encrypted using HTTPS. The default value is true.
 * @property {object} [useHostVerification] Specifies whether to require the
 * host name in the server's certificate to match the host name of the server
 * when connecting over SSL. The default value is true.
 * @property {object} [usePeerVerification] Specifies whether to verify the
 * identity of the server when connecting over SSL. The default value is true.
 * @property {object} [encryptedCredential] The encrypted credential used for
 * authentication. Credentials are encrypted using the integration runtime
 * credential manager. Type: string (or Expression with resultType string).
 */
export interface MagentoLinkedService extends LinkedService {
  host: any;
  accessToken?: SecretBase;
  useEncryptedEndpoints?: any;
  useHostVerification?: any;
  usePeerVerification?: any;
  encryptedCredential?: any;
}

/**
 * @class
 * Initializes a new instance of the JiraLinkedService class.
 * @constructor
 * Jira Serivce linked service.
 *
 * @property {object} host The IP address or host name of the Jira service.
 * (e.g. jira.example.com)
 * @property {object} [port] The TCP port that the Jira server uses to listen
 * for client connections. The default value is 443 if connecting through
 * HTTPS, or 8080 if connecting through HTTP.
 * @property {object} username The user name that you use to access Jira
 * Service.
 * @property {object} [password] The password corresponding to the user name
 * that you provided in the username field.
 * @property {string} [password.type] Polymorphic Discriminator
 * @property {object} [useEncryptedEndpoints] Specifies whether the data source
 * endpoints are encrypted using HTTPS. The default value is true.
 * @property {object} [useHostVerification] Specifies whether to require the
 * host name in the server's certificate to match the host name of the server
 * when connecting over SSL. The default value is true.
 * @property {object} [usePeerVerification] Specifies whether to verify the
 * identity of the server when connecting over SSL. The default value is true.
 * @property {object} [encryptedCredential] The encrypted credential used for
 * authentication. Credentials are encrypted using the integration runtime
 * credential manager. Type: string (or Expression with resultType string).
 */
export interface JiraLinkedService extends LinkedService {
  host: any;
  port?: any;
  username: any;
  password?: SecretBase;
  useEncryptedEndpoints?: any;
  useHostVerification?: any;
  usePeerVerification?: any;
  encryptedCredential?: any;
}

/**
 * @class
 * Initializes a new instance of the ImpalaLinkedService class.
 * @constructor
 * Impala server linked service.
 *
 * @property {object} host The IP address or host name of the Impala server.
 * (i.e. 192.168.222.160)
 * @property {object} [port] The TCP port that the Impala server uses to listen
 * for client connections. The default value is 21050.
 * @property {string} authenticationType The authentication type to use.
 * Possible values include: 'Anonymous', 'SASLUsername', 'UsernameAndPassword'
 * @property {object} [username] The user name used to access the Impala
 * server. The default value is anonymous when using SASLUsername.
 * @property {object} [password] The password corresponding to the user name
 * when using UsernameAndPassword.
 * @property {string} [password.type] Polymorphic Discriminator
 * @property {object} [enableSsl] Specifies whether the connections to the
 * server are encrypted using SSL. The default value is false.
 * @property {object} [trustedCertPath] The full path of the .pem file
 * containing trusted CA certificates for verifying the server when connecting
 * over SSL. This property can only be set when using SSL on self-hosted IR.
 * The default value is the cacerts.pem file installed with the IR.
 * @property {object} [useSystemTrustStore] Specifies whether to use a CA
 * certificate from the system trust store or from a specified PEM file. The
 * default value is false.
 * @property {object} [allowHostNameCNMismatch] Specifies whether to require a
 * CA-issued SSL certificate name to match the host name of the server when
 * connecting over SSL. The default value is false.
 * @property {object} [allowSelfSignedServerCert] Specifies whether to allow
 * self-signed certificates from the server. The default value is false.
 * @property {object} [encryptedCredential] The encrypted credential used for
 * authentication. Credentials are encrypted using the integration runtime
 * credential manager. Type: string (or Expression with resultType string).
 */
export interface ImpalaLinkedService extends LinkedService {
  host: any;
  port?: any;
  authenticationType: string;
  username?: any;
  password?: SecretBase;
  enableSsl?: any;
  trustedCertPath?: any;
  useSystemTrustStore?: any;
  allowHostNameCNMismatch?: any;
  allowSelfSignedServerCert?: any;
  encryptedCredential?: any;
}

/**
 * @class
 * Initializes a new instance of the HubspotLinkedService class.
 * @constructor
 * Hubspot Serivce linked service.
 *
 * @property {object} clientId The client ID associated with your Hubspot
 * application.
 * @property {object} [clientSecret] The client secret associated with your
 * Hubspot application.
 * @property {string} [clientSecret.type] Polymorphic Discriminator
 * @property {object} [accessToken] The access token obtained when initially
 * authenticating your OAuth integration.
 * @property {string} [accessToken.type] Polymorphic Discriminator
 * @property {object} [refreshToken] The refresh token obtained when initially
 * authenticating your OAuth integration.
 * @property {string} [refreshToken.type] Polymorphic Discriminator
 * @property {object} [useEncryptedEndpoints] Specifies whether the data source
 * endpoints are encrypted using HTTPS. The default value is true.
 * @property {object} [useHostVerification] Specifies whether to require the
 * host name in the server's certificate to match the host name of the server
 * when connecting over SSL. The default value is true.
 * @property {object} [usePeerVerification] Specifies whether to verify the
 * identity of the server when connecting over SSL. The default value is true.
 * @property {object} [encryptedCredential] The encrypted credential used for
 * authentication. Credentials are encrypted using the integration runtime
 * credential manager. Type: string (or Expression with resultType string).
 */
export interface HubspotLinkedService extends LinkedService {
  clientId: any;
  clientSecret?: SecretBase;
  accessToken?: SecretBase;
  refreshToken?: SecretBase;
  useEncryptedEndpoints?: any;
  useHostVerification?: any;
  usePeerVerification?: any;
  encryptedCredential?: any;
}

/**
 * @class
 * Initializes a new instance of the HiveLinkedService class.
 * @constructor
 * Hive Server linked service.
 *
 * @property {object} host IP address or host name of the Hive server,
 * separated by ';' for multiple hosts (only when serviceDiscoveryMode is
 * enable).
 * @property {object} [port] The TCP port that the Hive server uses to listen
 * for client connections.
 * @property {string} [serverType] The type of Hive server. Possible values
 * include: 'HiveServer1', 'HiveServer2', 'HiveThriftServer'
 * @property {string} [thriftTransportProtocol] The transport protocol to use
 * in the Thrift layer. Possible values include: 'Binary', 'SASL', 'HTTP '
 * @property {string} authenticationType The authentication method used to
 * access the Hive server. Possible values include: 'Anonymous', 'Username',
 * 'UsernameAndPassword', 'WindowsAzureHDInsightService'
 * @property {object} [serviceDiscoveryMode] true to indicate using the
 * ZooKeeper service, false not.
 * @property {object} [zooKeeperNameSpace] The namespace on ZooKeeper under
 * which Hive Server 2 nodes are added.
 * @property {object} [useNativeQuery] Specifies whether the driver uses native
 * HiveQL queries,or converts them into an equivalent form in HiveQL.
 * @property {object} [username] The user name that you use to access Hive
 * Server.
 * @property {object} [password] The password corresponding to the user name
 * that you provided in the Username field
 * @property {string} [password.type] Polymorphic Discriminator
 * @property {object} [httpPath] The partial URL corresponding to the Hive
 * server.
 * @property {object} [enableSsl] Specifies whether the connections to the
 * server are encrypted using SSL. The default value is false.
 * @property {object} [trustedCertPath] The full path of the .pem file
 * containing trusted CA certificates for verifying the server when connecting
 * over SSL. This property can only be set when using SSL on self-hosted IR.
 * The default value is the cacerts.pem file installed with the IR.
 * @property {object} [useSystemTrustStore] Specifies whether to use a CA
 * certificate from the system trust store or from a specified PEM file. The
 * default value is false.
 * @property {object} [allowHostNameCNMismatch] Specifies whether to require a
 * CA-issued SSL certificate name to match the host name of the server when
 * connecting over SSL. The default value is false.
 * @property {object} [allowSelfSignedServerCert] Specifies whether to allow
 * self-signed certificates from the server. The default value is false.
 * @property {object} [encryptedCredential] The encrypted credential used for
 * authentication. Credentials are encrypted using the integration runtime
 * credential manager. Type: string (or Expression with resultType string).
 */
export interface HiveLinkedService extends LinkedService {
  host: any;
  port?: any;
  serverType?: string;
  thriftTransportProtocol?: string;
  authenticationType: string;
  serviceDiscoveryMode?: any;
  zooKeeperNameSpace?: any;
  useNativeQuery?: any;
  username?: any;
  password?: SecretBase;
  httpPath?: any;
  enableSsl?: any;
  trustedCertPath?: any;
  useSystemTrustStore?: any;
  allowHostNameCNMismatch?: any;
  allowSelfSignedServerCert?: any;
  encryptedCredential?: any;
}

/**
 * @class
 * Initializes a new instance of the HBaseLinkedService class.
 * @constructor
 * HBase server linked service.
 *
 * @property {object} host The IP address or host name of the HBase server.
 * (i.e. 192.168.222.160)
 * @property {object} [port] The TCP port that the HBase instance uses to
 * listen for client connections. The default value is 9090.
 * @property {object} [httpPath] The partial URL corresponding to the HBase
 * server. (i.e. /gateway/sandbox/hbase/version)
 * @property {string} authenticationType The authentication mechanism to use to
 * connect to the HBase server. Possible values include: 'Anonymous', 'Basic'
 * @property {object} [username] The user name used to connect to the HBase
 * instance.
 * @property {object} [password] The password corresponding to the user name.
 * @property {string} [password.type] Polymorphic Discriminator
 * @property {object} [enableSsl] Specifies whether the connections to the
 * server are encrypted using SSL. The default value is false.
 * @property {object} [trustedCertPath] The full path of the .pem file
 * containing trusted CA certificates for verifying the server when connecting
 * over SSL. This property can only be set when using SSL on self-hosted IR.
 * The default value is the cacerts.pem file installed with the IR.
 * @property {object} [allowHostNameCNMismatch] Specifies whether to require a
 * CA-issued SSL certificate name to match the host name of the server when
 * connecting over SSL. The default value is false.
 * @property {object} [allowSelfSignedServerCert] Specifies whether to allow
 * self-signed certificates from the server. The default value is false.
 * @property {object} [encryptedCredential] The encrypted credential used for
 * authentication. Credentials are encrypted using the integration runtime
 * credential manager. Type: string (or Expression with resultType string).
 */
export interface HBaseLinkedService extends LinkedService {
  host: any;
  port?: any;
  httpPath?: any;
  authenticationType: string;
  username?: any;
  password?: SecretBase;
  enableSsl?: any;
  trustedCertPath?: any;
  allowHostNameCNMismatch?: any;
  allowSelfSignedServerCert?: any;
  encryptedCredential?: any;
}

/**
 * @class
 * Initializes a new instance of the GreenplumLinkedService class.
 * @constructor
 * Greenplum Database linked service.
 *
 * @property {object} [connectionString] An ODBC connection string. Type:
 * string, SecureString or AzureKeyVaultSecretReference.
 * @property {object} [pwd] The Azure key vault secret reference of password in
 * connection string.
 * @property {object} [pwd.store] The Azure Key Vault linked service reference.
 * @property {string} [pwd.store.referenceName] Reference LinkedService name.
 * @property {object} [pwd.store.parameters] Arguments for LinkedService.
 * @property {object} [pwd.secretName] The name of the secret in Azure Key
 * Vault. Type: string (or Expression with resultType string).
 * @property {object} [pwd.secretVersion] The version of the secret in Azure
 * Key Vault. The default value is the latest version of the secret. Type:
 * string (or Expression with resultType string).
 * @property {object} [encryptedCredential] The encrypted credential used for
 * authentication. Credentials are encrypted using the integration runtime
 * credential manager. Type: string (or Expression with resultType string).
 */
export interface GreenplumLinkedService extends LinkedService {
  connectionString?: any;
  pwd?: AzureKeyVaultSecretReference;
  encryptedCredential?: any;
}

/**
 * @class
 * Initializes a new instance of the GoogleBigQueryLinkedService class.
 * @constructor
 * Google BigQuery service linked service.
 *
 * @property {object} project The default BigQuery project to query against.
 * @property {object} [additionalProjects] A comma-separated list of public
 * BigQuery projects to access.
 * @property {object} [requestGoogleDriveScope] Whether to request access to
 * Google Drive. Allowing Google Drive access enables support for federated
 * tables that combine BigQuery data with data from Google Drive. The default
 * value is false.
 * @property {string} authenticationType The OAuth 2.0 authentication mechanism
 * used for authentication. ServiceAuthentication can only be used on
 * self-hosted IR. Possible values include: 'ServiceAuthentication',
 * 'UserAuthentication'
 * @property {object} [refreshToken] The refresh token obtained from Google for
 * authorizing access to BigQuery for UserAuthentication.
 * @property {string} [refreshToken.type] Polymorphic Discriminator
 * @property {object} [clientId] The client id of the google application used
 * to acquire the refresh token.
 * @property {string} [clientId.type] Polymorphic Discriminator
 * @property {object} [clientSecret] The client secret of the google
 * application used to acquire the refresh token.
 * @property {string} [clientSecret.type] Polymorphic Discriminator
 * @property {object} [email] The service account email ID that is used for
 * ServiceAuthentication and can only be used on self-hosted IR.
 * @property {object} [keyFilePath] The full path to the .p12 key file that is
 * used to authenticate the service account email address and can only be used
 * on self-hosted IR.
 * @property {object} [trustedCertPath] The full path of the .pem file
 * containing trusted CA certificates for verifying the server when connecting
 * over SSL. This property can only be set when using SSL on self-hosted IR.
 * The default value is the cacerts.pem file installed with the IR.
 * @property {object} [useSystemTrustStore] Specifies whether to use a CA
 * certificate from the system trust store or from a specified PEM file. The
 * default value is false.
 * @property {object} [encryptedCredential] The encrypted credential used for
 * authentication. Credentials are encrypted using the integration runtime
 * credential manager. Type: string (or Expression with resultType string).
 */
export interface GoogleBigQueryLinkedService extends LinkedService {
  project: any;
  additionalProjects?: any;
  requestGoogleDriveScope?: any;
  authenticationType: string;
  refreshToken?: SecretBase;
  clientId?: SecretBase;
  clientSecret?: SecretBase;
  email?: any;
  keyFilePath?: any;
  trustedCertPath?: any;
  useSystemTrustStore?: any;
  encryptedCredential?: any;
}

/**
 * @class
 * Initializes a new instance of the EloquaLinkedService class.
 * @constructor
 * Eloqua server linked service.
 *
 * @property {object} endpoint The endpoint of the Eloqua server. (i.e.
 * eloqua.example.com)
 * @property {object} username The site name and user name of your Eloqua
 * account in the form: sitename/username. (i.e. Eloqua/Alice)
 * @property {object} [password] The password corresponding to the user name.
 * @property {string} [password.type] Polymorphic Discriminator
 * @property {object} [useEncryptedEndpoints] Specifies whether the data source
 * endpoints are encrypted using HTTPS. The default value is true.
 * @property {object} [useHostVerification] Specifies whether to require the
 * host name in the server's certificate to match the host name of the server
 * when connecting over SSL. The default value is true.
 * @property {object} [usePeerVerification] Specifies whether to verify the
 * identity of the server when connecting over SSL. The default value is true.
 * @property {object} [encryptedCredential] The encrypted credential used for
 * authentication. Credentials are encrypted using the integration runtime
 * credential manager. Type: string (or Expression with resultType string).
 */
export interface EloquaLinkedService extends LinkedService {
  endpoint: any;
  username: any;
  password?: SecretBase;
  useEncryptedEndpoints?: any;
  useHostVerification?: any;
  usePeerVerification?: any;
  encryptedCredential?: any;
}

/**
 * @class
 * Initializes a new instance of the DrillLinkedService class.
 * @constructor
 * Drill server linked service.
 *
 * @property {object} [connectionString] An ODBC connection string. Type:
 * string, SecureString or AzureKeyVaultSecretReference.
 * @property {object} [pwd] The Azure key vault secret reference of password in
 * connection string.
 * @property {object} [pwd.store] The Azure Key Vault linked service reference.
 * @property {string} [pwd.store.referenceName] Reference LinkedService name.
 * @property {object} [pwd.store.parameters] Arguments for LinkedService.
 * @property {object} [pwd.secretName] The name of the secret in Azure Key
 * Vault. Type: string (or Expression with resultType string).
 * @property {object} [pwd.secretVersion] The version of the secret in Azure
 * Key Vault. The default value is the latest version of the secret. Type:
 * string (or Expression with resultType string).
 * @property {object} [encryptedCredential] The encrypted credential used for
 * authentication. Credentials are encrypted using the integration runtime
 * credential manager. Type: string (or Expression with resultType string).
 */
export interface DrillLinkedService extends LinkedService {
  connectionString?: any;
  pwd?: AzureKeyVaultSecretReference;
  encryptedCredential?: any;
}

/**
 * @class
 * Initializes a new instance of the CouchbaseLinkedService class.
 * @constructor
 * Couchbase server linked service.
 *
 * @property {object} [connectionString] An ODBC connection string. Type:
 * string, SecureString or AzureKeyVaultSecretReference.
 * @property {object} [credString] The Azure key vault secret reference of
 * credString in connection string.
 * @property {object} [credString.store] The Azure Key Vault linked service
 * reference.
 * @property {string} [credString.store.referenceName] Reference LinkedService
 * name.
 * @property {object} [credString.store.parameters] Arguments for
 * LinkedService.
 * @property {object} [credString.secretName] The name of the secret in Azure
 * Key Vault. Type: string (or Expression with resultType string).
 * @property {object} [credString.secretVersion] The version of the secret in
 * Azure Key Vault. The default value is the latest version of the secret.
 * Type: string (or Expression with resultType string).
 * @property {object} [encryptedCredential] The encrypted credential used for
 * authentication. Credentials are encrypted using the integration runtime
 * credential manager. Type: string (or Expression with resultType string).
 */
export interface CouchbaseLinkedService extends LinkedService {
  connectionString?: any;
  credString?: AzureKeyVaultSecretReference;
  encryptedCredential?: any;
}

/**
 * @class
 * Initializes a new instance of the ConcurLinkedService class.
 * @constructor
 * Concur Serivce linked service.
 *
 * @property {object} clientId Application client_id supplied by Concur App
 * Management.
 * @property {object} username The user name that you use to access Concur
 * Service.
 * @property {object} [password] The password corresponding to the user name
 * that you provided in the username field.
 * @property {string} [password.type] Polymorphic Discriminator
 * @property {object} [useEncryptedEndpoints] Specifies whether the data source
 * endpoints are encrypted using HTTPS. The default value is true.
 * @property {object} [useHostVerification] Specifies whether to require the
 * host name in the server's certificate to match the host name of the server
 * when connecting over SSL. The default value is true.
 * @property {object} [usePeerVerification] Specifies whether to verify the
 * identity of the server when connecting over SSL. The default value is true.
 * @property {object} [encryptedCredential] The encrypted credential used for
 * authentication. Credentials are encrypted using the integration runtime
 * credential manager. Type: string (or Expression with resultType string).
 */
export interface ConcurLinkedService extends LinkedService {
  clientId: any;
  username: any;
  password?: SecretBase;
  useEncryptedEndpoints?: any;
  useHostVerification?: any;
  usePeerVerification?: any;
  encryptedCredential?: any;
}

/**
 * @class
 * Initializes a new instance of the AzurePostgreSqlLinkedService class.
 * @constructor
 * Azure PostgreSQL linked service.
 *
 * @property {object} [connectionString] An ODBC connection string. Type:
 * string, SecureString or AzureKeyVaultSecretReference.
 * @property {object} [password] The Azure key vault secret reference of
 * password in connection string.
 * @property {object} [password.store] The Azure Key Vault linked service
 * reference.
 * @property {string} [password.store.referenceName] Reference LinkedService
 * name.
 * @property {object} [password.store.parameters] Arguments for LinkedService.
 * @property {object} [password.secretName] The name of the secret in Azure Key
 * Vault. Type: string (or Expression with resultType string).
 * @property {object} [password.secretVersion] The version of the secret in
 * Azure Key Vault. The default value is the latest version of the secret.
 * Type: string (or Expression with resultType string).
 * @property {object} [encryptedCredential] The encrypted credential used for
 * authentication. Credentials are encrypted using the integration runtime
 * credential manager. Type: string (or Expression with resultType string).
 */
export interface AzurePostgreSqlLinkedService extends LinkedService {
  connectionString?: any;
  password?: AzureKeyVaultSecretReference;
  encryptedCredential?: any;
}

/**
 * @class
 * Initializes a new instance of the AmazonMWSLinkedService class.
 * @constructor
 * Amazon Marketplace Web Service linked service.
 *
 * @property {object} endpoint The endpoint of the Amazon MWS server, (i.e.
 * mws.amazonservices.com)
 * @property {object} marketplaceID The Amazon Marketplace ID you want to
 * retrieve data from. To retrive data from multiple Marketplace IDs, seperate
 * them with a comma (,). (i.e. A2EUQ1WTGCTBG2)
 * @property {object} sellerID The Amazon seller ID.
 * @property {object} [mwsAuthToken] The Amazon MWS authentication token.
 * @property {string} [mwsAuthToken.type] Polymorphic Discriminator
 * @property {object} accessKeyId The access key id used to access data.
 * @property {object} [secretKey] The secret key used to access data.
 * @property {string} [secretKey.type] Polymorphic Discriminator
 * @property {object} [useEncryptedEndpoints] Specifies whether the data source
 * endpoints are encrypted using HTTPS. The default value is true.
 * @property {object} [useHostVerification] Specifies whether to require the
 * host name in the server's certificate to match the host name of the server
 * when connecting over SSL. The default value is true.
 * @property {object} [usePeerVerification] Specifies whether to verify the
 * identity of the server when connecting over SSL. The default value is true.
 * @property {object} [encryptedCredential] The encrypted credential used for
 * authentication. Credentials are encrypted using the integration runtime
 * credential manager. Type: string (or Expression with resultType string).
 */
export interface AmazonMWSLinkedService extends LinkedService {
  endpoint: any;
  marketplaceID: any;
  sellerID: any;
  mwsAuthToken?: SecretBase;
  accessKeyId: any;
  secretKey?: SecretBase;
  useEncryptedEndpoints?: any;
  useHostVerification?: any;
  usePeerVerification?: any;
  encryptedCredential?: any;
}

/**
 * @class
 * Initializes a new instance of the SapHanaLinkedService class.
 * @constructor
 * SAP HANA Linked Service.
 *
 * @property {object} server Host name of the SAP HANA server. Type: string (or
 * Expression with resultType string).
 * @property {string} [authenticationType] The authentication type to be used
 * to connect to the SAP HANA server. Possible values include: 'Basic',
 * 'Windows'
 * @property {object} [userName] Username to access the SAP HANA server. Type:
 * string (or Expression with resultType string).
 * @property {object} [password] Password to access the SAP HANA server.
 * @property {string} [password.type] Polymorphic Discriminator
 * @property {object} [encryptedCredential] The encrypted credential used for
 * authentication. Credentials are encrypted using the integration runtime
 * credential manager. Type: string (or Expression with resultType string).
 */
export interface SapHanaLinkedService extends LinkedService {
  server: any;
  authenticationType?: string;
  userName?: any;
  password?: SecretBase;
  encryptedCredential?: any;
}

/**
 * @class
 * Initializes a new instance of the SapBWLinkedService class.
 * @constructor
 * SAP Business Warehouse Linked Service.
 *
 * @property {object} server Host name of the SAP BW instance. Type: string (or
 * Expression with resultType string).
 * @property {object} systemNumber System number of the BW system. (Usually a
 * two-digit decimal number represented as a string.) Type: string (or
 * Expression with resultType string).
 * @property {object} clientId Client ID of the client on the BW system.
 * (Usually a three-digit decimal number represented as a string) Type: string
 * (or Expression with resultType string).
 * @property {object} [userName] Username to access the SAP BW server. Type:
 * string (or Expression with resultType string).
 * @property {object} [password] Password to access the SAP BW server.
 * @property {string} [password.type] Polymorphic Discriminator
 * @property {object} [encryptedCredential] The encrypted credential used for
 * authentication. Credentials are encrypted using the integration runtime
 * credential manager. Type: string (or Expression with resultType string).
 */
export interface SapBWLinkedService extends LinkedService {
  server: any;
  systemNumber: any;
  clientId: any;
  userName?: any;
  password?: SecretBase;
  encryptedCredential?: any;
}

/**
 * @class
 * Initializes a new instance of the SftpServerLinkedService class.
 * @constructor
 * A linked service for an SSH File Transfer Protocol (SFTP) server.
 *
 * @property {object} host The SFTP server host name. Type: string (or
 * Expression with resultType string).
 * @property {object} [port] The TCP port number that the SFTP server uses to
 * listen for client connections. Default value is 22. Type: integer (or
 * Expression with resultType integer), minimum: 0.
 * @property {string} [authenticationType] The authentication type to be used
 * to connect to the FTP server. Possible values include: 'Basic',
 * 'SshPublicKey'
 * @property {object} [userName] The username used to log on to the SFTP
 * server. Type: string (or Expression with resultType string).
 * @property {object} [password] Password to logon the SFTP server for Basic
 * authentication.
 * @property {string} [password.type] Polymorphic Discriminator
 * @property {object} [encryptedCredential] The encrypted credential used for
 * authentication. Credentials are encrypted using the integration runtime
 * credential manager. Type: string (or Expression with resultType string).
 * @property {object} [privateKeyPath] The SSH private key file path for
 * SshPublicKey authentication. Only valid for on-premises copy. For
 * on-premises copy with SshPublicKey authentication, either PrivateKeyPath or
 * PrivateKeyContent should be specified. SSH private key should be OpenSSH
 * format. Type: string (or Expression with resultType string).
 * @property {object} [privateKeyContent] Base64 encoded SSH private key
 * content for SshPublicKey authentication. For on-premises copy with
 * SshPublicKey authentication, either PrivateKeyPath or PrivateKeyContent
 * should be specified. SSH private key should be OpenSSH format.
 * @property {string} [privateKeyContent.type] Polymorphic Discriminator
 * @property {object} [passPhrase] The password to decrypt the SSH private key
 * if the SSH private key is encrypted.
 * @property {string} [passPhrase.type] Polymorphic Discriminator
 * @property {object} [skipHostKeyValidation] If true, skip the SSH host key
 * validation. Default value is false. Type: boolean (or Expression with
 * resultType boolean).
 * @property {object} [hostKeyFingerprint] The host key finger-print of the
 * SFTP server. When SkipHostKeyValidation is false, HostKeyFingerprint should
 * be specified. Type: string (or Expression with resultType string).
 */
export interface SftpServerLinkedService extends LinkedService {
  host: any;
  port?: any;
  authenticationType?: string;
  userName?: any;
  password?: SecretBase;
  encryptedCredential?: any;
  privateKeyPath?: any;
  privateKeyContent?: SecretBase;
  passPhrase?: SecretBase;
  skipHostKeyValidation?: any;
  hostKeyFingerprint?: any;
}

/**
 * @class
 * Initializes a new instance of the FtpServerLinkedService class.
 * @constructor
 * A FTP server Linked Service.
 *
 * @property {object} host Host name of the FTP server. Type: string (or
 * Expression with resultType string).
 * @property {object} [port] The TCP port number that the FTP server uses to
 * listen for client connections. Default value is 21. Type: integer (or
 * Expression with resultType integer), minimum: 0.
 * @property {string} [authenticationType] The authentication type to be used
 * to connect to the FTP server. Possible values include: 'Basic', 'Anonymous'
 * @property {object} [userName] Username to logon the FTP server. Type: string
 * (or Expression with resultType string).
 * @property {object} [password] Password to logon the FTP server.
 * @property {string} [password.type] Polymorphic Discriminator
 * @property {object} [encryptedCredential] The encrypted credential used for
 * authentication. Credentials are encrypted using the integration runtime
 * credential manager. Type: string (or Expression with resultType string).
 * @property {object} [enableSsl] If true, connect to the FTP server over
 * SSL/TLS channel. Default value is true. Type: boolean (or Expression with
 * resultType boolean).
 * @property {object} [enableServerCertificateValidation] If true, validate the
 * FTP server SSL certificate when connect over SSL/TLS channel. Default value
 * is true. Type: boolean (or Expression with resultType boolean).
 */
export interface FtpServerLinkedService extends LinkedService {
  host: any;
  port?: any;
  authenticationType?: string;
  userName?: any;
  password?: SecretBase;
  encryptedCredential?: any;
  enableSsl?: any;
  enableServerCertificateValidation?: any;
}

/**
 * @class
 * Initializes a new instance of the HttpLinkedService class.
 * @constructor
 * Linked service for an HTTP source.
 *
 * @property {object} url The base URL of the HTTP endpoint, e.g.
 * http://www.microsoft.com. Type: string (or Expression with resultType
 * string).
 * @property {string} [authenticationType] The authentication type to be used
 * to connect to the HTTP server. Possible values include: 'Basic',
 * 'Anonymous', 'Digest', 'Windows', 'ClientCertificate'
 * @property {object} [userName] User name for Basic, Digest, or Windows
 * authentication. Type: string (or Expression with resultType string).
 * @property {object} [password] Password for Basic, Digest, Windows, or
 * ClientCertificate with EmbeddedCertData authentication.
 * @property {string} [password.type] Polymorphic Discriminator
 * @property {object} [embeddedCertData] Base64 encoded certificate data for
 * ClientCertificate authentication. For on-premises copy with
 * ClientCertificate authentication, either CertThumbprint or
 * EmbeddedCertData/Password should be specified. Type: string (or Expression
 * with resultType string).
 * @property {object} [certThumbprint] Thumbprint of certificate for
 * ClientCertificate authentication. Only valid for on-premises copy. For
 * on-premises copy with ClientCertificate authentication, either
 * CertThumbprint or EmbeddedCertData/Password should be specified. Type:
 * string (or Expression with resultType string).
 * @property {object} [encryptedCredential] The encrypted credential used for
 * authentication. Credentials are encrypted using the integration runtime
 * credential manager. Type: string (or Expression with resultType string).
 * @property {object} [enableServerCertificateValidation] If true, validate the
 * HTTPS server SSL certificate. Default value is true. Type: boolean (or
 * Expression with resultType boolean).
 */
export interface HttpLinkedService extends LinkedService {
  url: any;
  authenticationType?: string;
  userName?: any;
  password?: SecretBase;
  embeddedCertData?: any;
  certThumbprint?: any;
  encryptedCredential?: any;
  enableServerCertificateValidation?: any;
}

/**
 * @class
 * Initializes a new instance of the AzureSearchLinkedService class.
 * @constructor
 * Linked service for Windows Azure Search Service.
 *
 * @property {object} url URL for Azure Search service. Type: string (or
 * Expression with resultType string).
 * @property {object} [key] Admin Key for Azure Search service
 * @property {string} [key.type] Polymorphic Discriminator
 * @property {object} [encryptedCredential] The encrypted credential used for
 * authentication. Credentials are encrypted using the integration runtime
 * credential manager. Type: string (or Expression with resultType string).
 */
export interface AzureSearchLinkedService extends LinkedService {
  url: any;
  key?: SecretBase;
  encryptedCredential?: any;
}

/**
 * @class
 * Initializes a new instance of the CustomDataSourceLinkedService class.
 * @constructor
 * Custom linked service.
 *
 * @property {object} typeProperties Custom linked service properties.
 */
export interface CustomDataSourceLinkedService extends LinkedService {
  typeProperties: any;
}

/**
 * @class
 * Initializes a new instance of the AmazonRedshiftLinkedService class.
 * @constructor
 * Linked service for Amazon Redshift.
 *
 * @property {object} server The name of the Amazon Redshift server. Type:
 * string (or Expression with resultType string).
 * @property {object} [username] The username of the Amazon Redshift source.
 * Type: string (or Expression with resultType string).
 * @property {object} [password] The password of the Amazon Redshift source.
 * @property {string} [password.type] Polymorphic Discriminator
 * @property {object} database The database name of the Amazon Redshift source.
 * Type: string (or Expression with resultType string).
 * @property {object} [port] The TCP port number that the Amazon Redshift
 * server uses to listen for client connections. The default value is 5439.
 * Type: integer (or Expression with resultType integer).
 * @property {object} [encryptedCredential] The encrypted credential used for
 * authentication. Credentials are encrypted using the integration runtime
 * credential manager. Type: string (or Expression with resultType string).
 */
export interface AmazonRedshiftLinkedService extends LinkedService {
  server: any;
  username?: any;
  password?: SecretBase;
  database: any;
  port?: any;
  encryptedCredential?: any;
}

/**
 * @class
 * Initializes a new instance of the AmazonS3LinkedService class.
 * @constructor
 * Linked service for Amazon S3.
 *
 * @property {object} [accessKeyId] The access key identifier of the Amazon S3
 * Identity and Access Management (IAM) user. Type: string (or Expression with
 * resultType string).
 * @property {object} [secretAccessKey] The secret access key of the Amazon S3
 * Identity and Access Management (IAM) user.
 * @property {string} [secretAccessKey.type] Polymorphic Discriminator
 * @property {object} [encryptedCredential] The encrypted credential used for
 * authentication. Credentials are encrypted using the integration runtime
 * credential manager. Type: string (or Expression with resultType string).
 */
export interface AmazonS3LinkedService extends LinkedService {
  accessKeyId?: any;
  secretAccessKey?: SecretBase;
  encryptedCredential?: any;
}

/**
 * @class
 * Initializes a new instance of the SapEccLinkedService class.
 * @constructor
 * Linked service for SAP ERP Central Component(SAP ECC).
 *
 * @property {string} url The URL of SAP ECC OData API. For example,
 * '[https://hostname:port/sap/opu/odata/sap/servicename/]'. Type: string (or
 * Expression with resultType string).
 * @property {string} [username] The username for Basic authentication. Type:
 * string (or Expression with resultType string).
 * @property {object} [password] The password for Basic authentication.
 * @property {string} [password.type] Polymorphic Discriminator
 * @property {string} [encryptedCredential] The encrypted credential used for
 * authentication. Credentials are encrypted using the integration runtime
 * credential manager. Either encryptedCredential or username/password must be
 * provided. Type: string (or Expression with resultType string).
 */
export interface SapEccLinkedService extends LinkedService {
  url: string;
  username?: string;
  password?: SecretBase;
  encryptedCredential?: string;
}

/**
 * @class
 * Initializes a new instance of the SapCloudForCustomerLinkedService class.
 * @constructor
 * Linked service for SAP Cloud for Customer.
 *
 * @property {object} url The URL of SAP Cloud for Customer OData API. For
 * example, '[https://[tenantname].crm.ondemand.com/sap/c4c/odata/v1]'. Type:
 * string (or Expression with resultType string).
 * @property {object} [username] The username for Basic authentication. Type:
 * string (or Expression with resultType string).
 * @property {object} [password] The password for Basic authentication.
 * @property {string} [password.type] Polymorphic Discriminator
 * @property {object} [encryptedCredential] The encrypted credential used for
 * authentication. Credentials are encrypted using the integration runtime
 * credential manager. Either encryptedCredential or username/password must be
 * provided. Type: string (or Expression with resultType string).
 */
export interface SapCloudForCustomerLinkedService extends LinkedService {
  url: any;
  username?: any;
  password?: SecretBase;
  encryptedCredential?: any;
}

/**
 * @class
 * Initializes a new instance of the SalesforceLinkedService class.
 * @constructor
 * Linked service for Salesforce.
 *
 * @property {object} [environmentUrl] The URL of Salesforce instance. Default
 * is 'https://login.salesforce.com'. To copy data from sandbox, specify
 * 'https://test.salesforce.com'. To copy data from custom domain, specify, for
 * example, 'https://[domain].my.salesforce.com'. Type: string (or Expression
 * with resultType string).
 * @property {object} [username] The username for Basic authentication of the
 * Salesforce instance. Type: string (or Expression with resultType string).
 * @property {object} [password] The password for Basic authentication of the
 * Salesforce instance.
 * @property {string} [password.type] Polymorphic Discriminator
 * @property {object} [securityToken] The security token is required to
 * remotely access Salesforce instance.
 * @property {string} [securityToken.type] Polymorphic Discriminator
 * @property {object} [encryptedCredential] The encrypted credential used for
 * authentication. Credentials are encrypted using the integration runtime
 * credential manager. Type: string (or Expression with resultType string).
 */
export interface SalesforceLinkedService extends LinkedService {
  environmentUrl?: any;
  username?: any;
  password?: SecretBase;
  securityToken?: SecretBase;
  encryptedCredential?: any;
}

/**
 * @class
 * Initializes a new instance of the AzureDataLakeStoreLinkedService class.
 * @constructor
 * Azure Data Lake Store linked service.
 *
 * @property {object} dataLakeStoreUri Data Lake Store service URI. Type:
 * string (or Expression with resultType string).
 * @property {object} [servicePrincipalId] The ID of the application used to
 * authenticate against the Azure Data Lake Store account. Type: string (or
 * Expression with resultType string).
 * @property {object} [servicePrincipalKey] The Key of the application used to
 * authenticate against the Azure Data Lake Store account.
 * @property {string} [servicePrincipalKey.type] Polymorphic Discriminator
 * @property {object} [tenant] The name or ID of the tenant to which the
 * service principal belongs. Type: string (or Expression with resultType
 * string).
 * @property {object} [accountName] Data Lake Store account name. Type: string
 * (or Expression with resultType string).
 * @property {object} [subscriptionId] Data Lake Store account subscription ID
 * (if different from Data Factory account). Type: string (or Expression with
 * resultType string).
 * @property {object} [resourceGroupName] Data Lake Store account resource
 * group name (if different from Data Factory account). Type: string (or
 * Expression with resultType string).
 * @property {object} [encryptedCredential] The encrypted credential used for
 * authentication. Credentials are encrypted using the integration runtime
 * credential manager. Type: string (or Expression with resultType string).
 */
export interface AzureDataLakeStoreLinkedService extends LinkedService {
  dataLakeStoreUri: any;
  servicePrincipalId?: any;
  servicePrincipalKey?: SecretBase;
  tenant?: any;
  accountName?: any;
  subscriptionId?: any;
  resourceGroupName?: any;
  encryptedCredential?: any;
}

/**
 * @class
 * Initializes a new instance of the MongoDbLinkedService class.
 * @constructor
 * Linked service for MongoDb data source.
 *
 * @property {object} server The IP address or server name of the MongoDB
 * server. Type: string (or Expression with resultType string).
 * @property {string} [authenticationType] The authentication type to be used
 * to connect to the MongoDB database. Possible values include: 'Basic',
 * 'Anonymous'
 * @property {object} databaseName The name of the MongoDB database that you
 * want to access. Type: string (or Expression with resultType string).
 * @property {object} [username] Username for authentication. Type: string (or
 * Expression with resultType string).
 * @property {object} [password] Password for authentication.
 * @property {string} [password.type] Polymorphic Discriminator
 * @property {object} [authSource] Database to verify the username and
 * password. Type: string (or Expression with resultType string).
 * @property {object} [port] The TCP port number that the MongoDB server uses
 * to listen for client connections. The default value is 27017. Type: integer
 * (or Expression with resultType integer), minimum: 0.
 * @property {object} [enableSsl] Specifies whether the connections to the
 * server are encrypted using SSL. The default value is false. Type: boolean
 * (or Expression with resultType boolean).
 * @property {object} [allowSelfSignedServerCert] Specifies whether to allow
 * self-signed certificates from the server. The default value is false. Type:
 * boolean (or Expression with resultType boolean).
 * @property {object} [encryptedCredential] The encrypted credential used for
 * authentication. Credentials are encrypted using the integration runtime
 * credential manager. Type: string (or Expression with resultType string).
 */
export interface MongoDbLinkedService extends LinkedService {
  server: any;
  authenticationType?: string;
  databaseName: any;
  username?: any;
  password?: SecretBase;
  authSource?: any;
  port?: any;
  enableSsl?: any;
  allowSelfSignedServerCert?: any;
  encryptedCredential?: any;
}

/**
 * @class
 * Initializes a new instance of the CassandraLinkedService class.
 * @constructor
 * Linked service for Cassandra data source.
 *
 * @property {object} host Host name for connection. Type: string (or
 * Expression with resultType string).
 * @property {object} [authenticationType] AuthenticationType to be used for
 * connection. Type: string (or Expression with resultType string).
 * @property {object} [port] The port for the connection. Type: integer (or
 * Expression with resultType integer).
 * @property {object} [username] Username for authentication. Type: string (or
 * Expression with resultType string).
 * @property {object} [password] Password for authentication.
 * @property {string} [password.type] Polymorphic Discriminator
 * @property {object} [encryptedCredential] The encrypted credential used for
 * authentication. Credentials are encrypted using the integration runtime
 * credential manager. Type: string (or Expression with resultType string).
 */
export interface CassandraLinkedService extends LinkedService {
  host: any;
  authenticationType?: any;
  port?: any;
  username?: any;
  password?: SecretBase;
  encryptedCredential?: any;
}

/**
 * @class
 * Initializes a new instance of the WebLinkedServiceTypeProperties class.
 * @constructor
 * Base definition of WebLinkedServiceTypeProperties, this typeProperties is
 * polymorphic based on authenticationType, so not flattened in SDK models.
 *
 * @property {object} url The URL of the web service endpoint, e.g.
 * http://www.microsoft.com . Type: string (or Expression with resultType
 * string).
 * @property {string} authenticationType Polymorphic Discriminator
 */
export interface WebLinkedServiceTypeProperties {
  url: any;
  authenticationType: string;
}

/**
 * @class
 * Initializes a new instance of the WebClientCertificateAuthentication class.
 * @constructor
 * A WebLinkedService that uses client certificate based authentication to
 * communicate with an HTTP endpoint. This scheme follows mutual
 * authentication; the server must also provide valid credentials to the
 * client.
 *
 * @property {object} pfx Base64-encoded contents of a PFX file.
 * @property {string} [pfx.type] Polymorphic Discriminator
 * @property {object} password Password for the PFX file.
 * @property {string} [password.type] Polymorphic Discriminator
 */
export interface WebClientCertificateAuthentication extends WebLinkedServiceTypeProperties {
  pfx: SecretBase;
  password: SecretBase;
}

/**
 * @class
 * Initializes a new instance of the WebBasicAuthentication class.
 * @constructor
 * A WebLinkedService that uses basic authentication to communicate with an
 * HTTP endpoint.
 *
 * @property {object} username User name for Basic authentication. Type: string
 * (or Expression with resultType string).
 * @property {object} password The password for Basic authentication.
 * @property {string} [password.type] Polymorphic Discriminator
 */
export interface WebBasicAuthentication extends WebLinkedServiceTypeProperties {
  username: any;
  password: SecretBase;
}

/**
 * @class
 * Initializes a new instance of the WebAnonymousAuthentication class.
 * @constructor
 * A WebLinkedService that uses anonymous authentication to communicate with an
 * HTTP endpoint.
 *
 */
export interface WebAnonymousAuthentication extends WebLinkedServiceTypeProperties {
}

/**
 * @class
 * Initializes a new instance of the WebLinkedService class.
 * @constructor
 * Web linked service.
 *
 * @property {object} typeProperties Web linked service properties.
 * @property {object} [typeProperties.url] The URL of the web service endpoint,
 * e.g. http://www.microsoft.com . Type: string (or Expression with resultType
 * string).
 * @property {string} [typeProperties.authenticationType] Polymorphic
 * Discriminator
 */
export interface WebLinkedService extends LinkedService {
  typeProperties: WebLinkedServiceTypeProperties;
}

/**
 * @class
 * Initializes a new instance of the ODataLinkedService class.
 * @constructor
 * Open Data Protocol (OData) linked service.
 *
 * @property {object} url The URL of the OData service endpoint. Type: string
 * (or Expression with resultType string).
 * @property {string} [authenticationType] Type of authentication used to
 * connect to the OData service. Possible values include: 'Basic', 'Anonymous'
 * @property {object} [userName] User name of the OData service. Type: string
 * (or Expression with resultType string).
 * @property {object} [password] Password of the OData service.
 * @property {string} [password.type] Polymorphic Discriminator
 * @property {object} [encryptedCredential] The encrypted credential used for
 * authentication. Credentials are encrypted using the integration runtime
 * credential manager. Type: string (or Expression with resultType string).
 */
export interface ODataLinkedService extends LinkedService {
  url: any;
  authenticationType?: string;
  userName?: any;
  password?: SecretBase;
  encryptedCredential?: any;
}

/**
 * @class
 * Initializes a new instance of the HdfsLinkedService class.
 * @constructor
 * Hadoop Distributed File System (HDFS) linked service.
 *
 * @property {object} url The URL of the HDFS service endpoint, e.g.
 * http://myhostname:50070/webhdfs/v1 . Type: string (or Expression with
 * resultType string).
 * @property {object} [authenticationType] Type of authentication used to
 * connect to the HDFS. Possible values are: Anonymous and Windows. Type:
 * string (or Expression with resultType string).
 * @property {object} [encryptedCredential] The encrypted credential used for
 * authentication. Credentials are encrypted using the integration runtime
 * credential manager. Type: string (or Expression with resultType string).
 * @property {object} [userName] User name for Windows authentication. Type:
 * string (or Expression with resultType string).
 * @property {object} [password] Password for Windows authentication.
 * @property {string} [password.type] Polymorphic Discriminator
 */
export interface HdfsLinkedService extends LinkedService {
  url: any;
  authenticationType?: any;
  encryptedCredential?: any;
  userName?: any;
  password?: SecretBase;
}

/**
 * @class
 * Initializes a new instance of the OdbcLinkedService class.
 * @constructor
 * Open Database Connectivity (ODBC) linked service.
 *
 * @property {object} connectionString The non-access credential portion of the
 * connection string as well as an optional encrypted credential. Type: string,
 * SecureString or AzureKeyVaultSecretReference.
 * @property {object} [authenticationType] Type of authentication used to
 * connect to the ODBC data store. Possible values are: Anonymous and Basic.
 * Type: string (or Expression with resultType string).
 * @property {object} [credential] The access credential portion of the
 * connection string specified in driver-specific property-value format.
 * @property {string} [credential.type] Polymorphic Discriminator
 * @property {object} [userName] User name for Basic authentication. Type:
 * string (or Expression with resultType string).
 * @property {object} [password] Password for Basic authentication.
 * @property {string} [password.type] Polymorphic Discriminator
 * @property {object} [encryptedCredential] The encrypted credential used for
 * authentication. Credentials are encrypted using the integration runtime
 * credential manager. Type: string (or Expression with resultType string).
 */
export interface OdbcLinkedService extends LinkedService {
  connectionString: any;
  authenticationType?: any;
  credential?: SecretBase;
  userName?: any;
  password?: SecretBase;
  encryptedCredential?: any;
}

/**
 * @class
 * Initializes a new instance of the AzureMLLinkedService class.
 * @constructor
 * Azure ML Web Service linked service.
 *
 * @property {object} mlEndpoint The Batch Execution REST URL for an Azure ML
 * Web Service endpoint. Type: string (or Expression with resultType string).
 * @property {object} apiKey The API key for accessing the Azure ML model
 * endpoint.
 * @property {string} [apiKey.type] Polymorphic Discriminator
 * @property {object} [updateResourceEndpoint] The Update Resource REST URL for
 * an Azure ML Web Service endpoint. Type: string (or Expression with
 * resultType string).
 * @property {object} [servicePrincipalId] The ID of the service principal used
 * to authenticate against the ARM-based updateResourceEndpoint of an Azure ML
 * web service. Type: string (or Expression with resultType string).
 * @property {object} [servicePrincipalKey] The key of the service principal
 * used to authenticate against the ARM-based updateResourceEndpoint of an
 * Azure ML web service.
 * @property {string} [servicePrincipalKey.type] Polymorphic Discriminator
 * @property {object} [tenant] The name or ID of the tenant to which the
 * service principal belongs. Type: string (or Expression with resultType
 * string).
 * @property {object} [encryptedCredential] The encrypted credential used for
 * authentication. Credentials are encrypted using the integration runtime
 * credential manager. Type: string (or Expression with resultType string).
 */
export interface AzureMLLinkedService extends LinkedService {
  mlEndpoint: any;
  apiKey: SecretBase;
  updateResourceEndpoint?: any;
  servicePrincipalId?: any;
  servicePrincipalKey?: SecretBase;
  tenant?: any;
  encryptedCredential?: any;
}

/**
 * @class
 * Initializes a new instance of the TeradataLinkedService class.
 * @constructor
 * Linked service for Teradata data source.
 *
 * @property {object} server Server name for connection. Type: string (or
 * Expression with resultType string).
 * @property {string} [authenticationType] AuthenticationType to be used for
 * connection. Possible values include: 'Basic', 'Windows'
 * @property {object} [username] Username for authentication. Type: string (or
 * Expression with resultType string).
 * @property {object} [password] Password for authentication.
 * @property {string} [password.type] Polymorphic Discriminator
 * @property {object} [encryptedCredential] The encrypted credential used for
 * authentication. Credentials are encrypted using the integration runtime
 * credential manager. Type: string (or Expression with resultType string).
 */
export interface TeradataLinkedService extends LinkedService {
  server: any;
  authenticationType?: string;
  username?: any;
  password?: SecretBase;
  encryptedCredential?: any;
}

/**
 * @class
 * Initializes a new instance of the Db2LinkedService class.
 * @constructor
 * Linked service for DB2 data source.
 *
 * @property {object} server Server name for connection. Type: string (or
 * Expression with resultType string).
 * @property {object} database Database name for connection. Type: string (or
 * Expression with resultType string).
 * @property {string} [authenticationType] AuthenticationType to be used for
 * connection. Possible values include: 'Basic'
 * @property {object} [username] Username for authentication. Type: string (or
 * Expression with resultType string).
 * @property {object} [password] Password for authentication.
 * @property {string} [password.type] Polymorphic Discriminator
 * @property {object} [encryptedCredential] The encrypted credential used for
 * authentication. Credentials are encrypted using the integration runtime
 * credential manager. Type: string (or Expression with resultType string).
 */
export interface Db2LinkedService extends LinkedService {
  server: any;
  database: any;
  authenticationType?: string;
  username?: any;
  password?: SecretBase;
  encryptedCredential?: any;
}

/**
 * @class
 * Initializes a new instance of the SybaseLinkedService class.
 * @constructor
 * Linked service for Sybase data source.
 *
 * @property {object} server Server name for connection. Type: string (or
 * Expression with resultType string).
 * @property {object} database Database name for connection. Type: string (or
 * Expression with resultType string).
 * @property {object} [schema] Schema name for connection. Type: string (or
 * Expression with resultType string).
 * @property {string} [authenticationType] AuthenticationType to be used for
 * connection. Possible values include: 'Basic', 'Windows'
 * @property {object} [username] Username for authentication. Type: string (or
 * Expression with resultType string).
 * @property {object} [password] Password for authentication.
 * @property {string} [password.type] Polymorphic Discriminator
 * @property {object} [encryptedCredential] The encrypted credential used for
 * authentication. Credentials are encrypted using the integration runtime
 * credential manager. Type: string (or Expression with resultType string).
 */
export interface SybaseLinkedService extends LinkedService {
  server: any;
  database: any;
  schema?: any;
  authenticationType?: string;
  username?: any;
  password?: SecretBase;
  encryptedCredential?: any;
}

/**
 * @class
 * Initializes a new instance of the PostgreSqlLinkedService class.
 * @constructor
 * Linked service for PostgreSQL data source.
 *
 * @property {object} connectionString The connection string.
 * @property {string} [connectionString.type] Polymorphic Discriminator
 * @property {object} [password] The Azure key vault secret reference of
 * password in connection string.
 * @property {object} [password.store] The Azure Key Vault linked service
 * reference.
 * @property {string} [password.store.referenceName] Reference LinkedService
 * name.
 * @property {object} [password.store.parameters] Arguments for LinkedService.
 * @property {object} [password.secretName] The name of the secret in Azure Key
 * Vault. Type: string (or Expression with resultType string).
 * @property {object} [password.secretVersion] The version of the secret in
 * Azure Key Vault. The default value is the latest version of the secret.
 * Type: string (or Expression with resultType string).
 * @property {object} [encryptedCredential] The encrypted credential used for
 * authentication. Credentials are encrypted using the integration runtime
 * credential manager. Type: string (or Expression with resultType string).
 */
export interface PostgreSqlLinkedService extends LinkedService {
  connectionString: SecretBase;
  password?: AzureKeyVaultSecretReference;
  encryptedCredential?: any;
}

/**
 * @class
 * Initializes a new instance of the MySqlLinkedService class.
 * @constructor
 * Linked service for MySQL data source.
 *
 * @property {object} connectionString The connection string.
 * @property {string} [connectionString.type] Polymorphic Discriminator
 * @property {object} [password] The Azure key vault secret reference of
 * password in connection string.
 * @property {object} [password.store] The Azure Key Vault linked service
 * reference.
 * @property {string} [password.store.referenceName] Reference LinkedService
 * name.
 * @property {object} [password.store.parameters] Arguments for LinkedService.
 * @property {object} [password.secretName] The name of the secret in Azure Key
 * Vault. Type: string (or Expression with resultType string).
 * @property {object} [password.secretVersion] The version of the secret in
 * Azure Key Vault. The default value is the latest version of the secret.
 * Type: string (or Expression with resultType string).
 * @property {object} [encryptedCredential] The encrypted credential used for
 * authentication. Credentials are encrypted using the integration runtime
 * credential manager. Type: string (or Expression with resultType string).
 */
export interface MySqlLinkedService extends LinkedService {
  connectionString: SecretBase;
  password?: AzureKeyVaultSecretReference;
  encryptedCredential?: any;
}

/**
 * @class
 * Initializes a new instance of the AzureMySqlLinkedService class.
 * @constructor
 * Azure MySQL database linked service.
 *
 * @property {object} connectionString The connection string. Type: string,
 * SecureString or AzureKeyVaultSecretReference.
 * @property {object} [password] The Azure key vault secret reference of
 * password in connection string.
 * @property {object} [password.store] The Azure Key Vault linked service
 * reference.
 * @property {string} [password.store.referenceName] Reference LinkedService
 * name.
 * @property {object} [password.store.parameters] Arguments for LinkedService.
 * @property {object} [password.secretName] The name of the secret in Azure Key
 * Vault. Type: string (or Expression with resultType string).
 * @property {object} [password.secretVersion] The version of the secret in
 * Azure Key Vault. The default value is the latest version of the secret.
 * Type: string (or Expression with resultType string).
 * @property {object} [encryptedCredential] The encrypted credential used for
 * authentication. Credentials are encrypted using the integration runtime
 * credential manager. Type: string (or Expression with resultType string).
 */
export interface AzureMySqlLinkedService extends LinkedService {
  connectionString: any;
  password?: AzureKeyVaultSecretReference;
  encryptedCredential?: any;
}

/**
 * @class
 * Initializes a new instance of the OracleLinkedService class.
 * @constructor
 * Oracle database.
 *
 * @property {object} connectionString The connection string. Type: string,
 * SecureString or AzureKeyVaultSecretReference.
 * @property {object} [password] The Azure key vault secret reference of
 * password in connection string.
 * @property {object} [password.store] The Azure Key Vault linked service
 * reference.
 * @property {string} [password.store.referenceName] Reference LinkedService
 * name.
 * @property {object} [password.store.parameters] Arguments for LinkedService.
 * @property {object} [password.secretName] The name of the secret in Azure Key
 * Vault. Type: string (or Expression with resultType string).
 * @property {object} [password.secretVersion] The version of the secret in
 * Azure Key Vault. The default value is the latest version of the secret.
 * Type: string (or Expression with resultType string).
 * @property {object} [encryptedCredential] The encrypted credential used for
 * authentication. Credentials are encrypted using the integration runtime
 * credential manager. Type: string (or Expression with resultType string).
 */
export interface OracleLinkedService extends LinkedService {
  connectionString: any;
  password?: AzureKeyVaultSecretReference;
  encryptedCredential?: any;
}

/**
 * @class
 * Initializes a new instance of the FileServerLinkedService class.
 * @constructor
 * File system linked service.
 *
 * @property {object} host Host name of the server. Type: string (or Expression
 * with resultType string).
 * @property {object} [userId] User ID to logon the server. Type: string (or
 * Expression with resultType string).
 * @property {object} [password] Password to logon the server.
 * @property {string} [password.type] Polymorphic Discriminator
 * @property {object} [encryptedCredential] The encrypted credential used for
 * authentication. Credentials are encrypted using the integration runtime
 * credential manager. Type: string (or Expression with resultType string).
 */
export interface FileServerLinkedService extends LinkedService {
  host: any;
  userId?: any;
  password?: SecretBase;
  encryptedCredential?: any;
}

/**
 * @class
 * Initializes a new instance of the HDInsightLinkedService class.
 * @constructor
 * HDInsight linked service.
 *
 * @property {object} clusterUri HDInsight cluster URI. Type: string (or
 * Expression with resultType string).
 * @property {object} [userName] HDInsight cluster user name. Type: string (or
 * Expression with resultType string).
 * @property {object} [password] HDInsight cluster password.
 * @property {string} [password.type] Polymorphic Discriminator
 * @property {object} [linkedServiceName] The Azure Storage linked service
 * reference.
 * @property {string} [linkedServiceName.referenceName] Reference LinkedService
 * name.
 * @property {object} [linkedServiceName.parameters] Arguments for
 * LinkedService.
 * @property {object} [hcatalogLinkedServiceName] A reference to the Azure SQL
 * linked service that points to the HCatalog database.
 * @property {string} [hcatalogLinkedServiceName.referenceName] Reference
 * LinkedService name.
 * @property {object} [hcatalogLinkedServiceName.parameters] Arguments for
 * LinkedService.
 * @property {object} [encryptedCredential] The encrypted credential used for
 * authentication. Credentials are encrypted using the integration runtime
 * credential manager. Type: string (or Expression with resultType string).
 */
export interface HDInsightLinkedService extends LinkedService {
  clusterUri: any;
  userName?: any;
  password?: SecretBase;
  linkedServiceName?: LinkedServiceReference;
  hcatalogLinkedServiceName?: LinkedServiceReference;
  encryptedCredential?: any;
}

/**
 * @class
 * Initializes a new instance of the DynamicsLinkedService class.
 * @constructor
 * Dynamics linked service.
 *
 * @property {object} deploymentType The deployment type of the Dynamics
 * instance. 'Online' for Dynamics Online and 'OnPremisesWithIfd' for Dynamics
 * on-premises with Ifd. Type: string (or Expression with resultType string).
 * @property {object} [hostName] The host name of the on-premises Dynamics
 * server. The property is required for on-prem and not allowed for online.
 * Type: string (or Expression with resultType string).
 * @property {object} [port] The port of on-premises Dynamics server. The
 * property is required for on-prem and not allowed for online. Default is 443.
 * Type: integer (or Expression with resultType integer), minimum: 0.
 * @property {object} [serviceUri] The URL to the Microsoft Dynamics server.
 * The property is required for on-line and not allowed for on-prem. Type:
 * string (or Expression with resultType string).
 * @property {object} [organizationName] The organization name of the Dynamics
 * instance. The property is required for on-prem and required for online when
 * there are more than one Dynamics instances associated with the user. Type:
 * string (or Expression with resultType string).
 * @property {object} authenticationType The authentication type to connect to
 * Dynamics server. 'Office365' for online scenario, 'Ifd' for on-premises with
 * Ifd scenario. Type: string (or Expression with resultType string).
 * @property {object} username User name to access the Dynamics instance. Type:
 * string (or Expression with resultType string).
 * @property {object} [password] Password to access the Dynamics instance.
 * @property {string} [password.type] Polymorphic Discriminator
 * @property {object} [encryptedCredential] The encrypted credential used for
 * authentication. Credentials are encrypted using the integration runtime
 * credential manager. Type: string (or Expression with resultType string).
 */
export interface DynamicsLinkedService extends LinkedService {
  deploymentType: any;
  hostName?: any;
  port?: any;
  serviceUri?: any;
  organizationName?: any;
  authenticationType: any;
  username: any;
  password?: SecretBase;
  encryptedCredential?: any;
}

/**
 * @class
 * Initializes a new instance of the CosmosDbLinkedService class.
 * @constructor
 * Microsoft Azure Cosmos Database (CosmosDB) linked service.
 *
 * @property {object} connectionString The connection string. Type: string,
 * SecureString or AzureKeyVaultSecretReference.
 * @property {object} [accountKey] The Azure key vault secret reference of
 * accountKey in connection string.
 * @property {object} [accountKey.store] The Azure Key Vault linked service
 * reference.
 * @property {string} [accountKey.store.referenceName] Reference LinkedService
 * name.
 * @property {object} [accountKey.store.parameters] Arguments for
 * LinkedService.
 * @property {object} [accountKey.secretName] The name of the secret in Azure
 * Key Vault. Type: string (or Expression with resultType string).
 * @property {object} [accountKey.secretVersion] The version of the secret in
 * Azure Key Vault. The default value is the latest version of the secret.
 * Type: string (or Expression with resultType string).
 * @property {object} [encryptedCredential] The encrypted credential used for
 * authentication. Credentials are encrypted using the integration runtime
 * credential manager. Type: string (or Expression with resultType string).
 */
export interface CosmosDbLinkedService extends LinkedService {
  connectionString: any;
  accountKey?: AzureKeyVaultSecretReference;
  encryptedCredential?: any;
}

/**
 * @class
 * Initializes a new instance of the AzureKeyVaultLinkedService class.
 * @constructor
 * Azure Key Vault linked service.
 *
 * @property {object} baseUrl The base URL of the Azure Key Vault. e.g.
 * https://myakv.vault.azure.net Type: string (or Expression with resultType
 * string).
 */
export interface AzureKeyVaultLinkedService extends LinkedService {
  baseUrl: any;
}

/**
 * @class
 * Initializes a new instance of the AzureBatchLinkedService class.
 * @constructor
 * Azure Batch linked service.
 *
 * @property {object} accountName The Azure Batch account name. Type: string
 * (or Expression with resultType string).
 * @property {object} [accessKey] The Azure Batch account access key.
 * @property {string} [accessKey.type] Polymorphic Discriminator
 * @property {object} batchUri The Azure Batch URI. Type: string (or Expression
 * with resultType string).
 * @property {object} poolName The Azure Batch pool name. Type: string (or
 * Expression with resultType string).
 * @property {object} linkedServiceName The Azure Storage linked service
 * reference.
 * @property {string} [linkedServiceName.referenceName] Reference LinkedService
 * name.
 * @property {object} [linkedServiceName.parameters] Arguments for
 * LinkedService.
 * @property {object} [encryptedCredential] The encrypted credential used for
 * authentication. Credentials are encrypted using the integration runtime
 * credential manager. Type: string (or Expression with resultType string).
 */
export interface AzureBatchLinkedService extends LinkedService {
  accountName: any;
  accessKey?: SecretBase;
  batchUri: any;
  poolName: any;
  linkedServiceName: LinkedServiceReference;
  encryptedCredential?: any;
}

/**
 * @class
 * Initializes a new instance of the AzureSqlDatabaseLinkedService class.
 * @constructor
 * Microsoft Azure SQL Database linked service.
 *
 * @property {object} connectionString The connection string. Type: string,
 * SecureString or AzureKeyVaultSecretReference.
 * @property {object} [password] The Azure key vault secret reference of
 * password in connection string.
 * @property {object} [password.store] The Azure Key Vault linked service
 * reference.
 * @property {string} [password.store.referenceName] Reference LinkedService
 * name.
 * @property {object} [password.store.parameters] Arguments for LinkedService.
 * @property {object} [password.secretName] The name of the secret in Azure Key
 * Vault. Type: string (or Expression with resultType string).
 * @property {object} [password.secretVersion] The version of the secret in
 * Azure Key Vault. The default value is the latest version of the secret.
 * Type: string (or Expression with resultType string).
 * @property {object} [servicePrincipalId] The ID of the service principal used
 * to authenticate against Azure SQL Database. Type: string (or Expression with
 * resultType string).
 * @property {object} [servicePrincipalKey] The key of the service principal
 * used to authenticate against Azure SQL Database.
 * @property {string} [servicePrincipalKey.type] Polymorphic Discriminator
 * @property {object} [tenant] The name or ID of the tenant to which the
 * service principal belongs. Type: string (or Expression with resultType
 * string).
 * @property {object} [encryptedCredential] The encrypted credential used for
 * authentication. Credentials are encrypted using the integration runtime
 * credential manager. Type: string (or Expression with resultType string).
 */
export interface AzureSqlDatabaseLinkedService extends LinkedService {
  connectionString: any;
  password?: AzureKeyVaultSecretReference;
  servicePrincipalId?: any;
  servicePrincipalKey?: SecretBase;
  tenant?: any;
  encryptedCredential?: any;
}

/**
 * @class
 * Initializes a new instance of the SqlServerLinkedService class.
 * @constructor
 * SQL Server linked service.
 *
 * @property {object} connectionString The connection string. Type: string,
 * SecureString or AzureKeyVaultSecretReference.
 * @property {object} [userName] The on-premises Windows authentication user
 * name. Type: string (or Expression with resultType string).
 * @property {object} [password] The on-premises Windows authentication
 * password.
 * @property {string} [password.type] Polymorphic Discriminator
 * @property {object} [encryptedCredential] The encrypted credential used for
 * authentication. Credentials are encrypted using the integration runtime
 * credential manager. Type: string (or Expression with resultType string).
 */
export interface SqlServerLinkedService extends LinkedService {
  connectionString: any;
  userName?: any;
  password?: SecretBase;
  encryptedCredential?: any;
}

/**
 * @class
 * Initializes a new instance of the AzureSqlDWLinkedService class.
 * @constructor
 * Azure SQL Data Warehouse linked service.
 *
 * @property {object} connectionString The connection string. Type: string,
 * SecureString or AzureKeyVaultSecretReference. Type: string, SecureString or
 * AzureKeyVaultSecretReference.
 * @property {object} [password] The Azure key vault secret reference of
 * password in connection string.
 * @property {object} [password.store] The Azure Key Vault linked service
 * reference.
 * @property {string} [password.store.referenceName] Reference LinkedService
 * name.
 * @property {object} [password.store.parameters] Arguments for LinkedService.
 * @property {object} [password.secretName] The name of the secret in Azure Key
 * Vault. Type: string (or Expression with resultType string).
 * @property {object} [password.secretVersion] The version of the secret in
 * Azure Key Vault. The default value is the latest version of the secret.
 * Type: string (or Expression with resultType string).
 * @property {object} [servicePrincipalId] The ID of the service principal used
 * to authenticate against Azure SQL Data Warehouse. Type: string (or
 * Expression with resultType string).
 * @property {object} [servicePrincipalKey] The key of the service principal
 * used to authenticate against Azure SQL Data Warehouse.
 * @property {string} [servicePrincipalKey.type] Polymorphic Discriminator
 * @property {object} [tenant] The name or ID of the tenant to which the
 * service principal belongs. Type: string (or Expression with resultType
 * string).
 * @property {object} [encryptedCredential] The encrypted credential used for
 * authentication. Credentials are encrypted using the integration runtime
 * credential manager. Type: string (or Expression with resultType string).
 */
export interface AzureSqlDWLinkedService extends LinkedService {
  connectionString: any;
  password?: AzureKeyVaultSecretReference;
  servicePrincipalId?: any;
  servicePrincipalKey?: SecretBase;
  tenant?: any;
  encryptedCredential?: any;
}

/**
 * @class
 * Initializes a new instance of the AzureTableStorageLinkedService class.
 * @constructor
 * The azure table storage linked service.
 *
 * @property {object} [connectionString] The connection string. It is mutually
 * exclusive with sasUri property. Type: string, SecureString or
 * AzureKeyVaultSecretReference.
 * @property {object} [accountKey] The Azure key vault secret reference of
 * accountKey in connection string.
 * @property {object} [accountKey.store] The Azure Key Vault linked service
 * reference.
 * @property {string} [accountKey.store.referenceName] Reference LinkedService
 * name.
 * @property {object} [accountKey.store.parameters] Arguments for
 * LinkedService.
 * @property {object} [accountKey.secretName] The name of the secret in Azure
 * Key Vault. Type: string (or Expression with resultType string).
 * @property {object} [accountKey.secretVersion] The version of the secret in
 * Azure Key Vault. The default value is the latest version of the secret.
 * Type: string (or Expression with resultType string).
 * @property {object} [sasUri] SAS URI of the Azure Storage resource. It is
 * mutually exclusive with connectionString property. Type: string,
 * SecureString or AzureKeyVaultSecretReference.
 * @property {object} [sasToken] The Azure key vault secret reference of
 * sasToken in sas uri.
 * @property {object} [sasToken.store] The Azure Key Vault linked service
 * reference.
 * @property {string} [sasToken.store.referenceName] Reference LinkedService
 * name.
 * @property {object} [sasToken.store.parameters] Arguments for LinkedService.
 * @property {object} [sasToken.secretName] The name of the secret in Azure Key
 * Vault. Type: string (or Expression with resultType string).
 * @property {object} [sasToken.secretVersion] The version of the secret in
 * Azure Key Vault. The default value is the latest version of the secret.
 * Type: string (or Expression with resultType string).
 * @property {string} [encryptedCredential] The encrypted credential used for
 * authentication. Credentials are encrypted using the integration runtime
 * credential manager. Type: string (or Expression with resultType string).
 */
export interface AzureTableStorageLinkedService extends LinkedService {
  connectionString?: any;
  accountKey?: AzureKeyVaultSecretReference;
  sasUri?: any;
  sasToken?: AzureKeyVaultSecretReference;
  encryptedCredential?: string;
}

/**
 * @class
 * Initializes a new instance of the AzureBlobStorageLinkedService class.
 * @constructor
 * The azure blob storage linked service.
 *
 * @property {object} [connectionString] The connection string. It is mutually
 * exclusive with sasUri, serviceEndpoint property. Type: string, SecureString
 * or AzureKeyVaultSecretReference.
 * @property {object} [accountKey] The Azure key vault secret reference of
 * accountKey in connection string.
 * @property {object} [accountKey.store] The Azure Key Vault linked service
 * reference.
 * @property {string} [accountKey.store.referenceName] Reference LinkedService
 * name.
 * @property {object} [accountKey.store.parameters] Arguments for
 * LinkedService.
 * @property {object} [accountKey.secretName] The name of the secret in Azure
 * Key Vault. Type: string (or Expression with resultType string).
 * @property {object} [accountKey.secretVersion] The version of the secret in
 * Azure Key Vault. The default value is the latest version of the secret.
 * Type: string (or Expression with resultType string).
 * @property {object} [sasUri] SAS URI of the Azure Blob Storage resource. It
 * is mutually exclusive with connectionString, serviceEndpoint property. Type:
 * string, SecureString or AzureKeyVaultSecretReference.
 * @property {object} [sasToken] The Azure key vault secret reference of
 * sasToken in sas uri.
 * @property {object} [sasToken.store] The Azure Key Vault linked service
 * reference.
 * @property {string} [sasToken.store.referenceName] Reference LinkedService
 * name.
 * @property {object} [sasToken.store.parameters] Arguments for LinkedService.
 * @property {object} [sasToken.secretName] The name of the secret in Azure Key
 * Vault. Type: string (or Expression with resultType string).
 * @property {object} [sasToken.secretVersion] The version of the secret in
 * Azure Key Vault. The default value is the latest version of the secret.
 * Type: string (or Expression with resultType string).
 * @property {string} [serviceEndpoint] Blob service endpoint of the Azure Blob
 * Storage resource. It is mutually exclusive with connectionString, sasUri
 * property.
 * @property {object} [servicePrincipalId] The ID of the service principal used
 * to authenticate against Azure SQL Data Warehouse. Type: string (or
 * Expression with resultType string).
 * @property {object} [servicePrincipalKey] The key of the service principal
 * used to authenticate against Azure SQL Data Warehouse.
 * @property {string} [servicePrincipalKey.type] Polymorphic Discriminator
 * @property {object} [tenant] The name or ID of the tenant to which the
 * service principal belongs. Type: string (or Expression with resultType
 * string).
 * @property {string} [encryptedCredential] The encrypted credential used for
 * authentication. Credentials are encrypted using the integration runtime
 * credential manager. Type: string (or Expression with resultType string).
 */
export interface AzureBlobStorageLinkedService extends LinkedService {
  connectionString?: any;
  accountKey?: AzureKeyVaultSecretReference;
  sasUri?: any;
  sasToken?: AzureKeyVaultSecretReference;
  serviceEndpoint?: string;
  servicePrincipalId?: any;
  servicePrincipalKey?: SecretBase;
  tenant?: any;
  encryptedCredential?: string;
}

/**
 * @class
 * Initializes a new instance of the AzureStorageLinkedService class.
 * @constructor
 * The storage account linked service.
 *
 * @property {object} [connectionString] The connection string. It is mutually
 * exclusive with sasUri property. Type: string, SecureString or
 * AzureKeyVaultSecretReference.
 * @property {object} [accountKey] The Azure key vault secret reference of
 * accountKey in connection string.
 * @property {object} [accountKey.store] The Azure Key Vault linked service
 * reference.
 * @property {string} [accountKey.store.referenceName] Reference LinkedService
 * name.
 * @property {object} [accountKey.store.parameters] Arguments for
 * LinkedService.
 * @property {object} [accountKey.secretName] The name of the secret in Azure
 * Key Vault. Type: string (or Expression with resultType string).
 * @property {object} [accountKey.secretVersion] The version of the secret in
 * Azure Key Vault. The default value is the latest version of the secret.
 * Type: string (or Expression with resultType string).
 * @property {object} [sasUri] SAS URI of the Azure Storage resource. It is
 * mutually exclusive with connectionString property. Type: string,
 * SecureString or AzureKeyVaultSecretReference.
 * @property {object} [sasToken] The Azure key vault secret reference of
 * sasToken in sas uri.
 * @property {object} [sasToken.store] The Azure Key Vault linked service
 * reference.
 * @property {string} [sasToken.store.referenceName] Reference LinkedService
 * name.
 * @property {object} [sasToken.store.parameters] Arguments for LinkedService.
 * @property {object} [sasToken.secretName] The name of the secret in Azure Key
 * Vault. Type: string (or Expression with resultType string).
 * @property {object} [sasToken.secretVersion] The version of the secret in
 * Azure Key Vault. The default value is the latest version of the secret.
 * Type: string (or Expression with resultType string).
 * @property {string} [encryptedCredential] The encrypted credential used for
 * authentication. Credentials are encrypted using the integration runtime
 * credential manager. Type: string (or Expression with resultType string).
 */
export interface AzureStorageLinkedService extends LinkedService {
  connectionString?: any;
  accountKey?: AzureKeyVaultSecretReference;
  sasUri?: any;
  sasToken?: AzureKeyVaultSecretReference;
  encryptedCredential?: string;
}

/**
 * @class
 * Initializes a new instance of the ResponsysObjectDataset class.
 * @constructor
 * Responsys dataset.
 *
 */
export interface ResponsysObjectDataset extends Dataset {
}

/**
 * @class
 * Initializes a new instance of the SalesforceMarketingCloudObjectDataset class.
 * @constructor
 * Salesforce Marketing Cloud dataset.
 *
 */
export interface SalesforceMarketingCloudObjectDataset extends Dataset {
}

/**
 * @class
 * Initializes a new instance of the VerticaTableDataset class.
 * @constructor
 * Vertica dataset.
 *
 */
export interface VerticaTableDataset extends Dataset {
}

/**
 * @class
 * Initializes a new instance of the NetezzaTableDataset class.
 * @constructor
 * Netezza dataset.
 *
 */
export interface NetezzaTableDataset extends Dataset {
}

/**
 * @class
 * Initializes a new instance of the ZohoObjectDataset class.
 * @constructor
 * Zoho server dataset.
 *
 */
export interface ZohoObjectDataset extends Dataset {
}

/**
 * @class
 * Initializes a new instance of the XeroObjectDataset class.
 * @constructor
 * Xero Serivce dataset.
 *
 */
export interface XeroObjectDataset extends Dataset {
}

/**
 * @class
 * Initializes a new instance of the SquareObjectDataset class.
 * @constructor
 * Square Serivce dataset.
 *
 */
export interface SquareObjectDataset extends Dataset {
}

/**
 * @class
 * Initializes a new instance of the SparkObjectDataset class.
 * @constructor
 * Spark Server dataset.
 *
 */
export interface SparkObjectDataset extends Dataset {
}

/**
 * @class
 * Initializes a new instance of the ShopifyObjectDataset class.
 * @constructor
 * Shopify Serivce dataset.
 *
 */
export interface ShopifyObjectDataset extends Dataset {
}

/**
 * @class
 * Initializes a new instance of the ServiceNowObjectDataset class.
 * @constructor
 * ServiceNow server dataset.
 *
 */
export interface ServiceNowObjectDataset extends Dataset {
}

/**
 * @class
 * Initializes a new instance of the QuickBooksObjectDataset class.
 * @constructor
 * QuickBooks server dataset.
 *
 */
export interface QuickBooksObjectDataset extends Dataset {
}

/**
 * @class
 * Initializes a new instance of the PrestoObjectDataset class.
 * @constructor
 * Presto server dataset.
 *
 */
export interface PrestoObjectDataset extends Dataset {
}

/**
 * @class
 * Initializes a new instance of the PhoenixObjectDataset class.
 * @constructor
 * Phoenix server dataset.
 *
 */
export interface PhoenixObjectDataset extends Dataset {
}

/**
 * @class
 * Initializes a new instance of the PaypalObjectDataset class.
 * @constructor
 * Paypal Serivce dataset.
 *
 */
export interface PaypalObjectDataset extends Dataset {
}

/**
 * @class
 * Initializes a new instance of the MarketoObjectDataset class.
 * @constructor
 * Marketo server dataset.
 *
 */
export interface MarketoObjectDataset extends Dataset {
}

/**
 * @class
 * Initializes a new instance of the MariaDBTableDataset class.
 * @constructor
 * MariaDB server dataset.
 *
 */
export interface MariaDBTableDataset extends Dataset {
}

/**
 * @class
 * Initializes a new instance of the MagentoObjectDataset class.
 * @constructor
 * Magento server dataset.
 *
 */
export interface MagentoObjectDataset extends Dataset {
}

/**
 * @class
 * Initializes a new instance of the JiraObjectDataset class.
 * @constructor
 * Jira Serivce dataset.
 *
 */
export interface JiraObjectDataset extends Dataset {
}

/**
 * @class
 * Initializes a new instance of the ImpalaObjectDataset class.
 * @constructor
 * Impala server dataset.
 *
 */
export interface ImpalaObjectDataset extends Dataset {
}

/**
 * @class
 * Initializes a new instance of the HubspotObjectDataset class.
 * @constructor
 * Hubspot Serivce dataset.
 *
 */
export interface HubspotObjectDataset extends Dataset {
}

/**
 * @class
 * Initializes a new instance of the HiveObjectDataset class.
 * @constructor
 * Hive Server dataset.
 *
 */
export interface HiveObjectDataset extends Dataset {
}

/**
 * @class
 * Initializes a new instance of the HBaseObjectDataset class.
 * @constructor
 * HBase server dataset.
 *
 */
export interface HBaseObjectDataset extends Dataset {
}

/**
 * @class
 * Initializes a new instance of the GreenplumTableDataset class.
 * @constructor
 * Greenplum Database dataset.
 *
 */
export interface GreenplumTableDataset extends Dataset {
}

/**
 * @class
 * Initializes a new instance of the GoogleBigQueryObjectDataset class.
 * @constructor
 * Google BigQuery service dataset.
 *
 */
export interface GoogleBigQueryObjectDataset extends Dataset {
}

/**
 * @class
 * Initializes a new instance of the EloquaObjectDataset class.
 * @constructor
 * Eloqua server dataset.
 *
 */
export interface EloquaObjectDataset extends Dataset {
}

/**
 * @class
 * Initializes a new instance of the DrillTableDataset class.
 * @constructor
 * Drill server dataset.
 *
 */
export interface DrillTableDataset extends Dataset {
}

/**
 * @class
 * Initializes a new instance of the CouchbaseTableDataset class.
 * @constructor
 * Couchbase server dataset.
 *
 */
export interface CouchbaseTableDataset extends Dataset {
}

/**
 * @class
 * Initializes a new instance of the ConcurObjectDataset class.
 * @constructor
 * Concur Serivce dataset.
 *
 */
export interface ConcurObjectDataset extends Dataset {
}

/**
 * @class
 * Initializes a new instance of the AzurePostgreSqlTableDataset class.
 * @constructor
 * Azure PostgreSQL dataset.
 *
 */
export interface AzurePostgreSqlTableDataset extends Dataset {
}

/**
 * @class
 * Initializes a new instance of the AmazonMWSObjectDataset class.
 * @constructor
 * Amazon Marketplace Web Service dataset.
 *
 */
export interface AmazonMWSObjectDataset extends Dataset {
}

/**
 * @class
 * Initializes a new instance of the DatasetCompression class.
 * @constructor
 * The compression method used on a dataset.
 *
 * @property {string} type Polymorphic Discriminator
 */
export interface DatasetCompression {
  type: string;
  /**
   * @property Describes unknown properties. The value of an unknown property
   * can be of "any" type.
   */
  [property: string]: any;
}

/**
 * @class
 * Initializes a new instance of the DatasetZipDeflateCompression class.
 * @constructor
 * The ZipDeflate compression method used on a dataset.
 *
 * @property {string} [level] The ZipDeflate compression level. Possible values
 * include: 'Optimal', 'Fastest'
 */
export interface DatasetZipDeflateCompression extends DatasetCompression {
  level?: string;
}

/**
 * @class
 * Initializes a new instance of the DatasetDeflateCompression class.
 * @constructor
 * The Deflate compression method used on a dataset.
 *
 * @property {string} [level] The Deflate compression level. Possible values
 * include: 'Optimal', 'Fastest'
 */
export interface DatasetDeflateCompression extends DatasetCompression {
  level?: string;
}

/**
 * @class
 * Initializes a new instance of the DatasetGZipCompression class.
 * @constructor
 * The GZip compression method used on a dataset.
 *
 * @property {string} [level] The GZip compression level. Possible values
 * include: 'Optimal', 'Fastest'
 */
export interface DatasetGZipCompression extends DatasetCompression {
  level?: string;
}

/**
 * @class
 * Initializes a new instance of the DatasetBZip2Compression class.
 * @constructor
 * The BZip2 compression method used on a dataset.
 *
 */
export interface DatasetBZip2Compression extends DatasetCompression {
}

/**
 * @class
 * Initializes a new instance of the DatasetStorageFormat class.
 * @constructor
 * The format definition of a storage.
 *
 * @property {object} [serializer] Serializer. Type: string (or Expression with
 * resultType string).
 * @property {object} [deserializer] Deserializer. Type: string (or Expression
 * with resultType string).
 * @property {string} type Polymorphic Discriminator
 */
export interface DatasetStorageFormat {
  serializer?: any;
  deserializer?: any;
  type: string;
  /**
   * @property Describes unknown properties. The value of an unknown property
   * can be of "any" type.
   */
  [property: string]: any;
}

/**
 * @class
 * Initializes a new instance of the ParquetFormat class.
 * @constructor
 * The data stored in Parquet format.
 *
 */
export interface ParquetFormat extends DatasetStorageFormat {
}

/**
 * @class
 * Initializes a new instance of the OrcFormat class.
 * @constructor
 * The data stored in Optimized Row Columnar (ORC) format.
 *
 */
export interface OrcFormat extends DatasetStorageFormat {
}

/**
 * @class
 * Initializes a new instance of the AvroFormat class.
 * @constructor
 * The data stored in Avro format.
 *
 */
export interface AvroFormat extends DatasetStorageFormat {
}

/**
 * @class
 * Initializes a new instance of the JsonFormat class.
 * @constructor
 * The data stored in JSON format.
 *
 * @property {string} [filePattern] File pattern of JSON. To be more specific,
 * the way of separating a collection of JSON objects. The default value is
 * 'setOfObjects'. It is case-sensitive. Possible values include:
 * 'setOfObjects', 'arrayOfObjects'
 * @property {object} [nestingSeparator] The character used to separate nesting
 * levels. Default value is '.' (dot). Type: string (or Expression with
 * resultType string).
 * @property {object} [encodingName] The code page name of the preferred
 * encoding. If not provided, the default value is 'utf-8', unless the byte
 * order mark (BOM) denotes another Unicode encoding. The full list of
 * supported values can be found in the 'Name' column of the table of encodings
 * in the following reference: https://go.microsoft.com/fwlink/?linkid=861078.
 * Type: string (or Expression with resultType string).
 * @property {object} [jsonNodeReference] The JSONPath of the JSON array
 * element to be flattened. Example: "$.ArrayPath". Type: string (or Expression
 * with resultType string).
 * @property {object} [jsonPathDefinition] The JSONPath definition for each
 * column mapping with a customized column name to extract data from JSON file.
 * For fields under root object, start with "$"; for fields inside the array
 * chosen by jsonNodeReference property, start from the array element. Example:
 * {"Column1": "$.Column1Path", "Column2": "Column2PathInArray"}. Type: object
 * (or Expression with resultType object).
 */
export interface JsonFormat extends DatasetStorageFormat {
  filePattern?: string;
  nestingSeparator?: any;
  encodingName?: any;
  jsonNodeReference?: any;
  jsonPathDefinition?: any;
}

/**
 * @class
 * Initializes a new instance of the TextFormat class.
 * @constructor
 * The data stored in text format.
 *
 * @property {object} [columnDelimiter] The column delimiter. Type: string (or
 * Expression with resultType string).
 * @property {object} [rowDelimiter] The row delimiter. Type: string (or
 * Expression with resultType string).
 * @property {object} [escapeChar] The escape character. Type: string (or
 * Expression with resultType string).
 * @property {object} [quoteChar] The quote character. Type: string (or
 * Expression with resultType string).
 * @property {object} [nullValue] The null value string. Type: string (or
 * Expression with resultType string).
 * @property {object} [encodingName] The code page name of the preferred
 * encoding. If miss, the default value is ΓÇ£utf-8ΓÇ¥, unless BOM denotes
 * another Unicode encoding. Refer to the ΓÇ£NameΓÇ¥ column of the table in the
 * following link to set supported values:
 * https://msdn.microsoft.com/library/system.text.encoding.aspx. Type: string
 * (or Expression with resultType string).
 * @property {object} [treatEmptyAsNull] Treat empty column values in the text
 * file as null. The default value is true. Type: boolean (or Expression with
 * resultType boolean).
 * @property {object} [skipLineCount] The number of lines/rows to be skipped
 * when parsing text files. The default value is 0. Type: integer (or
 * Expression with resultType integer).
 * @property {object} [firstRowAsHeader] When used as input, treat the first
 * row of data as headers. When used as output,write the headers into the
 * output as the first row of data. The default value is false. Type: boolean
 * (or Expression with resultType boolean).
 */
export interface TextFormat extends DatasetStorageFormat {
  columnDelimiter?: any;
  rowDelimiter?: any;
  escapeChar?: any;
  quoteChar?: any;
  nullValue?: any;
  encodingName?: any;
  treatEmptyAsNull?: any;
  skipLineCount?: any;
  firstRowAsHeader?: any;
}

/**
 * @class
 * Initializes a new instance of the HttpDataset class.
 * @constructor
 * A file in an HTTP web server.
 *
 * @property {object} [relativeUrl] The relative URL based on the URL in the
 * HttpLinkedService refers to an HTTP file Type: string (or Expression with
 * resultType string).
 * @property {object} [requestMethod] The HTTP method for the HTTP request.
 * Type: string (or Expression with resultType string).
 * @property {object} [requestBody] The body for the HTTP request. Type: string
 * (or Expression with resultType string).
 * @property {object} [additionalHeaders] The headers for the HTTP Request.
 * e.g. request-header-name-1:request-header-value-1
 * ...
 * request-header-name-n:request-header-value-n Type: string (or Expression
 * with resultType string).
 * @property {object} [format] The format of files.
 * @property {object} [format.serializer] Serializer. Type: string (or
 * Expression with resultType string).
 * @property {object} [format.deserializer] Deserializer. Type: string (or
 * Expression with resultType string).
 * @property {string} [format.type] Polymorphic Discriminator
 * @property {object} [compression] The data compression method used on files.
 * @property {string} [compression.type] Polymorphic Discriminator
 */
export interface HttpDataset extends Dataset {
  relativeUrl?: any;
  requestMethod?: any;
  requestBody?: any;
  additionalHeaders?: any;
  format?: DatasetStorageFormat;
  compression?: DatasetCompression;
}

/**
 * @class
 * Initializes a new instance of the AzureSearchIndexDataset class.
 * @constructor
 * The Azure Search Index.
 *
 * @property {object} indexName The name of the Azure Search Index. Type:
 * string (or Expression with resultType string).
 */
export interface AzureSearchIndexDataset extends Dataset {
  indexName: any;
}

/**
 * @class
 * Initializes a new instance of the WebTableDataset class.
 * @constructor
 * The dataset points to a HTML table in the web page.
 *
 * @property {object} index The zero-based index of the table in the web page.
 * Type: integer (or Expression with resultType integer), minimum: 0.
 * @property {object} [path] The relative URL to the web page from the linked
 * service URL. Type: string (or Expression with resultType string).
 */
export interface WebTableDataset extends Dataset {
  index: any;
  path?: any;
}

/**
 * @class
 * Initializes a new instance of the SqlServerTableDataset class.
 * @constructor
 * The on-premises SQL Server dataset.
 *
 * @property {object} tableName The table name of the SQL Server dataset. Type:
 * string (or Expression with resultType string).
 */
export interface SqlServerTableDataset extends Dataset {
  tableName: any;
}

/**
 * @class
 * Initializes a new instance of the SapEccResourceDataset class.
 * @constructor
 * The path of the SAP ECC OData entity.
 *
 * @property {string} path The path of the SAP ECC OData entity. Type: string
 * (or Expression with resultType string).
 */
export interface SapEccResourceDataset extends Dataset {
  path: string;
}

/**
 * @class
 * Initializes a new instance of the SapCloudForCustomerResourceDataset class.
 * @constructor
 * The path of the SAP Cloud for Customer OData entity.
 *
 * @property {object} path The path of the SAP Cloud for Customer OData entity.
 * Type: string (or Expression with resultType string).
 */
export interface SapCloudForCustomerResourceDataset extends Dataset {
  path: any;
}

/**
 * @class
 * Initializes a new instance of the SalesforceObjectDataset class.
 * @constructor
 * The Salesforce object dataset.
 *
 * @property {object} [objectApiName] The Salesforce object API name. Type:
 * string (or Expression with resultType string).
 */
export interface SalesforceObjectDataset extends Dataset {
  objectApiName?: any;
}

/**
 * @class
 * Initializes a new instance of the RelationalTableDataset class.
 * @constructor
 * The relational table dataset.
 *
 * @property {object} [tableName] The relational table name. Type: string (or
 * Expression with resultType string).
 */
export interface RelationalTableDataset extends Dataset {
  tableName?: any;
}

/**
 * @class
 * Initializes a new instance of the AzureMySqlTableDataset class.
 * @constructor
 * The Azure MySQL database dataset.
 *
 * @property {object} [tableName] The Azure MySQL database table name. Type:
 * string (or Expression with resultType string).
 */
export interface AzureMySqlTableDataset extends Dataset {
  tableName?: any;
}

/**
 * @class
 * Initializes a new instance of the OracleTableDataset class.
 * @constructor
 * The on-premises Oracle database dataset.
 *
 * @property {object} tableName The table name of the on-premises Oracle
 * database. Type: string (or Expression with resultType string).
 */
export interface OracleTableDataset extends Dataset {
  tableName: any;
}

/**
 * @class
 * Initializes a new instance of the ODataResourceDataset class.
 * @constructor
 * The Open Data Protocol (OData) resource dataset.
 *
 * @property {object} [path] The OData resource path. Type: string (or
 * Expression with resultType string).
 */
export interface ODataResourceDataset extends Dataset {
  path?: any;
}

/**
 * @class
 * Initializes a new instance of the MongoDbCollectionDataset class.
 * @constructor
 * The MongoDB database dataset.
 *
 * @property {object} collectionName The table name of the MongoDB database.
 * Type: string (or Expression with resultType string).
 */
export interface MongoDbCollectionDataset extends Dataset {
  collectionName: any;
}

/**
 * @class
 * Initializes a new instance of the FileShareDataset class.
 * @constructor
 * An on-premises file system dataset.
 *
 * @property {object} [folderPath] The path of the on-premises file system.
 * Type: string (or Expression with resultType string).
 * @property {object} [fileName] The name of the on-premises file system. Type:
 * string (or Expression with resultType string).
 * @property {object} [format] The format of the files.
 * @property {object} [format.serializer] Serializer. Type: string (or
 * Expression with resultType string).
 * @property {object} [format.deserializer] Deserializer. Type: string (or
 * Expression with resultType string).
 * @property {string} [format.type] Polymorphic Discriminator
 * @property {object} [fileFilter] Specify a filter to be used to select a
 * subset of files in the folderPath rather than all files. Type: string (or
 * Expression with resultType string).
 * @property {object} [compression] The data compression method used for the
 * file system.
 * @property {string} [compression.type] Polymorphic Discriminator
 */
export interface FileShareDataset extends Dataset {
  folderPath?: any;
  fileName?: any;
  format?: DatasetStorageFormat;
  fileFilter?: any;
  compression?: DatasetCompression;
}

/**
 * @class
 * Initializes a new instance of the AzureDataLakeStoreDataset class.
 * @constructor
 * Azure Data Lake Store dataset.
 *
 * @property {object} folderPath Path to the folder in the Azure Data Lake
 * Store. Type: string (or Expression with resultType string).
 * @property {object} [fileName] The name of the file in the Azure Data Lake
 * Store. Type: string (or Expression with resultType string).
 * @property {object} [format] The format of the Data Lake Store.
 * @property {object} [format.serializer] Serializer. Type: string (or
 * Expression with resultType string).
 * @property {object} [format.deserializer] Deserializer. Type: string (or
 * Expression with resultType string).
 * @property {string} [format.type] Polymorphic Discriminator
 * @property {object} [compression] The data compression method used for the
 * item(s) in the Azure Data Lake Store.
 * @property {string} [compression.type] Polymorphic Discriminator
 */
export interface AzureDataLakeStoreDataset extends Dataset {
  folderPath: any;
  fileName?: any;
  format?: DatasetStorageFormat;
  compression?: DatasetCompression;
}

/**
 * @class
 * Initializes a new instance of the DynamicsEntityDataset class.
 * @constructor
 * The Dynamics entity dataset.
 *
 * @property {object} [entityName] The logical name of the entity. Type: string
 * (or Expression with resultType string).
 */
export interface DynamicsEntityDataset extends Dataset {
  entityName?: any;
}

/**
 * @class
 * Initializes a new instance of the DocumentDbCollectionDataset class.
 * @constructor
 * Microsoft Azure Document Database Collection dataset.
 *
 * @property {object} collectionName Document Database collection name. Type:
 * string (or Expression with resultType string).
 */
export interface DocumentDbCollectionDataset extends Dataset {
  collectionName: any;
}

/**
 * @class
 * Initializes a new instance of the CustomDataset class.
 * @constructor
 * The custom dataset.
 *
 * @property {object} typeProperties Custom dataset properties.
 */
export interface CustomDataset extends Dataset {
  typeProperties: any;
}

/**
 * @class
 * Initializes a new instance of the CassandraTableDataset class.
 * @constructor
 * The Cassandra database dataset.
 *
 * @property {object} [tableName] The table name of the Cassandra database.
 * Type: string (or Expression with resultType string).
 * @property {object} [keyspace] The keyspace of the Cassandra database. Type:
 * string (or Expression with resultType string).
 */
export interface CassandraTableDataset extends Dataset {
  tableName?: any;
  keyspace?: any;
}

/**
 * @class
 * Initializes a new instance of the AzureSqlDWTableDataset class.
 * @constructor
 * The Azure SQL Data Warehouse dataset.
 *
 * @property {object} tableName The table name of the Azure SQL Data Warehouse.
 * Type: string (or Expression with resultType string).
 */
export interface AzureSqlDWTableDataset extends Dataset {
  tableName: any;
}

/**
 * @class
 * Initializes a new instance of the AzureSqlTableDataset class.
 * @constructor
 * The Azure SQL Server database dataset.
 *
 * @property {object} tableName The table name of the Azure SQL database. Type:
 * string (or Expression with resultType string).
 */
export interface AzureSqlTableDataset extends Dataset {
  tableName: any;
}

/**
 * @class
 * Initializes a new instance of the AzureTableDataset class.
 * @constructor
 * The Azure Table storage dataset.
 *
 * @property {object} tableName The table name of the Azure Table storage.
 * Type: string (or Expression with resultType string).
 */
export interface AzureTableDataset extends Dataset {
  tableName: any;
}

/**
 * @class
 * Initializes a new instance of the AzureBlobDataset class.
 * @constructor
 * The Azure Blob storage.
 *
 * @property {object} [folderPath] The path of the Azure Blob storage. Type:
 * string (or Expression with resultType string).
 * @property {object} [tableRootLocation] The root of blob path. Type: string
 * (or Expression with resultType string).
 * @property {object} [fileName] The name of the Azure Blob. Type: string (or
 * Expression with resultType string).
 * @property {object} [format] The format of the Azure Blob storage.
 * @property {object} [format.serializer] Serializer. Type: string (or
 * Expression with resultType string).
 * @property {object} [format.deserializer] Deserializer. Type: string (or
 * Expression with resultType string).
 * @property {string} [format.type] Polymorphic Discriminator
 * @property {object} [compression] The data compression method used for the
 * blob storage.
 * @property {string} [compression.type] Polymorphic Discriminator
 */
export interface AzureBlobDataset extends Dataset {
  folderPath?: any;
  tableRootLocation?: any;
  fileName?: any;
  format?: DatasetStorageFormat;
  compression?: DatasetCompression;
}

/**
 * @class
 * Initializes a new instance of the AmazonS3Dataset class.
 * @constructor
 * A single Amazon Simple Storage Service (S3) object or a set of S3 objects.
 *
 * @property {object} bucketName The name of the Amazon S3 bucket. Type: string
 * (or Expression with resultType string).
 * @property {object} [key] The key of the Amazon S3 object. Type: string (or
 * Expression with resultType string).
 * @property {object} [prefix] The prefix filter for the S3 object name. Type:
 * string (or Expression with resultType string).
 * @property {object} [version] The version for the S3 object. Type: string (or
 * Expression with resultType string).
 * @property {object} [format] The format of files.
 * @property {object} [format.serializer] Serializer. Type: string (or
 * Expression with resultType string).
 * @property {object} [format.deserializer] Deserializer. Type: string (or
 * Expression with resultType string).
 * @property {string} [format.type] Polymorphic Discriminator
 * @property {object} [compression] The data compression method used for the
 * Amazon S3 object.
 * @property {string} [compression.type] Polymorphic Discriminator
 */
export interface AmazonS3Dataset extends Dataset {
  bucketName: any;
  key?: any;
  prefix?: any;
  version?: any;
  format?: DatasetStorageFormat;
  compression?: DatasetCompression;
}

/**
 * @class
 * Initializes a new instance of the ActivityPolicy class.
 * @constructor
 * Execution policy for an activity.
 *
 * @property {object} [timeout] Specifies the timeout for the activity to run.
 * The default timeout is 7 days. Type: string (or Expression with resultType
 * string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
 * @property {object} [retry] Maximum ordinary retry attempts. Default is 0.
 * Type: integer (or Expression with resultType integer), minimum: 0.
 * @property {number} [retryIntervalInSeconds] Interval between each retry
 * attempt (in seconds). The default is 30 sec.
 * @property {boolean} [secureInput] When set to true, Input from activity is
 * considered as secure and will not be logged to monitoring.
 * @property {boolean} [secureOutput] When set to true, Output from activity is
 * considered as secure and will not be logged to monitoring.
 */
export interface ActivityPolicy {
  timeout?: any;
  retry?: any;
  retryIntervalInSeconds?: number;
  secureInput?: boolean;
  secureOutput?: boolean;
  /**
   * @property Describes unknown properties. The value of an unknown property
   * can be of "any" type.
   */
  [property: string]: any;
}

/**
 * @class
 * Initializes a new instance of the ExecutionActivity class.
 * @constructor
 * Base class for all execution activities.
 *
 * @property {object} [linkedServiceName] Linked service reference.
 * @property {string} [linkedServiceName.referenceName] Reference LinkedService
 * name.
 * @property {object} [linkedServiceName.parameters] Arguments for
 * LinkedService.
 * @property {object} [policy] Activity policy.
 * @property {object} [policy.timeout] Specifies the timeout for the activity
 * to run. The default timeout is 7 days. Type: string (or Expression with
 * resultType string), pattern:
 * ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
 * @property {object} [policy.retry] Maximum ordinary retry attempts. Default
 * is 0. Type: integer (or Expression with resultType integer), minimum: 0.
 * @property {number} [policy.retryIntervalInSeconds] Interval between each
 * retry attempt (in seconds). The default is 30 sec.
 * @property {boolean} [policy.secureInput] When set to true, Input from
 * activity is considered as secure and will not be logged to monitoring.
 * @property {boolean} [policy.secureOutput] When set to true, Output from
 * activity is considered as secure and will not be logged to monitoring.
 */
export interface ExecutionActivity extends Activity {
  linkedServiceName?: LinkedServiceReference;
  policy?: ActivityPolicy;
}

/**
 * @class
 * Initializes a new instance of the DatabricksSparkPythonActivity class.
 * @constructor
 * DatabricksSparkPython activity.
 *
 * @property {object} pythonFile The URI of the Python file to be executed.
 * DBFS paths are supported. Type: string (or Expression with resultType
 * string).
 * @property {array} [parameters] Command line parameters that will be passed
 * to the Python file.
 * @property {array} [libraries] A list of libraries to be installed on the
 * cluster that will execute the job.
 */
export interface DatabricksSparkPythonActivity extends ExecutionActivity {
  pythonFile: any;
  parameters?: any[];
  libraries?: { [propertyName: string]: any }[];
}

/**
 * @class
 * Initializes a new instance of the DatabricksSparkJarActivity class.
 * @constructor
 * DatabricksSparkJar activity.
 *
 * @property {object} mainClassName The full name of the class containing the
 * main method to be executed. This class must be contained in a JAR provided
 * as a library. Type: string (or Expression with resultType string).
 * @property {array} [parameters] Parameters that will be passed to the main
 * method.
 * @property {array} [libraries] A list of libraries to be installed on the
 * cluster that will execute the job.
 */
export interface DatabricksSparkJarActivity extends ExecutionActivity {
  mainClassName: any;
  parameters?: any[];
  libraries?: { [propertyName: string]: any }[];
}

/**
 * @class
 * Initializes a new instance of the DatabricksNotebookActivity class.
 * @constructor
 * DatabricksNotebook activity.
 *
 * @property {object} notebookPath The absolute path of the notebook to be run
 * in the Databricks Workspace. This path must begin with a slash. Type: string
 * (or Expression with resultType string).
 * @property {object} [baseParameters] Base parameters to be used for each run
 * of this job.If the notebook takes a parameter that is not specified, the
 * default value from the notebook will be used.
 * @property {array} [libraries] A list of libraries to be installed on the
 * cluster that will execute the job.
 */
export interface DatabricksNotebookActivity extends ExecutionActivity {
  notebookPath: any;
  baseParameters?: { [propertyName: string]: any };
  libraries?: { [propertyName: string]: any }[];
}

/**
 * @class
 * Initializes a new instance of the DataLakeAnalyticsUSQLActivity class.
 * @constructor
 * Data Lake Analytics U-SQL activity.
 *
 * @property {object} scriptPath Case-sensitive path to folder that contains
 * the U-SQL script. Type: string (or Expression with resultType string).
 * @property {object} scriptLinkedService Script linked service reference.
 * @property {string} [scriptLinkedService.referenceName] Reference
 * LinkedService name.
 * @property {object} [scriptLinkedService.parameters] Arguments for
 * LinkedService.
 * @property {object} [degreeOfParallelism] The maximum number of nodes
 * simultaneously used to run the job. Default value is 1. Type: integer (or
 * Expression with resultType integer), minimum: 1.
 * @property {object} [priority] Determines which jobs out of all that are
 * queued should be selected to run first. The lower the number, the higher the
 * priority. Default value is 1000. Type: integer (or Expression with
 * resultType integer), minimum: 1.
 * @property {object} [parameters] Parameters for U-SQL job request.
 * @property {object} [runtimeVersion] Runtime version of the U-SQL engine to
 * use. Type: string (or Expression with resultType string).
 * @property {object} [compilationMode] Compilation mode of U-SQL. Must be one
 * of these values : Semantic, Full and SingleBox. Type: string (or Expression
 * with resultType string).
 */
export interface DataLakeAnalyticsUSQLActivity extends ExecutionActivity {
  scriptPath: any;
  scriptLinkedService: LinkedServiceReference;
  degreeOfParallelism?: any;
  priority?: any;
  parameters?: { [propertyName: string]: any };
  runtimeVersion?: any;
  compilationMode?: any;
}

/**
 * @class
 * Initializes a new instance of the AzureMLUpdateResourceActivity class.
 * @constructor
 * Azure ML Update Resource management activity.
 *
 * @property {object} trainedModelName Name of the Trained Model module in the
 * Web Service experiment to be updated. Type: string (or Expression with
 * resultType string).
 * @property {object} trainedModelLinkedServiceName Name of Azure Storage
 * linked service holding the .ilearner file that will be uploaded by the
 * update operation.
 * @property {string} [trainedModelLinkedServiceName.referenceName] Reference
 * LinkedService name.
 * @property {object} [trainedModelLinkedServiceName.parameters] Arguments for
 * LinkedService.
 * @property {object} trainedModelFilePath The relative file path in
 * trainedModelLinkedService to represent the .ilearner file that will be
 * uploaded by the update operation.  Type: string (or Expression with
 * resultType string).
 */
export interface AzureMLUpdateResourceActivity extends ExecutionActivity {
  trainedModelName: any;
  trainedModelLinkedServiceName: LinkedServiceReference;
  trainedModelFilePath: any;
}

/**
 * @class
 * Initializes a new instance of the AzureMLWebServiceFile class.
 * @constructor
 * Azure ML WebService Input/Output file
 *
 * @property {object} filePath The relative file path, including container
 * name, in the Azure Blob Storage specified by the LinkedService. Type: string
 * (or Expression with resultType string).
 * @property {object} linkedServiceName Reference to an Azure Storage
 * LinkedService, where Azure ML WebService Input/Output file located.
 * @property {string} [linkedServiceName.referenceName] Reference LinkedService
 * name.
 * @property {object} [linkedServiceName.parameters] Arguments for
 * LinkedService.
 */
export interface AzureMLWebServiceFile {
  filePath: any;
  linkedServiceName: LinkedServiceReference;
}

/**
 * @class
 * Initializes a new instance of the AzureMLBatchExecutionActivity class.
 * @constructor
 * Azure ML Batch Execution activity.
 *
 * @property {object} [globalParameters] Key,Value pairs to be passed to the
 * Azure ML Batch Execution Service endpoint. Keys must match the names of web
 * service parameters defined in the published Azure ML web service. Values
 * will be passed in the GlobalParameters property of the Azure ML batch
 * execution request.
 * @property {object} [webServiceOutputs] Key,Value pairs, mapping the names of
 * Azure ML endpoint's Web Service Outputs to AzureMLWebServiceFile objects
 * specifying the output Blob locations. This information will be passed in the
 * WebServiceOutputs property of the Azure ML batch execution request.
 * @property {object} [webServiceInputs] Key,Value pairs, mapping the names of
 * Azure ML endpoint's Web Service Inputs to AzureMLWebServiceFile objects
 * specifying the input Blob locations.. This information will be passed in the
 * WebServiceInputs property of the Azure ML batch execution request.
 */
export interface AzureMLBatchExecutionActivity extends ExecutionActivity {
  globalParameters?: { [propertyName: string]: any };
  webServiceOutputs?: { [propertyName: string]: AzureMLWebServiceFile };
  webServiceInputs?: { [propertyName: string]: AzureMLWebServiceFile };
}

/**
 * @class
 * Initializes a new instance of the GetMetadataActivity class.
 * @constructor
 * Activity to get metadata of dataset
 *
 * @property {object} dataset GetMetadata activity dataset reference.
 * @property {string} [dataset.referenceName] Reference dataset name.
 * @property {object} [dataset.parameters] Arguments for dataset.
 * @property {array} [fieldList] Fields of metadata to get from dataset.
 */
export interface GetMetadataActivity extends ExecutionActivity {
  dataset: DatasetReference;
  fieldList?: any[];
}

/**
 * @class
 * Initializes a new instance of the WebActivityAuthentication class.
 * @constructor
 * Web activity authentication properties.
 *
 * @property {string} type Web activity authentication
 * (Basic/ClientCertificate/MSI)
 * @property {object} [pfx] Base64-encoded contents of a PFX file.
 * @property {string} [pfx.value] Value of secure string.
 * @property {string} [username] Web activity authentication user name for
 * basic authentication.
 * @property {object} [password] Password for the PFX file or basic
 * authentication.
 * @property {string} [password.value] Value of secure string.
 * @property {string} [resource] Resource for which Azure Auth token will be
 * requested when using MSI Authentication.
 */
export interface WebActivityAuthentication {
  type: string;
  pfx?: SecureString;
  username?: string;
  password?: SecureString;
  resource?: string;
}

/**
 * @class
 * Initializes a new instance of the WebActivity class.
 * @constructor
 * Web activity.
 *
 * @property {string} method Rest API method for target endpoint. Possible
 * values include: 'GET', 'POST', 'PUT', 'DELETE'
 * @property {object} url Web activity target endpoint and path. Type: string
 * (or Expression with resultType string).
 * @property {object} [headers] Represents the headers that will be sent to the
 * request. For example, to set the language and type on a request: "headers" :
 * { "Accept-Language": "en-us", "Content-Type": "application/json" }. Type:
 * string (or Expression with resultType string).
 * @property {object} [body] Represents the payload that will be sent to the
 * endpoint. Required for POST/PUT method, not allowed for GET method Type:
 * string (or Expression with resultType string).
 * @property {object} [authentication] Authentication method used for calling
 * the endpoint.
 * @property {string} [authentication.type] Web activity authentication
 * (Basic/ClientCertificate/MSI)
 * @property {object} [authentication.pfx] Base64-encoded contents of a PFX
 * file.
 * @property {string} [authentication.pfx.value] Value of secure string.
 * @property {string} [authentication.username] Web activity authentication
 * user name for basic authentication.
 * @property {object} [authentication.password] Password for the PFX file or
 * basic authentication.
 * @property {string} [authentication.password.value] Value of secure string.
 * @property {string} [authentication.resource] Resource for which Azure Auth
 * token will be requested when using MSI Authentication.
 * @property {array} [datasets] List of datasets passed to web endpoint.
 * @property {array} [linkedServices] List of linked services passed to web
 * endpoint.
 */
export interface WebActivity extends ExecutionActivity {
  method: string;
  url: any;
  headers?: any;
  body?: any;
  authentication?: WebActivityAuthentication;
  datasets?: DatasetReference[];
  linkedServices?: LinkedServiceReference[];
}

/**
 * @class
 * Initializes a new instance of the RedshiftUnloadSettings class.
 * @constructor
 * The Amazon S3 settings needed for the interim Amazon S3 when copying from
 * Amazon Redshift with unload. With this, data from Amazon Redshift source
 * will be unloaded into S3 first and then copied into the targeted sink from
 * the interim S3.
 *
 * @property {object} s3LinkedServiceName The name of the Amazon S3 linked
 * service which will be used for the unload operation when copying from the
 * Amazon Redshift source.
 * @property {string} [s3LinkedServiceName.referenceName] Reference
 * LinkedService name.
 * @property {object} [s3LinkedServiceName.parameters] Arguments for
 * LinkedService.
 * @property {object} bucketName The bucket of the interim Amazon S3 which will
 * be used to store the unloaded data from Amazon Redshift source. The bucket
 * must be in the same region as the Amazon Redshift source. Type: string (or
 * Expression with resultType string).
 */
export interface RedshiftUnloadSettings {
  s3LinkedServiceName: LinkedServiceReference;
  bucketName: any;
}

/**
 * @class
 * Initializes a new instance of the CopySource class.
 * @constructor
 * A copy activity source.
 *
 * @property {object} [sourceRetryCount] Source retry count. Type: integer (or
 * Expression with resultType integer).
 * @property {object} [sourceRetryWait] Source retry wait. Type: string (or
 * Expression with resultType string), pattern:
 * ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
 * @property {string} type Polymorphic Discriminator
 */
export interface CopySource {
  sourceRetryCount?: any;
  sourceRetryWait?: any;
  type: string;
  /**
   * @property Describes unknown properties. The value of an unknown property
   * can be of "any" type.
   */
  [property: string]: any;
}

/**
 * @class
 * Initializes a new instance of the AmazonRedshiftSource class.
 * @constructor
 * A copy activity source for Amazon Redshift Source.
 *
 * @property {object} [query] Database query. Type: string (or Expression with
 * resultType string).
 * @property {object} [redshiftUnloadSettings] The Amazon S3 settings needed
 * for the interim Amazon S3 when copying from Amazon Redshift with unload.
 * With this, data from Amazon Redshift source will be unloaded into S3 first
 * and then copied into the targeted sink from the interim S3.
 * @property {object} [redshiftUnloadSettings.s3LinkedServiceName] The name of
 * the Amazon S3 linked service which will be used for the unload operation
 * when copying from the Amazon Redshift source.
 * @property {string}
 * [redshiftUnloadSettings.s3LinkedServiceName.referenceName] Reference
 * LinkedService name.
 * @property {object} [redshiftUnloadSettings.s3LinkedServiceName.parameters]
 * Arguments for LinkedService.
 * @property {object} [redshiftUnloadSettings.bucketName] The bucket of the
 * interim Amazon S3 which will be used to store the unloaded data from Amazon
 * Redshift source. The bucket must be in the same region as the Amazon
 * Redshift source. Type: string (or Expression with resultType string).
 */
export interface AmazonRedshiftSource extends CopySource {
  query?: any;
  redshiftUnloadSettings?: RedshiftUnloadSettings;
}

/**
 * @class
 * Initializes a new instance of the ResponsysSource class.
 * @constructor
 * A copy activity Responsys source.
 *
 * @property {object} [query] A query to retrieve data from source. Type:
 * string (or Expression with resultType string).
 */
export interface ResponsysSource extends CopySource {
  query?: any;
}

/**
 * @class
 * Initializes a new instance of the SalesforceMarketingCloudSource class.
 * @constructor
 * A copy activity Salesforce Marketing Cloud source.
 *
 * @property {object} [query] A query to retrieve data from source. Type:
 * string (or Expression with resultType string).
 */
export interface SalesforceMarketingCloudSource extends CopySource {
  query?: any;
}

/**
 * @class
 * Initializes a new instance of the VerticaSource class.
 * @constructor
 * A copy activity Vertica source.
 *
 * @property {object} [query] A query to retrieve data from source. Type:
 * string (or Expression with resultType string).
 */
export interface VerticaSource extends CopySource {
  query?: any;
}

/**
 * @class
 * Initializes a new instance of the NetezzaSource class.
 * @constructor
 * A copy activity Netezza source.
 *
 * @property {object} [query] A query to retrieve data from source. Type:
 * string (or Expression with resultType string).
 */
export interface NetezzaSource extends CopySource {
  query?: any;
}

/**
 * @class
 * Initializes a new instance of the ZohoSource class.
 * @constructor
 * A copy activity Zoho server source.
 *
 * @property {object} [query] A query to retrieve data from source. Type:
 * string (or Expression with resultType string).
 */
export interface ZohoSource extends CopySource {
  query?: any;
}

/**
 * @class
 * Initializes a new instance of the XeroSource class.
 * @constructor
 * A copy activity Xero Serivce source.
 *
 * @property {object} [query] A query to retrieve data from source. Type:
 * string (or Expression with resultType string).
 */
export interface XeroSource extends CopySource {
  query?: any;
}

/**
 * @class
 * Initializes a new instance of the SquareSource class.
 * @constructor
 * A copy activity Square Serivce source.
 *
 * @property {object} [query] A query to retrieve data from source. Type:
 * string (or Expression with resultType string).
 */
export interface SquareSource extends CopySource {
  query?: any;
}

/**
 * @class
 * Initializes a new instance of the SparkSource class.
 * @constructor
 * A copy activity Spark Server source.
 *
 * @property {object} [query] A query to retrieve data from source. Type:
 * string (or Expression with resultType string).
 */
export interface SparkSource extends CopySource {
  query?: any;
}

/**
 * @class
 * Initializes a new instance of the ShopifySource class.
 * @constructor
 * A copy activity Shopify Serivce source.
 *
 * @property {object} [query] A query to retrieve data from source. Type:
 * string (or Expression with resultType string).
 */
export interface ShopifySource extends CopySource {
  query?: any;
}

/**
 * @class
 * Initializes a new instance of the ServiceNowSource class.
 * @constructor
 * A copy activity ServiceNow server source.
 *
 * @property {object} [query] A query to retrieve data from source. Type:
 * string (or Expression with resultType string).
 */
export interface ServiceNowSource extends CopySource {
  query?: any;
}

/**
 * @class
 * Initializes a new instance of the QuickBooksSource class.
 * @constructor
 * A copy activity QuickBooks server source.
 *
 * @property {object} [query] A query to retrieve data from source. Type:
 * string (or Expression with resultType string).
 */
export interface QuickBooksSource extends CopySource {
  query?: any;
}

/**
 * @class
 * Initializes a new instance of the PrestoSource class.
 * @constructor
 * A copy activity Presto server source.
 *
 * @property {object} [query] A query to retrieve data from source. Type:
 * string (or Expression with resultType string).
 */
export interface PrestoSource extends CopySource {
  query?: any;
}

/**
 * @class
 * Initializes a new instance of the PhoenixSource class.
 * @constructor
 * A copy activity Phoenix server source.
 *
 * @property {object} [query] A query to retrieve data from source. Type:
 * string (or Expression with resultType string).
 */
export interface PhoenixSource extends CopySource {
  query?: any;
}

/**
 * @class
 * Initializes a new instance of the PaypalSource class.
 * @constructor
 * A copy activity Paypal Serivce source.
 *
 * @property {object} [query] A query to retrieve data from source. Type:
 * string (or Expression with resultType string).
 */
export interface PaypalSource extends CopySource {
  query?: any;
}

/**
 * @class
 * Initializes a new instance of the MarketoSource class.
 * @constructor
 * A copy activity Marketo server source.
 *
 * @property {object} [query] A query to retrieve data from source. Type:
 * string (or Expression with resultType string).
 */
export interface MarketoSource extends CopySource {
  query?: any;
}

/**
 * @class
 * Initializes a new instance of the MariaDBSource class.
 * @constructor
 * A copy activity MariaDB server source.
 *
 * @property {object} [query] A query to retrieve data from source. Type:
 * string (or Expression with resultType string).
 */
export interface MariaDBSource extends CopySource {
  query?: any;
}

/**
 * @class
 * Initializes a new instance of the MagentoSource class.
 * @constructor
 * A copy activity Magento server source.
 *
 * @property {object} [query] A query to retrieve data from source. Type:
 * string (or Expression with resultType string).
 */
export interface MagentoSource extends CopySource {
  query?: any;
}

/**
 * @class
 * Initializes a new instance of the JiraSource class.
 * @constructor
 * A copy activity Jira Serivce source.
 *
 * @property {object} [query] A query to retrieve data from source. Type:
 * string (or Expression with resultType string).
 */
export interface JiraSource extends CopySource {
  query?: any;
}

/**
 * @class
 * Initializes a new instance of the ImpalaSource class.
 * @constructor
 * A copy activity Impala server source.
 *
 * @property {object} [query] A query to retrieve data from source. Type:
 * string (or Expression with resultType string).
 */
export interface ImpalaSource extends CopySource {
  query?: any;
}

/**
 * @class
 * Initializes a new instance of the HubspotSource class.
 * @constructor
 * A copy activity Hubspot Serivce source.
 *
 * @property {object} [query] A query to retrieve data from source. Type:
 * string (or Expression with resultType string).
 */
export interface HubspotSource extends CopySource {
  query?: any;
}

/**
 * @class
 * Initializes a new instance of the HiveSource class.
 * @constructor
 * A copy activity Hive Server source.
 *
 * @property {object} [query] A query to retrieve data from source. Type:
 * string (or Expression with resultType string).
 */
export interface HiveSource extends CopySource {
  query?: any;
}

/**
 * @class
 * Initializes a new instance of the HBaseSource class.
 * @constructor
 * A copy activity HBase server source.
 *
 * @property {object} [query] A query to retrieve data from source. Type:
 * string (or Expression with resultType string).
 */
export interface HBaseSource extends CopySource {
  query?: any;
}

/**
 * @class
 * Initializes a new instance of the GreenplumSource class.
 * @constructor
 * A copy activity Greenplum Database source.
 *
 * @property {object} [query] A query to retrieve data from source. Type:
 * string (or Expression with resultType string).
 */
export interface GreenplumSource extends CopySource {
  query?: any;
}

/**
 * @class
 * Initializes a new instance of the GoogleBigQuerySource class.
 * @constructor
 * A copy activity Google BigQuery service source.
 *
 * @property {object} [query] A query to retrieve data from source. Type:
 * string (or Expression with resultType string).
 */
export interface GoogleBigQuerySource extends CopySource {
  query?: any;
}

/**
 * @class
 * Initializes a new instance of the EloquaSource class.
 * @constructor
 * A copy activity Eloqua server source.
 *
 * @property {object} [query] A query to retrieve data from source. Type:
 * string (or Expression with resultType string).
 */
export interface EloquaSource extends CopySource {
  query?: any;
}

/**
 * @class
 * Initializes a new instance of the DrillSource class.
 * @constructor
 * A copy activity Drill server source.
 *
 * @property {object} [query] A query to retrieve data from source. Type:
 * string (or Expression with resultType string).
 */
export interface DrillSource extends CopySource {
  query?: any;
}

/**
 * @class
 * Initializes a new instance of the CouchbaseSource class.
 * @constructor
 * A copy activity Couchbase server source.
 *
 * @property {object} [query] A query to retrieve data from source. Type:
 * string (or Expression with resultType string).
 */
export interface CouchbaseSource extends CopySource {
  query?: any;
}

/**
 * @class
 * Initializes a new instance of the ConcurSource class.
 * @constructor
 * A copy activity Concur Serivce source.
 *
 * @property {object} [query] A query to retrieve data from source. Type:
 * string (or Expression with resultType string).
 */
export interface ConcurSource extends CopySource {
  query?: any;
}

/**
 * @class
 * Initializes a new instance of the AzurePostgreSqlSource class.
 * @constructor
 * A copy activity Azure PostgreSQL source.
 *
 * @property {object} [query] A query to retrieve data from source. Type:
 * string (or Expression with resultType string).
 */
export interface AzurePostgreSqlSource extends CopySource {
  query?: any;
}

/**
 * @class
 * Initializes a new instance of the AmazonMWSSource class.
 * @constructor
 * A copy activity Amazon Marketplace Web Service source.
 *
 * @property {object} [query] A query to retrieve data from source. Type:
 * string (or Expression with resultType string).
 */
export interface AmazonMWSSource extends CopySource {
  query?: any;
}

/**
 * @class
 * Initializes a new instance of the HttpSource class.
 * @constructor
 * A copy activity source for an HTTP file.
 *
 * @property {object} [httpRequestTimeout] Specifies the timeout for a HTTP
 * client to get HTTP response from HTTP server. The default value is
 * equivalent to System.Net.HttpWebRequest.Timeout. Type: string (or Expression
 * with resultType string), pattern:
 * ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
 */
export interface HttpSource extends CopySource {
  httpRequestTimeout?: any;
}

/**
 * @class
 * Initializes a new instance of the AzureDataLakeStoreSource class.
 * @constructor
 * A copy activity Azure Data Lake source.
 *
 * @property {object} [recursive] If true, files under the folder path will be
 * read recursively. Default is true. Type: boolean (or Expression with
 * resultType boolean).
 */
export interface AzureDataLakeStoreSource extends CopySource {
  recursive?: any;
}

/**
 * @class
 * Initializes a new instance of the MongoDbSource class.
 * @constructor
 * A copy activity source for a MongoDB database.
 *
 * @property {object} [query] Database query. Should be a SQL-92 query
 * expression. Type: string (or Expression with resultType string).
 */
export interface MongoDbSource extends CopySource {
  query?: any;
}

/**
 * @class
 * Initializes a new instance of the CassandraSource class.
 * @constructor
 * A copy activity source for a Cassandra database.
 *
 * @property {object} [query] Database query. Should be a SQL-92 query
 * expression or Cassandra Query Language (CQL) command. Type: string (or
 * Expression with resultType string).
 * @property {string} [consistencyLevel] The consistency level specifies how
 * many Cassandra servers must respond to a read request before returning data
 * to the client application. Cassandra checks the specified number of
 * Cassandra servers for data to satisfy the read request. Must be one of
 * cassandraSourceReadConsistencyLevels. The default value is 'ONE'. It is
 * case-insensitive. Possible values include: 'ALL', 'EACH_QUORUM', 'QUORUM',
 * 'LOCAL_QUORUM', 'ONE', 'TWO', 'THREE', 'LOCAL_ONE', 'SERIAL', 'LOCAL_SERIAL'
 */
export interface CassandraSource extends CopySource {
  query?: any;
  consistencyLevel?: string;
}

/**
 * @class
 * Initializes a new instance of the WebSource class.
 * @constructor
 * A copy activity source for web page table.
 *
 */
export interface WebSource extends CopySource {
}

/**
 * @class
 * Initializes a new instance of the OracleSource class.
 * @constructor
 * A copy activity Oracle source.
 *
 * @property {object} [oracleReaderQuery] Oracle reader query. Type: string (or
 * Expression with resultType string).
 * @property {object} [queryTimeout] Query timeout. Type: string (or Expression
 * with resultType string), pattern:
 * ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
 */
export interface OracleSource extends CopySource {
  oracleReaderQuery?: any;
  queryTimeout?: any;
}

/**
 * @class
 * Initializes a new instance of the AzureMySqlSource class.
 * @constructor
 * A copy activity Azure MySQL source.
 *
 * @property {object} [query] Database query. Type: string (or Expression with
 * resultType string).
 */
export interface AzureMySqlSource extends CopySource {
  query?: any;
}

/**
 * @class
 * Initializes a new instance of the DistcpSettings class.
 * @constructor
 * Distcp settings.
 *
 * @property {object} resourceManagerEndpoint Specifies the Yarn
 * ResourceManager endpoint. Type: string (or Expression with resultType
 * string).
 * @property {object} tempScriptPath Specifies an existing folder path which
 * will be used to store temp Distcp command script. The script file is
 * generated by ADF and will be removed after Copy job finished. Type: string
 * (or Expression with resultType string).
 * @property {object} [distcpOptions] Specifies the Distcp options. Type:
 * string (or Expression with resultType string).
 */
export interface DistcpSettings {
  resourceManagerEndpoint: any;
  tempScriptPath: any;
  distcpOptions?: any;
}

/**
 * @class
 * Initializes a new instance of the HdfsSource class.
 * @constructor
 * A copy activity HDFS source.
 *
 * @property {object} [recursive] If true, files under the folder path will be
 * read recursively. Default is true. Type: boolean (or Expression with
 * resultType boolean).
 * @property {object} [distcpSettings] Specifies Distcp-related settings.
 * @property {object} [distcpSettings.resourceManagerEndpoint] Specifies the
 * Yarn ResourceManager endpoint. Type: string (or Expression with resultType
 * string).
 * @property {object} [distcpSettings.tempScriptPath] Specifies an existing
 * folder path which will be used to store temp Distcp command script. The
 * script file is generated by ADF and will be removed after Copy job finished.
 * Type: string (or Expression with resultType string).
 * @property {object} [distcpSettings.distcpOptions] Specifies the Distcp
 * options. Type: string (or Expression with resultType string).
 */
export interface HdfsSource extends CopySource {
  recursive?: any;
  distcpSettings?: DistcpSettings;
}

/**
 * @class
 * Initializes a new instance of the FileSystemSource class.
 * @constructor
 * A copy activity file system source.
 *
 * @property {object} [recursive] If true, files under the folder path will be
 * read recursively. Default is true. Type: boolean (or Expression with
 * resultType boolean).
 */
export interface FileSystemSource extends CopySource {
  recursive?: any;
}

/**
 * @class
 * Initializes a new instance of the SqlDWSource class.
 * @constructor
 * A copy activity SQL Data Warehouse source.
 *
 * @property {object} [sqlReaderQuery] SQL Data Warehouse reader query. Type:
 * string (or Expression with resultType string).
 * @property {object} [sqlReaderStoredProcedureName] Name of the stored
 * procedure for a SQL Data Warehouse source. This cannot be used at the same
 * time as SqlReaderQuery. Type: string (or Expression with resultType string).
 * @property {object} [storedProcedureParameters] Value and type setting for
 * stored procedure parameters. Example: "{Parameter1: {value: "1", type:
 * "int"}}". Type: object (or Expression with resultType object), itemType:
 * StoredProcedureParameter.
 */
export interface SqlDWSource extends CopySource {
  sqlReaderQuery?: any;
  sqlReaderStoredProcedureName?: any;
  storedProcedureParameters?: any;
}

/**
 * @class
 * Initializes a new instance of the StoredProcedureParameter class.
 * @constructor
 * SQL stored procedure parameter.
 *
 * @property {object} value Stored procedure parameter value. Type: string (or
 * Expression with resultType string).
 * @property {string} [type] Stored procedure parameter type. Possible values
 * include: 'String', 'Int', 'Decimal', 'Guid', 'Boolean', 'Date'
 */
export interface StoredProcedureParameter {
  value: any;
  type?: string;
}

/**
 * @class
 * Initializes a new instance of the SqlSource class.
 * @constructor
 * A copy activity SQL source.
 *
 * @property {object} [sqlReaderQuery] SQL reader query. Type: string (or
 * Expression with resultType string).
 * @property {object} [sqlReaderStoredProcedureName] Name of the stored
 * procedure for a SQL Database source. This cannot be used at the same time as
 * SqlReaderQuery. Type: string (or Expression with resultType string).
 * @property {object} [storedProcedureParameters] Value and type setting for
 * stored procedure parameters. Example: "{Parameter1: {value: "1", type:
 * "int"}}".
 */
export interface SqlSource extends CopySource {
  sqlReaderQuery?: any;
  sqlReaderStoredProcedureName?: any;
  storedProcedureParameters?: { [propertyName: string]: StoredProcedureParameter };
}

/**
 * @class
 * Initializes a new instance of the SapEccSource class.
 * @constructor
 * A copy activity source for SAP ECC source.
 *
 * @property {string} [query] SAP ECC OData query. For example, "$top=1". Type:
 * string (or Expression with resultType string).
 */
export interface SapEccSource extends CopySource {
  query?: string;
}

/**
 * @class
 * Initializes a new instance of the SapCloudForCustomerSource class.
 * @constructor
 * A copy activity source for SAP Cloud for Customer source.
 *
 * @property {object} [query] SAP Cloud for Customer OData query. For example,
 * "$top=1". Type: string (or Expression with resultType string).
 */
export interface SapCloudForCustomerSource extends CopySource {
  query?: any;
}

/**
 * @class
 * Initializes a new instance of the SalesforceSource class.
 * @constructor
 * A copy activity Salesforce source.
 *
 * @property {object} [query] Database query. Type: string (or Expression with
 * resultType string).
 * @property {string} [readBehavior] The read behavior for the operation.
 * Default is Query. Possible values include: 'Query', 'QueryAll'
 */
export interface SalesforceSource extends CopySource {
  query?: any;
  readBehavior?: string;
}

/**
 * @class
 * Initializes a new instance of the RelationalSource class.
 * @constructor
 * A copy activity source for various relational databases.
 *
 * @property {object} [query] Database query. Type: string (or Expression with
 * resultType string).
 */
export interface RelationalSource extends CopySource {
  query?: any;
}

/**
 * @class
 * Initializes a new instance of the DynamicsSource class.
 * @constructor
 * A copy activity Dynamics source.
 *
 * @property {object} [query] FetchXML is a proprietary query language that is
 * used in Microsoft Dynamics (online & on-premises). Type: string (or
 * Expression with resultType string).
 */
export interface DynamicsSource extends CopySource {
  query?: any;
}

/**
 * @class
 * Initializes a new instance of the DocumentDbCollectionSource class.
 * @constructor
 * A copy activity Document Database Collection source.
 *
 * @property {object} [query] Documents query. Type: string (or Expression with
 * resultType string).
 * @property {object} [nestingSeparator] Nested properties separator. Type:
 * string (or Expression with resultType string).
 */
export interface DocumentDbCollectionSource extends CopySource {
  query?: any;
  nestingSeparator?: any;
}

/**
 * @class
 * Initializes a new instance of the BlobSource class.
 * @constructor
 * A copy activity Azure Blob source.
 *
 * @property {object} [treatEmptyAsNull] Treat empty as null. Type: boolean (or
 * Expression with resultType boolean).
 * @property {object} [skipHeaderLineCount] Number of header lines to skip from
 * each blob. Type: integer (or Expression with resultType integer).
 * @property {object} [recursive] If true, files under the folder path will be
 * read recursively. Default is true. Type: boolean (or Expression with
 * resultType boolean).
 */
export interface BlobSource extends CopySource {
  treatEmptyAsNull?: any;
  skipHeaderLineCount?: any;
  recursive?: any;
}

/**
 * @class
 * Initializes a new instance of the AzureTableSource class.
 * @constructor
 * A copy activity Azure Table source.
 *
 * @property {object} [azureTableSourceQuery] Azure Table source query. Type:
 * string (or Expression with resultType string).
 * @property {object} [azureTableSourceIgnoreTableNotFound] Azure Table source
 * ignore table not found. Type: boolean (or Expression with resultType
 * boolean).
 */
export interface AzureTableSource extends CopySource {
  azureTableSourceQuery?: any;
  azureTableSourceIgnoreTableNotFound?: any;
}

/**
 * @class
 * Initializes a new instance of the LookupActivity class.
 * @constructor
 * Lookup activity.
 *
 * @property {object} source Dataset-specific source properties, same as copy
 * activity source.
 * @property {object} [source.sourceRetryCount] Source retry count. Type:
 * integer (or Expression with resultType integer).
 * @property {object} [source.sourceRetryWait] Source retry wait. Type: string
 * (or Expression with resultType string), pattern:
 * ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
 * @property {string} [source.type] Polymorphic Discriminator
 * @property {object} dataset Lookup activity dataset reference.
 * @property {string} [dataset.referenceName] Reference dataset name.
 * @property {object} [dataset.parameters] Arguments for dataset.
 * @property {object} [firstRowOnly] Whether to return first row or all rows.
 * Default value is true. Type: boolean (or Expression with resultType
 * boolean).
 */
export interface LookupActivity extends ExecutionActivity {
  source: CopySource;
  dataset: DatasetReference;
  firstRowOnly?: any;
}

/**
 * @class
 * Initializes a new instance of the DeleteActivity class.
 * @constructor
 * Delete activity.
 *
 * @property {object} [recursive] If true, files under the folder path will be
 * deleted recursively. Default is true. Type: boolean (or Expression with
 * resultType boolean).
 * @property {object} dataset Delete activity dataset reference.
 * @property {string} [dataset.referenceName] Reference dataset name.
 * @property {object} [dataset.parameters] Arguments for dataset.
 */
export interface DeleteActivity extends ExecutionActivity {
  recursive?: any;
  dataset: DatasetReference;
}

/**
 * @class
 * Initializes a new instance of the SqlServerStoredProcedureActivity class.
 * @constructor
 * SQL stored procedure activity type.
 *
 * @property {object} storedProcedureName Stored procedure name. Type: string
 * (or Expression with resultType string).
 * @property {object} [storedProcedureParameters] Value and type setting for
 * stored procedure parameters. Example: "{Parameter1: {value: "1", type:
 * "int"}}".
 */
export interface SqlServerStoredProcedureActivity extends ExecutionActivity {
  storedProcedureName: any;
  storedProcedureParameters?: { [propertyName: string]: StoredProcedureParameter };
}

/**
 * @class
 * Initializes a new instance of the CustomActivityReferenceObject class.
 * @constructor
 * Reference objects for custom activity
 *
 * @property {array} [linkedServices] Linked service references.
 * @property {array} [datasets] Dataset references.
 */
export interface CustomActivityReferenceObject {
  linkedServices?: LinkedServiceReference[];
  datasets?: DatasetReference[];
}

/**
 * @class
 * Initializes a new instance of the CustomActivity class.
 * @constructor
 * Custom activity type.
 *
 * @property {object} command Command for custom activity Type: string (or
 * Expression with resultType string).
 * @property {object} [resourceLinkedService] Resource linked service
 * reference.
 * @property {string} [resourceLinkedService.referenceName] Reference
 * LinkedService name.
 * @property {object} [resourceLinkedService.parameters] Arguments for
 * LinkedService.
 * @property {object} [folderPath] Folder path for resource files Type: string
 * (or Expression with resultType string).
 * @property {object} [referenceObjects] Reference objects
 * @property {array} [referenceObjects.linkedServices] Linked service
 * references.
 * @property {array} [referenceObjects.datasets] Dataset references.
 * @property {object} [extendedProperties] User defined property bag. There is
 * no restriction on the keys or values that can be used. The user specified
 * custom activity has the full responsibility to consume and interpret the
 * content defined.
 */
export interface CustomActivity extends ExecutionActivity {
  command: any;
  resourceLinkedService?: LinkedServiceReference;
  folderPath?: any;
  referenceObjects?: CustomActivityReferenceObject;
  extendedProperties?: { [propertyName: string]: any };
}

/**
 * @class
 * Initializes a new instance of the SSISPropertyOverride class.
 * @constructor
 * SSIS property override.
 *
 * @property {object} value SSIS package property override value. Type: string
 * (or Expression with resultType string).
 * @property {boolean} [isSensitive] Whether SSIS package property override
 * value is sensitive data. Value will be encrypted in SSISDB if it is true
 */
export interface SSISPropertyOverride {
  value: any;
  isSensitive?: boolean;
}

/**
 * @class
 * Initializes a new instance of the SSISExecutionParameter class.
 * @constructor
 * SSIS execution parameter.
 *
 * @property {object} value SSIS package execution parameter value. Type:
 * string (or Expression with resultType string).
 */
export interface SSISExecutionParameter {
  value: any;
}

/**
 * @class
 * Initializes a new instance of the SSISPackageLocation class.
 * @constructor
 * SSIS package location.
 *
 * @property {string} packagePath The SSIS package path.
 */
export interface SSISPackageLocation {
  packagePath: string;
}

/**
 * @class
 * Initializes a new instance of the ExecuteSSISPackageActivity class.
 * @constructor
 * Execute SSIS package activity.
 *
 * @property {object} packageLocation SSIS package location.
 * @property {string} [packageLocation.packagePath] The SSIS package path.
 * @property {string} [runtime] Specifies the runtime to execute SSIS package.
 * Possible values include: 'x64', 'x86'
 * @property {string} [loggingLevel] The logging level of SSIS package
 * execution.
 * @property {string} [environmentPath] The environment path to execute the
 * SSIS package.
 * @property {object} connectVia The integration runtime reference.
 * @property {string} [connectVia.referenceName] Reference integration runtime
 * name.
 * @property {object} [connectVia.parameters] Arguments for integration
 * runtime.
 * @property {object} [projectParameters] The project level parameters to
 * execute the SSIS package.
 * @property {object} [packageParameters] The package level parameters to
 * execute the SSIS package.
 * @property {object} [projectConnectionManagers] The project level connection
 * managers to execute the SSIS package.
 * @property {object} [packageConnectionManagers] The package level connection
 * managers to execute the SSIS package.
 * @property {object} [propertyOverrides] The property overrides to execute the
 * SSIS package.
 */
export interface ExecuteSSISPackageActivity extends ExecutionActivity {
  packageLocation: SSISPackageLocation;
  runtime?: string;
  loggingLevel?: string;
  environmentPath?: string;
  connectVia: IntegrationRuntimeReference;
  projectParameters?: { [propertyName: string]: SSISExecutionParameter };
  packageParameters?: { [propertyName: string]: SSISExecutionParameter };
  projectConnectionManagers?: { [propertyName: string]: { [propertyName: string]: SSISExecutionParameter } };
  packageConnectionManagers?: { [propertyName: string]: { [propertyName: string]: SSISExecutionParameter } };
  propertyOverrides?: { [propertyName: string]: SSISPropertyOverride };
}

/**
 * @class
 * Initializes a new instance of the HDInsightSparkActivity class.
 * @constructor
 * HDInsight Spark activity.
 *
 * @property {object} rootPath The root path in 'sparkJobLinkedService' for all
 * the job’s files. Type: string (or Expression with resultType string).
 * @property {object} entryFilePath The relative path to the root folder of the
 * code/package to be executed. Type: string (or Expression with resultType
 * string).
 * @property {array} [argumentsProperty] The user-specified arguments to
 * HDInsightSparkActivity.
 * @property {string} [getDebugInfo] Debug info option. Possible values
 * include: 'None', 'Always', 'Failure'
 * @property {object} [sparkJobLinkedService] The storage linked service for
 * uploading the entry file and dependencies, and for receiving logs.
 * @property {string} [sparkJobLinkedService.referenceName] Reference
 * LinkedService name.
 * @property {object} [sparkJobLinkedService.parameters] Arguments for
 * LinkedService.
 * @property {string} [className] The application's Java/Spark main class.
 * @property {object} [proxyUser] The user to impersonate that will execute the
 * job. Type: string (or Expression with resultType string).
 * @property {object} [sparkConfig] Spark configuration property.
 */
export interface HDInsightSparkActivity extends ExecutionActivity {
  rootPath: any;
  entryFilePath: any;
  argumentsProperty?: any[];
  getDebugInfo?: string;
  sparkJobLinkedService?: LinkedServiceReference;
  className?: string;
  proxyUser?: any;
  sparkConfig?: { [propertyName: string]: any };
}

/**
 * @class
 * Initializes a new instance of the HDInsightStreamingActivity class.
 * @constructor
 * HDInsight streaming activity type.
 *
 * @property {array} [storageLinkedServices] Storage linked service references.
 * @property {array} [argumentsProperty] User specified arguments to
 * HDInsightActivity.
 * @property {string} [getDebugInfo] Debug info option. Possible values
 * include: 'None', 'Always', 'Failure'
 * @property {object} mapper Mapper executable name. Type: string (or
 * Expression with resultType string).
 * @property {object} reducer Reducer executable name. Type: string (or
 * Expression with resultType string).
 * @property {object} input Input blob path. Type: string (or Expression with
 * resultType string).
 * @property {object} output Output blob path. Type: string (or Expression with
 * resultType string).
 * @property {array} filePaths Paths to streaming job files. Can be
 * directories.
 * @property {object} [fileLinkedService] Linked service reference where the
 * files are located.
 * @property {string} [fileLinkedService.referenceName] Reference LinkedService
 * name.
 * @property {object} [fileLinkedService.parameters] Arguments for
 * LinkedService.
 * @property {object} [combiner] Combiner executable name. Type: string (or
 * Expression with resultType string).
 * @property {array} [commandEnvironment] Command line environment values.
 * @property {object} [defines] Allows user to specify defines for streaming
 * job request.
 */
export interface HDInsightStreamingActivity extends ExecutionActivity {
  storageLinkedServices?: LinkedServiceReference[];
  argumentsProperty?: any[];
  getDebugInfo?: string;
  mapper: any;
  reducer: any;
  input: any;
  output: any;
  filePaths: any[];
  fileLinkedService?: LinkedServiceReference;
  combiner?: any;
  commandEnvironment?: any[];
  defines?: { [propertyName: string]: any };
}

/**
 * @class
 * Initializes a new instance of the HDInsightMapReduceActivity class.
 * @constructor
 * HDInsight MapReduce activity type.
 *
 * @property {array} [storageLinkedServices] Storage linked service references.
 * @property {array} [argumentsProperty] User specified arguments to
 * HDInsightActivity.
 * @property {string} [getDebugInfo] Debug info option. Possible values
 * include: 'None', 'Always', 'Failure'
 * @property {object} className Class name. Type: string (or Expression with
 * resultType string).
 * @property {object} jarFilePath Jar path. Type: string (or Expression with
 * resultType string).
 * @property {object} [jarLinkedService] Jar linked service reference.
 * @property {string} [jarLinkedService.referenceName] Reference LinkedService
 * name.
 * @property {object} [jarLinkedService.parameters] Arguments for
 * LinkedService.
 * @property {array} [jarLibs] Jar libs.
 * @property {object} [defines] Allows user to specify defines for the
 * MapReduce job request.
 */
export interface HDInsightMapReduceActivity extends ExecutionActivity {
  storageLinkedServices?: LinkedServiceReference[];
  argumentsProperty?: any[];
  getDebugInfo?: string;
  className: any;
  jarFilePath: any;
  jarLinkedService?: LinkedServiceReference;
  jarLibs?: any[];
  defines?: { [propertyName: string]: any };
}

/**
 * @class
 * Initializes a new instance of the HDInsightPigActivity class.
 * @constructor
 * HDInsight Pig activity type.
 *
 * @property {array} [storageLinkedServices] Storage linked service references.
 * @property {array} [argumentsProperty] User specified arguments to
 * HDInsightActivity.
 * @property {string} [getDebugInfo] Debug info option. Possible values
 * include: 'None', 'Always', 'Failure'
 * @property {object} [scriptPath] Script path. Type: string (or Expression
 * with resultType string).
 * @property {object} [scriptLinkedService] Script linked service reference.
 * @property {string} [scriptLinkedService.referenceName] Reference
 * LinkedService name.
 * @property {object} [scriptLinkedService.parameters] Arguments for
 * LinkedService.
 * @property {object} [defines] Allows user to specify defines for Pig job
 * request.
 */
export interface HDInsightPigActivity extends ExecutionActivity {
  storageLinkedServices?: LinkedServiceReference[];
  argumentsProperty?: any[];
  getDebugInfo?: string;
  scriptPath?: any;
  scriptLinkedService?: LinkedServiceReference;
  defines?: { [propertyName: string]: any };
}

/**
 * @class
 * Initializes a new instance of the HDInsightHiveActivity class.
 * @constructor
 * HDInsight Hive activity type.
 *
 * @property {array} [storageLinkedServices] Storage linked service references.
 * @property {array} [argumentsProperty] User specified arguments to
 * HDInsightActivity.
 * @property {string} [getDebugInfo] Debug info option. Possible values
 * include: 'None', 'Always', 'Failure'
 * @property {object} [scriptPath] Script path. Type: string (or Expression
 * with resultType string).
 * @property {object} [scriptLinkedService] Script linked service reference.
 * @property {string} [scriptLinkedService.referenceName] Reference
 * LinkedService name.
 * @property {object} [scriptLinkedService.parameters] Arguments for
 * LinkedService.
 * @property {object} [defines] Allows user to specify defines for Hive job
 * request.
 */
export interface HDInsightHiveActivity extends ExecutionActivity {
  storageLinkedServices?: LinkedServiceReference[];
  argumentsProperty?: any[];
  getDebugInfo?: string;
  scriptPath?: any;
  scriptLinkedService?: LinkedServiceReference;
  defines?: { [propertyName: string]: any };
}

/**
 * @class
 * Initializes a new instance of the RedirectIncompatibleRowSettings class.
 * @constructor
 * Redirect incompatible row settings
 *
 * @property {object} linkedServiceName Name of the Azure Storage, Storage SAS,
 * or Azure Data Lake Store linked service used for redirecting incompatible
 * row. Must be specified if redirectIncompatibleRowSettings is specified.
 * Type: string (or Expression with resultType string).
 * @property {object} [path] The path for storing the redirect incompatible row
 * data. Type: string (or Expression with resultType string).
 */
export interface RedirectIncompatibleRowSettings {
  linkedServiceName: any;
  path?: any;
  /**
   * @property Describes unknown properties. The value of an unknown property
   * can be of "any" type.
   */
  [property: string]: any;
}

/**
 * @class
 * Initializes a new instance of the StagingSettings class.
 * @constructor
 * Staging settings.
 *
 * @property {object} linkedServiceName Staging linked service reference.
 * @property {string} [linkedServiceName.referenceName] Reference LinkedService
 * name.
 * @property {object} [linkedServiceName.parameters] Arguments for
 * LinkedService.
 * @property {object} [path] The path to storage for storing the interim data.
 * Type: string (or Expression with resultType string).
 * @property {object} [enableCompression] Specifies whether to use compression
 * when copying data via an interim staging. Default value is false. Type:
 * boolean (or Expression with resultType boolean).
 */
export interface StagingSettings {
  linkedServiceName: LinkedServiceReference;
  path?: any;
  enableCompression?: any;
  /**
   * @property Describes unknown properties. The value of an unknown property
   * can be of "any" type.
   */
  [property: string]: any;
}

/**
 * @class
 * Initializes a new instance of the CopyTranslator class.
 * @constructor
 * A copy activity translator.
 *
 * @property {string} type Polymorphic Discriminator
 */
export interface CopyTranslator {
  type: string;
  /**
   * @property Describes unknown properties. The value of an unknown property
   * can be of "any" type.
   */
  [property: string]: any;
}

/**
 * @class
 * Initializes a new instance of the TabularTranslator class.
 * @constructor
 * A copy activity tabular translator.
 *
 * @property {object} [columnMappings] Column mappings. Example: "UserId:
 * MyUserId, Group: MyGroup, Name: MyName" Type: string (or Expression with
 * resultType string).
 * @property {object} [schemaMapping] The schema mapping to map between tabular
 * data and hierarchical data. Example: {"Column1": "$.Column1", "Column2":
 * "$.Column2.Property1", "Column3": "$.Column2.Property2"}. Type: object (or
 * Expression with resultType object).
 */
export interface TabularTranslator extends CopyTranslator {
  columnMappings?: any;
  schemaMapping?: any;
}

/**
 * @class
 * Initializes a new instance of the CopySink class.
 * @constructor
 * A copy activity sink.
 *
 * @property {object} [writeBatchSize] Write batch size. Type: integer (or
 * Expression with resultType integer), minimum: 0.
 * @property {object} [writeBatchTimeout] Write batch timeout. Type: string (or
 * Expression with resultType string), pattern:
 * ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
 * @property {object} [sinkRetryCount] Sink retry count. Type: integer (or
 * Expression with resultType integer).
 * @property {object} [sinkRetryWait] Sink retry wait. Type: string (or
 * Expression with resultType string), pattern:
 * ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
 * @property {string} type Polymorphic Discriminator
 */
export interface CopySink {
  writeBatchSize?: any;
  writeBatchTimeout?: any;
  sinkRetryCount?: any;
  sinkRetryWait?: any;
  type: string;
  /**
   * @property Describes unknown properties. The value of an unknown property
   * can be of "any" type.
   */
  [property: string]: any;
}

/**
 * @class
 * Initializes a new instance of the SalesforceSink class.
 * @constructor
 * A copy activity Salesforce sink.
 *
 * @property {string} [writeBehavior] The write behavior for the operation.
 * Default is Insert. Possible values include: 'Insert', 'Upsert'
 * @property {object} [externalIdFieldName] The name of the external ID field
 * for upsert operation. Default value is 'Id' column. Type: string (or
 * Expression with resultType string).
 * @property {object} [ignoreNullValues] The flag indicating whether or not to
 * ignore null values from input dataset (except key fields) during write
 * operation. Default value is false. If set it to true, it means ADF will
 * leave the data in the destination object unchanged when doing upsert/update
 * operation and insert defined default value when doing insert operation,
 * versus ADF will update the data in the destination object to NULL when doing
 * upsert/update operation and insert NULL value when doing insert operation.
 * Type: boolean (or Expression with resultType boolean).
 */
export interface SalesforceSink extends CopySink {
  writeBehavior?: string;
  externalIdFieldName?: any;
  ignoreNullValues?: any;
}

/**
 * @class
 * Initializes a new instance of the DynamicsSink class.
 * @constructor
 * A copy activity Dynamics sink.
 *
 * @property {object} [ignoreNullValues] The flag indicating whether ignore
 * null values from input dataset (except key fields) during write operation.
 * Default is false. Type: boolean (or Expression with resultType boolean).
 */
export interface DynamicsSink extends CopySink {
  ignoreNullValues?: any;
}

/**
 * @class
 * Initializes a new instance of the OdbcSink class.
 * @constructor
 * A copy activity ODBC sink.
 *
 * @property {object} [preCopyScript] A query to execute before starting the
 * copy. Type: string (or Expression with resultType string).
 */
export interface OdbcSink extends CopySink {
  preCopyScript?: any;
}

/**
 * @class
 * Initializes a new instance of the AzureSearchIndexSink class.
 * @constructor
 * A copy activity Azure Search Index sink.
 *
 * @property {string} [writeBehavior] Specify the write behavior when upserting
 * documents into Azure Search Index. Possible values include: 'Merge',
 * 'Upload'
 */
export interface AzureSearchIndexSink extends CopySink {
  writeBehavior?: string;
}

/**
 * @class
 * Initializes a new instance of the AzureDataLakeStoreSink class.
 * @constructor
 * A copy activity Azure Data Lake Store sink.
 *
 * @property {string} [copyBehavior] The type of copy behavior for copy sink.
 * Possible values include: 'PreserveHierarchy', 'FlattenHierarchy',
 * 'MergeFiles'
 */
export interface AzureDataLakeStoreSink extends CopySink {
  copyBehavior?: string;
}

/**
 * @class
 * Initializes a new instance of the OracleSink class.
 * @constructor
 * A copy activity Oracle sink.
 *
 * @property {object} [preCopyScript] SQL pre-copy script. Type: string (or
 * Expression with resultType string).
 */
export interface OracleSink extends CopySink {
  preCopyScript?: any;
}

/**
 * @class
 * Initializes a new instance of the PolybaseSettings class.
 * @constructor
 * PolyBase settings.
 *
 * @property {string} [rejectType] Reject type. Possible values include:
 * 'value', 'percentage'
 * @property {object} [rejectValue] Specifies the value or the percentage of
 * rows that can be rejected before the query fails. Type: number (or
 * Expression with resultType number), minimum: 0.
 * @property {object} [rejectSampleValue] Determines the number of rows to
 * attempt to retrieve before the PolyBase recalculates the percentage of
 * rejected rows. Type: integer (or Expression with resultType integer),
 * minimum: 0.
 * @property {object} [useTypeDefault] Specifies how to handle missing values
 * in delimited text files when PolyBase retrieves data from the text file.
 * Type: boolean (or Expression with resultType boolean).
 */
export interface PolybaseSettings {
  rejectType?: string;
  rejectValue?: any;
  rejectSampleValue?: any;
  useTypeDefault?: any;
  /**
   * @property Describes unknown properties. The value of an unknown property
   * can be of "any" type.
   */
  [property: string]: any;
}

/**
 * @class
 * Initializes a new instance of the SqlDWSink class.
 * @constructor
 * A copy activity SQL Data Warehouse sink.
 *
 * @property {object} [preCopyScript] SQL pre-copy script. Type: string (or
 * Expression with resultType string).
 * @property {object} [allowPolyBase] Indicates to use PolyBase to copy data
 * into SQL Data Warehouse when applicable. Type: boolean (or Expression with
 * resultType boolean).
 * @property {object} [polyBaseSettings] Specifies PolyBase-related settings
 * when allowPolyBase is true.
 * @property {string} [polyBaseSettings.rejectType] Reject type. Possible
 * values include: 'value', 'percentage'
 * @property {object} [polyBaseSettings.rejectValue] Specifies the value or the
 * percentage of rows that can be rejected before the query fails. Type: number
 * (or Expression with resultType number), minimum: 0.
 * @property {object} [polyBaseSettings.rejectSampleValue] Determines the
 * number of rows to attempt to retrieve before the PolyBase recalculates the
 * percentage of rejected rows. Type: integer (or Expression with resultType
 * integer), minimum: 0.
 * @property {object} [polyBaseSettings.useTypeDefault] Specifies how to handle
 * missing values in delimited text files when PolyBase retrieves data from the
 * text file. Type: boolean (or Expression with resultType boolean).
 */
export interface SqlDWSink extends CopySink {
  preCopyScript?: any;
  allowPolyBase?: any;
  polyBaseSettings?: PolybaseSettings;
}

/**
 * @class
 * Initializes a new instance of the SqlSink class.
 * @constructor
 * A copy activity SQL sink.
 *
 * @property {object} [sqlWriterStoredProcedureName] SQL writer stored
 * procedure name. Type: string (or Expression with resultType string).
 * @property {object} [sqlWriterTableType] SQL writer table type. Type: string
 * (or Expression with resultType string).
 * @property {object} [preCopyScript] SQL pre-copy script. Type: string (or
 * Expression with resultType string).
 * @property {object} [storedProcedureParameters] SQL stored procedure
 * parameters.
 */
export interface SqlSink extends CopySink {
  sqlWriterStoredProcedureName?: any;
  sqlWriterTableType?: any;
  preCopyScript?: any;
  storedProcedureParameters?: { [propertyName: string]: StoredProcedureParameter };
}

/**
 * @class
 * Initializes a new instance of the DocumentDbCollectionSink class.
 * @constructor
 * A copy activity Document Database Collection sink.
 *
 * @property {object} [nestingSeparator] Nested properties separator. Default
 * is . (dot). Type: string (or Expression with resultType string).
 */
export interface DocumentDbCollectionSink extends CopySink {
  nestingSeparator?: any;
}

/**
 * @class
 * Initializes a new instance of the FileSystemSink class.
 * @constructor
 * A copy activity file system sink.
 *
 * @property {string} [copyBehavior] The type of copy behavior for copy sink.
 * Possible values include: 'PreserveHierarchy', 'FlattenHierarchy',
 * 'MergeFiles'
 */
export interface FileSystemSink extends CopySink {
  copyBehavior?: string;
}

/**
 * @class
 * Initializes a new instance of the BlobSink class.
 * @constructor
 * A copy activity Azure Blob sink.
 *
 * @property {object} [blobWriterOverwriteFiles] Blob writer overwrite files.
 * Type: boolean (or Expression with resultType boolean).
 * @property {object} [blobWriterDateTimeFormat] Blob writer date time format.
 * Type: string (or Expression with resultType string).
 * @property {object} [blobWriterAddHeader] Blob writer add header. Type:
 * boolean (or Expression with resultType boolean).
 * @property {string} [copyBehavior] The type of copy behavior for copy sink.
 * Possible values include: 'PreserveHierarchy', 'FlattenHierarchy',
 * 'MergeFiles'
 */
export interface BlobSink extends CopySink {
  blobWriterOverwriteFiles?: any;
  blobWriterDateTimeFormat?: any;
  blobWriterAddHeader?: any;
  copyBehavior?: string;
}

/**
 * @class
 * Initializes a new instance of the AzureTableSink class.
 * @constructor
 * A copy activity Azure Table sink.
 *
 * @property {object} [azureTableDefaultPartitionKeyValue] Azure Table default
 * partition key value. Type: string (or Expression with resultType string).
 * @property {object} [azureTablePartitionKeyName] Azure Table partition key
 * name. Type: string (or Expression with resultType string).
 * @property {object} [azureTableRowKeyName] Azure Table row key name. Type:
 * string (or Expression with resultType string).
 * @property {object} [azureTableInsertType] Azure Table insert type. Type:
 * string (or Expression with resultType string).
 */
export interface AzureTableSink extends CopySink {
  azureTableDefaultPartitionKeyValue?: any;
  azureTablePartitionKeyName?: any;
  azureTableRowKeyName?: any;
  azureTableInsertType?: any;
}

/**
 * @class
 * Initializes a new instance of the AzureQueueSink class.
 * @constructor
 * A copy activity Azure Queue sink.
 *
 */
export interface AzureQueueSink extends CopySink {
}

/**
 * @class
 * Initializes a new instance of the SapCloudForCustomerSink class.
 * @constructor
 * A copy activity SAP Cloud for Customer sink.
 *
 * @property {string} [writeBehavior] The write behavior for the operation.
 * Default is 'Insert'. Possible values include: 'Insert', 'Update'
 */
export interface SapCloudForCustomerSink extends CopySink {
  writeBehavior?: string;
}

/**
 * @class
 * Initializes a new instance of the CopyActivity class.
 * @constructor
 * Copy activity.
 *
 * @property {object} source Copy activity source.
 * @property {object} [source.sourceRetryCount] Source retry count. Type:
 * integer (or Expression with resultType integer).
 * @property {object} [source.sourceRetryWait] Source retry wait. Type: string
 * (or Expression with resultType string), pattern:
 * ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
 * @property {string} [source.type] Polymorphic Discriminator
 * @property {object} sink Copy activity sink.
 * @property {object} [sink.writeBatchSize] Write batch size. Type: integer (or
 * Expression with resultType integer), minimum: 0.
 * @property {object} [sink.writeBatchTimeout] Write batch timeout. Type:
 * string (or Expression with resultType string), pattern:
 * ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
 * @property {object} [sink.sinkRetryCount] Sink retry count. Type: integer (or
 * Expression with resultType integer).
 * @property {object} [sink.sinkRetryWait] Sink retry wait. Type: string (or
 * Expression with resultType string), pattern:
 * ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
 * @property {string} [sink.type] Polymorphic Discriminator
 * @property {object} [translator] Copy activity translator. If not specificed,
 * tabular translator is used.
 * @property {string} [translator.type] Polymorphic Discriminator
 * @property {object} [enableStaging] Specifies whether to copy data via an
 * interim staging. Default value is false. Type: boolean (or Expression with
 * resultType boolean).
 * @property {object} [stagingSettings] Specifies interim staging settings when
 * EnableStaging is true.
 * @property {object} [stagingSettings.linkedServiceName] Staging linked
 * service reference.
 * @property {string} [stagingSettings.linkedServiceName.referenceName]
 * Reference LinkedService name.
 * @property {object} [stagingSettings.linkedServiceName.parameters] Arguments
 * for LinkedService.
 * @property {object} [stagingSettings.path] The path to storage for storing
 * the interim data. Type: string (or Expression with resultType string).
 * @property {object} [stagingSettings.enableCompression] Specifies whether to
 * use compression when copying data via an interim staging. Default value is
 * false. Type: boolean (or Expression with resultType boolean).
 * @property {object} [parallelCopies] Maximum number of concurrent sessions
 * opened on the source or sink to avoid overloading the data store. Type:
 * integer (or Expression with resultType integer), minimum: 0.
 * @property {object} [dataIntegrationUnits] Maximum number of data integration
 * units that can be used to perform this data movement. Type: integer (or
 * Expression with resultType integer), minimum: 0.
 * @property {object} [enableSkipIncompatibleRow] Whether to skip incompatible
 * row. Default value is false. Type: boolean (or Expression with resultType
 * boolean).
 * @property {object} [redirectIncompatibleRowSettings] Redirect incompatible
 * row settings when EnableSkipIncompatibleRow is true.
 * @property {object} [redirectIncompatibleRowSettings.linkedServiceName] Name
 * of the Azure Storage, Storage SAS, or Azure Data Lake Store linked service
 * used for redirecting incompatible row. Must be specified if
 * redirectIncompatibleRowSettings is specified. Type: string (or Expression
 * with resultType string).
 * @property {object} [redirectIncompatibleRowSettings.path] The path for
 * storing the redirect incompatible row data. Type: string (or Expression with
 * resultType string).
 * @property {array} [inputs] List of inputs for the activity.
 * @property {array} [outputs] List of outputs for the activity.
 */
export interface CopyActivity extends ExecutionActivity {
  source: CopySource;
  sink: CopySink;
  translator?: CopyTranslator;
  enableStaging?: any;
  stagingSettings?: StagingSettings;
  parallelCopies?: any;
  dataIntegrationUnits?: any;
  enableSkipIncompatibleRow?: any;
  redirectIncompatibleRowSettings?: RedirectIncompatibleRowSettings;
  inputs?: DatasetReference[];
  outputs?: DatasetReference[];
}

/**
 * @class
 * Initializes a new instance of the ControlActivity class.
 * @constructor
 * Base class for all control activities like IfCondition, ForEach , Until.
 *
 */
export interface ControlActivity extends Activity {
}

/**
 * @class
 * Initializes a new instance of the AppendVariableActivity class.
 * @constructor
 * Append value for a Variable of type Array.
 *
 * @property {string} [variableName] Name of the variable whose value needs to
 * be appended to.
 * @property {object} [value] Value to be appended. Could be a static value or
 * Expression
 */
export interface AppendVariableActivity extends ControlActivity {
  variableName?: string;
  value?: any;
}

/**
 * @class
 * Initializes a new instance of the SetVariableActivity class.
 * @constructor
 * Set value for a Variable.
 *
 * @property {string} [variableName] Name of the variable whose value needs to
 * be set.
 * @property {object} [value] Value to be set. Could be a static value or
 * Expression
 */
export interface SetVariableActivity extends ControlActivity {
  variableName?: string;
  value?: any;
}

/**
 * @class
 * Initializes a new instance of the FilterActivity class.
 * @constructor
 * Filter and return results from input array based on the conditions.
 *
 * @property {object} items Input array on which filter should be applied.
 * @property {string} [items.value] Expression value.
 * @property {object} condition Condition to be used for filtering the input.
 * @property {string} [condition.value] Expression value.
 */
export interface FilterActivity extends ControlActivity {
  items: Expression;
  condition: Expression;
}

/**
 * @class
 * Initializes a new instance of the UntilActivity class.
 * @constructor
 * This activity executes inner activities until the specified boolean
 * expression results to true or timeout is reached, whichever is earlier.
 *
 * @property {object} expression An expression that would evaluate to Boolean.
 * The loop will continue until this expression evaluates to true
 * @property {string} [expression.value] Expression value.
 * @property {object} [timeout] Specifies the timeout for the activity to run.
 * If there is no value specified, it takes the value of TimeSpan.FromDays(7)
 * which is 1 week as default. Type: string (or Expression with resultType
 * string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
 * Type: string (or Expression with resultType string), pattern:
 * ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
 * @property {array} activities List of activities to execute.
 */
export interface UntilActivity extends ControlActivity {
  expression: Expression;
  timeout?: any;
  activities: Activity[];
}

/**
 * @class
 * Initializes a new instance of the WaitActivity class.
 * @constructor
 * This activity suspends pipeline execution for the specified interval.
 *
 * @property {number} waitTimeInSeconds Duration in seconds.
 */
export interface WaitActivity extends ControlActivity {
  waitTimeInSeconds: number;
}

/**
 * @class
 * Initializes a new instance of the ForEachActivity class.
 * @constructor
 * This activity is used for iterating over a collection and execute given
 * activities.
 *
 * @property {boolean} [isSequential] Should the loop be executed in sequence
 * or in parallel (max 50)
 * @property {number} [batchCount] Batch count to be used for controlling the
 * number of parallel execution (when isSequential is set to false).
 * @property {object} items Collection to iterate.
 * @property {string} [items.value] Expression value.
 * @property {array} activities List of activities to execute .
 */
export interface ForEachActivity extends ControlActivity {
  isSequential?: boolean;
  batchCount?: number;
  items: Expression;
  activities: Activity[];
}

/**
 * @class
 * Initializes a new instance of the IfConditionActivity class.
 * @constructor
 * This activity evaluates a boolean expression and executes either the
 * activities under the ifTrueActivities property or the ifFalseActivities
 * property depending on the result of the expression.
 *
 * @property {object} expression An expression that would evaluate to Boolean.
 * This is used to determine the block of activities (ifTrueActivities or
 * ifFalseActivities) that will be executed.
 * @property {string} [expression.value] Expression value.
 * @property {array} [ifTrueActivities] List of activities to execute if
 * expression is evaluated to true. This is an optional property and if not
 * provided, the activity will exit without any action.
 * @property {array} [ifFalseActivities] List of activities to execute if
 * expression is evaluated to false. This is an optional property and if not
 * provided, the activity will exit without any action.
 */
export interface IfConditionActivity extends ControlActivity {
  expression: Expression;
  ifTrueActivities?: Activity[];
  ifFalseActivities?: Activity[];
}

/**
 * @class
 * Initializes a new instance of the ExecutePipelineActivity class.
 * @constructor
 * Execute pipeline activity.
 *
 * @property {object} pipelineProperty Pipeline reference.
 * @property {string} [pipelineProperty.referenceName] Reference pipeline name.
 * @property {string} [pipelineProperty.name] Reference name.
 * @property {object} [parameters] Pipeline parameters.
 * @property {boolean} [waitOnCompletion] Defines whether activity execution
 * will wait for the dependent pipeline execution to finish. Default is false.
 */
export interface ExecutePipelineActivity extends ControlActivity {
  pipelineProperty: PipelineReference;
  parameters?: { [propertyName: string]: any };
  waitOnCompletion?: boolean;
}

/**
 * @class
 * Initializes a new instance of the LinkedIntegrationRuntime class.
 * @constructor
 * The linked integration runtime information.
 *
 * @property {string} [name] The name of the linked integration runtime.
 * @property {string} [subscriptionId] The subscription ID for which the linked
 * integration runtime belong to.
 * @property {string} [dataFactoryName] The name of the data factory for which
 * the linked integration runtime belong to.
 * @property {string} [dataFactoryLocation] The location of the data factory
 * for which the linked integration runtime belong to.
 * @property {date} [createTime] The creating time of the linked integration
 * runtime.
 */
export interface LinkedIntegrationRuntime {
  readonly name?: string;
  readonly subscriptionId?: string;
  readonly dataFactoryName?: string;
  readonly dataFactoryLocation?: string;
  readonly createTime?: Date;
}

/**
 * @class
 * Initializes a new instance of the SelfHostedIntegrationRuntimeNode class.
 * @constructor
 * Properties of Self-hosted integration runtime node.
 *
 * @property {string} [nodeName] Name of the integration runtime node.
 * @property {string} [machineName] Machine name of the integration runtime
 * node.
 * @property {string} [hostServiceUri] URI for the host machine of the
 * integration runtime.
 * @property {string} [status] Status of the integration runtime node. Possible
 * values include: 'NeedRegistration', 'Online', 'Limited', 'Offline',
 * 'Upgrading', 'Initializing', 'InitializeFailed'
 * @property {object} [capabilities] The integration runtime capabilities
 * dictionary
 * @property {string} [versionStatus] Status of the integration runtime node
 * version.
 * @property {string} [version] Version of the integration runtime node.
 * @property {date} [registerTime] The time at which the integration runtime
 * node was registered in ISO8601 format.
 * @property {date} [lastConnectTime] The most recent time at which the
 * integration runtime was connected in ISO8601 format.
 * @property {date} [expiryTime] The time at which the integration runtime will
 * expire in ISO8601 format.
 * @property {date} [lastStartTime] The time the node last started up.
 * @property {date} [lastStopTime] The integration runtime node last stop time.
 * @property {string} [lastUpdateResult] The result of the last integration
 * runtime node update. Possible values include: 'None', 'Succeed', 'Fail'
 * @property {date} [lastStartUpdateTime] The last time for the integration
 * runtime node update start.
 * @property {date} [lastEndUpdateTime] The last time for the integration
 * runtime node update end.
 * @property {boolean} [isActiveDispatcher] Indicates whether this node is the
 * active dispatcher for integration runtime requests.
 * @property {number} [concurrentJobsLimit] Maximum concurrent jobs on the
 * integration runtime node.
 * @property {number} [maxConcurrentJobs] The maximum concurrent jobs in this
 * integration runtime.
 */
export interface SelfHostedIntegrationRuntimeNode {
  readonly nodeName?: string;
  readonly machineName?: string;
  readonly hostServiceUri?: string;
  readonly status?: string;
  readonly capabilities?: { [propertyName: string]: string };
  readonly versionStatus?: string;
  readonly version?: string;
  readonly registerTime?: Date;
  readonly lastConnectTime?: Date;
  readonly expiryTime?: Date;
  readonly lastStartTime?: Date;
  readonly lastStopTime?: Date;
  readonly lastUpdateResult?: string;
  readonly lastStartUpdateTime?: Date;
  readonly lastEndUpdateTime?: Date;
  readonly isActiveDispatcher?: boolean;
  readonly concurrentJobsLimit?: number;
  readonly maxConcurrentJobs?: number;
  /**
   * @property Describes unknown properties. The value of an unknown property
   * can be of "any" type.
   */
  [property: string]: any;
}

/**
 * @class
 * Initializes a new instance of the SelfHostedIntegrationRuntimeStatus class.
 * @constructor
 * Self-hosted integration runtime status.
 *
 * @property {date} [createTime] The time at which the integration runtime was
 * created, in ISO8601 format.
 * @property {string} [taskQueueId] The task queue id of the integration
 * runtime.
 * @property {string} [internalChannelEncryption] It is used to set the
 * encryption mode for node-node communication channel (when more than 2
 * self-hosted integration runtime nodes exist). Possible values include:
 * 'NotSet', 'SslEncrypted', 'NotEncrypted'
 * @property {string} [version] Version of the integration runtime.
 * @property {array} [nodes] The list of nodes for this integration runtime.
 * @property {date} [scheduledUpdateDate] The date at which the integration
 * runtime will be scheduled to update, in ISO8601 format.
 * @property {string} [updateDelayOffset] The time in the date scheduled by
 * service to update the integration runtime, e.g., PT03H is 3 hours
 * @property {string} [localTimeZoneOffset] The local time zone offset in
 * hours.
 * @property {object} [capabilities] Object with additional information about
 * integration runtime capabilities.
 * @property {array} [serviceUrls] The URLs for the services used in
 * integration runtime backend service.
 * @property {string} [autoUpdate] Whether Self-hosted integration runtime auto
 * update has been turned on. Possible values include: 'On', 'Off'
 * @property {string} [versionStatus] Status of the integration runtime
 * version.
 * @property {array} [links] The list of linked integration runtimes that are
 * created to share with this integration runtime.
 * @property {string} [pushedVersion] The version that the integration runtime
 * is going to update to.
 * @property {string} [latestVersion] The latest version on download center.
 * @property {date} [autoUpdateETA] The estimated time when the self-hosted
 * integration runtime will be updated.
 */
export interface SelfHostedIntegrationRuntimeStatus extends IntegrationRuntimeStatus {
  readonly createTime?: Date;
  readonly taskQueueId?: string;
  readonly internalChannelEncryption?: string;
  readonly version?: string;
  nodes?: SelfHostedIntegrationRuntimeNode[];
  readonly scheduledUpdateDate?: Date;
  readonly updateDelayOffset?: string;
  readonly localTimeZoneOffset?: string;
  readonly capabilities?: { [propertyName: string]: string };
  readonly serviceUrls?: string[];
  readonly autoUpdate?: string;
  readonly versionStatus?: string;
  links?: LinkedIntegrationRuntime[];
  readonly pushedVersion?: string;
  readonly latestVersion?: string;
  readonly autoUpdateETA?: Date;
}

/**
 * @class
 * Initializes a new instance of the ManagedIntegrationRuntimeOperationResult class.
 * @constructor
 * Properties of managed integration runtime operation result.
 *
 * @property {string} [type] The operation type. Could be start or stop.
 * @property {date} [startTime] The start time of the operation.
 * @property {string} [result] The operation result.
 * @property {string} [errorCode] The error code.
 * @property {array} [parameters] Managed integration runtime error parameters.
 * @property {string} [activityId] The activity id for the operation request.
 */
export interface ManagedIntegrationRuntimeOperationResult {
  readonly type?: string;
  readonly startTime?: Date;
  readonly result?: string;
  readonly errorCode?: string;
  readonly parameters?: string[];
  readonly activityId?: string;
  /**
   * @property Describes unknown properties. The value of an unknown property
   * can be of "any" type.
   */
  [property: string]: any;
}

/**
 * @class
 * Initializes a new instance of the ManagedIntegrationRuntimeError class.
 * @constructor
 * Error definition for managed integration runtime.
 *
 * @property {date} [time] The time when the error occurred.
 * @property {string} [code] Error code.
 * @property {array} [parameters] Managed integration runtime error parameters.
 * @property {string} [message] Error message.
 */
export interface ManagedIntegrationRuntimeError {
  readonly time?: Date;
  readonly code?: string;
  readonly parameters?: string[];
  readonly message?: string;
  /**
   * @property Describes unknown properties. The value of an unknown property
   * can be of "any" type.
   */
  [property: string]: any;
}

/**
 * @class
 * Initializes a new instance of the ManagedIntegrationRuntimeNode class.
 * @constructor
 * Properties of integration runtime node.
 *
 * @property {string} [nodeId] The managed integration runtime node id.
 * @property {string} [status] The managed integration runtime node status.
 * Possible values include: 'Starting', 'Available', 'Recycling', 'Unavailable'
 * @property {array} [errors] The errors that occurred on this integration
 * runtime node.
 */
export interface ManagedIntegrationRuntimeNode {
  readonly nodeId?: string;
  readonly status?: string;
  errors?: ManagedIntegrationRuntimeError[];
  /**
   * @property Describes unknown properties. The value of an unknown property
   * can be of "any" type.
   */
  [property: string]: any;
}

/**
 * @class
 * Initializes a new instance of the ManagedIntegrationRuntimeStatus class.
 * @constructor
 * Managed integration runtime status.
 *
 * @property {date} [createTime] The time at which the integration runtime was
 * created, in ISO8601 format.
 * @property {array} [nodes] The list of nodes for managed integration runtime.
 * @property {array} [otherErrors] The errors that occurred on this integration
 * runtime.
 * @property {object} [lastOperation] The last operation result that occurred
 * on this integration runtime.
 * @property {string} [lastOperation.type] The operation type. Could be start
 * or stop.
 * @property {date} [lastOperation.startTime] The start time of the operation.
 * @property {string} [lastOperation.result] The operation result.
 * @property {string} [lastOperation.errorCode] The error code.
 * @property {array} [lastOperation.parameters] Managed integration runtime
 * error parameters.
 * @property {string} [lastOperation.activityId] The activity id for the
 * operation request.
 */
export interface ManagedIntegrationRuntimeStatus extends IntegrationRuntimeStatus {
  readonly createTime?: Date;
  readonly nodes?: ManagedIntegrationRuntimeNode[];
  readonly otherErrors?: ManagedIntegrationRuntimeError[];
  readonly lastOperation?: ManagedIntegrationRuntimeOperationResult;
}

/**
 * @class
 * Initializes a new instance of the LinkedIntegrationRuntimeType class.
 * @constructor
 * The base definition of a linked integration runtime.
 *
 * @property {string} authorizationType Polymorphic Discriminator
 */
export interface LinkedIntegrationRuntimeType {
  authorizationType: string;
}

/**
 * @class
 * Initializes a new instance of the LinkedIntegrationRuntimeRbacAuthorization class.
 * @constructor
 * The role based access control (RBAC) authorization type integration runtime.
 *
 * @property {string} resourceId The resource identifier of the integration
 * runtime to be shared.
 */
export interface LinkedIntegrationRuntimeRbacAuthorization extends LinkedIntegrationRuntimeType {
  resourceId: string;
}

/**
 * @class
 * Initializes a new instance of the LinkedIntegrationRuntimeKeyAuthorization class.
 * @constructor
 * The key authorization type integration runtime.
 *
 * @property {object} key The key used for authorization.
 * @property {string} [key.value] Value of secure string.
 */
export interface LinkedIntegrationRuntimeKeyAuthorization extends LinkedIntegrationRuntimeType {
  key: SecureString;
}

/**
 * @class
 * Initializes a new instance of the SelfHostedIntegrationRuntime class.
 * @constructor
 * Self-hosted integration runtime.
 *
 * @property {object} [linkedInfo]
 * @property {string} [linkedInfo.authorizationType] Polymorphic Discriminator
 */
export interface SelfHostedIntegrationRuntime extends IntegrationRuntime {
  linkedInfo?: LinkedIntegrationRuntimeType;
}

/**
 * @class
 * Initializes a new instance of the IntegrationRuntimeCustomSetupScriptProperties class.
 * @constructor
 * Custom setup script properties for a managed dedicated integration runtime.
 *
 * @property {string} [blobContainerUri] The URI of the Azure blob container
 * that contains the custom setup script.
 * @property {object} [sasToken] The SAS token of the Azure blob container.
 * @property {string} [sasToken.value] Value of secure string.
 */
export interface IntegrationRuntimeCustomSetupScriptProperties {
  blobContainerUri?: string;
  sasToken?: SecureString;
}

/**
 * @class
 * Initializes a new instance of the IntegrationRuntimeSsisCatalogInfo class.
 * @constructor
 * Catalog information for managed dedicated integration runtime.
 *
 * @property {string} [catalogServerEndpoint] The catalog database server URL.
 * @property {string} [catalogAdminUserName] The administrator user name of
 * catalog database.
 * @property {object} [catalogAdminPassword] The password of the administrator
 * user account of the catalog database.
 * @property {string} [catalogAdminPassword.value] Value of secure string.
 * @property {string} [catalogPricingTier] The pricing tier for the catalog
 * database. The valid values could be found in
 * https://azure.microsoft.com/en-us/pricing/details/sql-database/. Possible
 * values include: 'Basic', 'Standard', 'Premium', 'PremiumRS'
 */
export interface IntegrationRuntimeSsisCatalogInfo {
  catalogServerEndpoint?: string;
  catalogAdminUserName?: string;
  catalogAdminPassword?: SecureString;
  catalogPricingTier?: string;
  /**
   * @property Describes unknown properties. The value of an unknown property
   * can be of "any" type.
   */
  [property: string]: any;
}

/**
 * @class
 * Initializes a new instance of the IntegrationRuntimeSsisProperties class.
 * @constructor
 * SSIS properties for managed integration runtime.
 *
 * @property {object} [catalogInfo] Catalog information for managed dedicated
 * integration runtime.
 * @property {string} [catalogInfo.catalogServerEndpoint] The catalog database
 * server URL.
 * @property {string} [catalogInfo.catalogAdminUserName] The administrator user
 * name of catalog database.
 * @property {object} [catalogInfo.catalogAdminPassword] The password of the
 * administrator user account of the catalog database.
 * @property {string} [catalogInfo.catalogAdminPassword.value] Value of secure
 * string.
 * @property {string} [catalogInfo.catalogPricingTier] The pricing tier for the
 * catalog database. The valid values could be found in
 * https://azure.microsoft.com/en-us/pricing/details/sql-database/. Possible
 * values include: 'Basic', 'Standard', 'Premium', 'PremiumRS'
 * @property {string} [licenseType] License type for bringing your own license
 * scenario. Possible values include: 'BasePrice', 'LicenseIncluded'
 * @property {object} [customSetupScriptProperties] Custom setup script
 * properties for a managed dedicated integration runtime.
 * @property {string} [customSetupScriptProperties.blobContainerUri] The URI of
 * the Azure blob container that contains the custom setup script.
 * @property {object} [customSetupScriptProperties.sasToken] The SAS token of
 * the Azure blob container.
 * @property {string} [customSetupScriptProperties.sasToken.value] Value of
 * secure string.
 * @property {string} [edition] The edition for the SSIS Integration Runtime.
 * Possible values include: 'Standard', 'Enterprise'
 */
export interface IntegrationRuntimeSsisProperties {
  catalogInfo?: IntegrationRuntimeSsisCatalogInfo;
  licenseType?: string;
  customSetupScriptProperties?: IntegrationRuntimeCustomSetupScriptProperties;
  edition?: string;
  /**
   * @property Describes unknown properties. The value of an unknown property
   * can be of "any" type.
   */
  [property: string]: any;
}

/**
 * @class
 * Initializes a new instance of the IntegrationRuntimeVNetProperties class.
 * @constructor
 * VNet properties for managed integration runtime.
 *
 * @property {string} [vNetId] The ID of the VNet that this integration runtime
 * will join.
 * @property {string} [subnet] The name of the subnet this integration runtime
 * will join.
 */
export interface IntegrationRuntimeVNetProperties {
  vNetId?: string;
  subnet?: string;
  /**
   * @property Describes unknown properties. The value of an unknown property
   * can be of "any" type.
   */
  [property: string]: any;
}

/**
 * @class
 * Initializes a new instance of the IntegrationRuntimeComputeProperties class.
 * @constructor
 * The compute resource properties for managed integration runtime.
 *
 * @property {string} [location] The location for managed integration runtime.
 * The supported regions could be found on
 * https://docs.microsoft.com/en-us/azure/data-factory/data-factory-data-movement-activities
 * @property {string} [nodeSize] The node size requirement to managed
 * integration runtime.
 * @property {number} [numberOfNodes] The required number of nodes for managed
 * integration runtime.
 * @property {number} [maxParallelExecutionsPerNode] Maximum parallel
 * executions count per node for managed integration runtime.
 * @property {object} [vNetProperties] VNet properties for managed integration
 * runtime.
 * @property {string} [vNetProperties.vNetId] The ID of the VNet that this
 * integration runtime will join.
 * @property {string} [vNetProperties.subnet] The name of the subnet this
 * integration runtime will join.
 */
export interface IntegrationRuntimeComputeProperties {
  location?: string;
  nodeSize?: string;
  numberOfNodes?: number;
  maxParallelExecutionsPerNode?: number;
  vNetProperties?: IntegrationRuntimeVNetProperties;
  /**
   * @property Describes unknown properties. The value of an unknown property
   * can be of "any" type.
   */
  [property: string]: any;
}

/**
 * @class
 * Initializes a new instance of the ManagedIntegrationRuntime class.
 * @constructor
 * Managed integration runtime, including managed elastic and managed dedicated
 * integration runtimes.
 *
 * @property {string} [state] Integration runtime state, only valid for managed
 * dedicated integration runtime. Possible values include: 'Initial',
 * 'Stopped', 'Started', 'Starting', 'Stopping', 'NeedRegistration', 'Online',
 * 'Limited', 'Offline', 'AccessDenied'
 * @property {object} [computeProperties] The compute resource for managed
 * integration runtime.
 * @property {string} [computeProperties.location] The location for managed
 * integration runtime. The supported regions could be found on
 * https://docs.microsoft.com/en-us/azure/data-factory/data-factory-data-movement-activities
 * @property {string} [computeProperties.nodeSize] The node size requirement to
 * managed integration runtime.
 * @property {number} [computeProperties.numberOfNodes] The required number of
 * nodes for managed integration runtime.
 * @property {number} [computeProperties.maxParallelExecutionsPerNode] Maximum
 * parallel executions count per node for managed integration runtime.
 * @property {object} [computeProperties.vNetProperties] VNet properties for
 * managed integration runtime.
 * @property {string} [computeProperties.vNetProperties.vNetId] The ID of the
 * VNet that this integration runtime will join.
 * @property {string} [computeProperties.vNetProperties.subnet] The name of the
 * subnet this integration runtime will join.
 * @property {object} [ssisProperties] SSIS properties for managed integration
 * runtime.
 * @property {object} [ssisProperties.catalogInfo] Catalog information for
 * managed dedicated integration runtime.
 * @property {string} [ssisProperties.catalogInfo.catalogServerEndpoint] The
 * catalog database server URL.
 * @property {string} [ssisProperties.catalogInfo.catalogAdminUserName] The
 * administrator user name of catalog database.
 * @property {object} [ssisProperties.catalogInfo.catalogAdminPassword] The
 * password of the administrator user account of the catalog database.
 * @property {string} [ssisProperties.catalogInfo.catalogAdminPassword.value]
 * Value of secure string.
 * @property {string} [ssisProperties.catalogInfo.catalogPricingTier] The
 * pricing tier for the catalog database. The valid values could be found in
 * https://azure.microsoft.com/en-us/pricing/details/sql-database/. Possible
 * values include: 'Basic', 'Standard', 'Premium', 'PremiumRS'
 * @property {string} [ssisProperties.licenseType] License type for bringing
 * your own license scenario. Possible values include: 'BasePrice',
 * 'LicenseIncluded'
 * @property {object} [ssisProperties.customSetupScriptProperties] Custom setup
 * script properties for a managed dedicated integration runtime.
 * @property {string}
 * [ssisProperties.customSetupScriptProperties.blobContainerUri] The URI of the
 * Azure blob container that contains the custom setup script.
 * @property {object} [ssisProperties.customSetupScriptProperties.sasToken] The
 * SAS token of the Azure blob container.
 * @property {string}
 * [ssisProperties.customSetupScriptProperties.sasToken.value] Value of secure
 * string.
 * @property {string} [ssisProperties.edition] The edition for the SSIS
 * Integration Runtime. Possible values include: 'Standard', 'Enterprise'
 */
export interface ManagedIntegrationRuntime extends IntegrationRuntime {
  readonly state?: string;
  computeProperties?: IntegrationRuntimeComputeProperties;
  ssisProperties?: IntegrationRuntimeSsisProperties;
}

/**
 * @class
 * Initializes a new instance of the IntegrationRuntimeNodeIpAddress class.
 * @constructor
 * The IP address of self-hosted integration runtime node.
 *
 * @property {string} [ipAddress] The IP address of self-hosted integration
 * runtime node.
 */
export interface IntegrationRuntimeNodeIpAddress {
  readonly ipAddress?: string;
}

/**
 * @class
 * Initializes a new instance of the IntegrationRuntimeNodeMonitoringData class.
 * @constructor
 * Monitoring data for integration runtime node.
 *
 * @property {string} [nodeName] Name of the integration runtime node.
 * @property {number} [availableMemoryInMB] Available memory (MB) on the
 * integration runtime node.
 * @property {number} [cpuUtilization] CPU percentage on the integration
 * runtime node.
 * @property {number} [concurrentJobsLimit] Maximum concurrent jobs on the
 * integration runtime node.
 * @property {number} [concurrentJobsRunning] The number of jobs currently
 * running on the integration runtime node.
 * @property {number} [maxConcurrentJobs] The maximum concurrent jobs in this
 * integration runtime.
 * @property {number} [sentBytes] Sent bytes on the integration runtime node.
 * @property {number} [receivedBytes] Received bytes on the integration runtime
 * node.
 */
export interface IntegrationRuntimeNodeMonitoringData {
  readonly nodeName?: string;
  readonly availableMemoryInMB?: number;
  readonly cpuUtilization?: number;
  readonly concurrentJobsLimit?: number;
  readonly concurrentJobsRunning?: number;
  readonly maxConcurrentJobs?: number;
  readonly sentBytes?: number;
  readonly receivedBytes?: number;
  /**
   * @property Describes unknown properties. The value of an unknown property
   * can be of "any" type.
   */
  [property: string]: any;
}

/**
 * @class
 * Initializes a new instance of the IntegrationRuntimeMonitoringData class.
 * @constructor
 * Get monitoring data response.
 *
 * @property {string} [name] Integration runtime name.
 * @property {array} [nodes] Integration runtime node monitoring data.
 */
export interface IntegrationRuntimeMonitoringData {
  name?: string;
  nodes?: IntegrationRuntimeNodeMonitoringData[];
}

/**
 * @class
 * Initializes a new instance of the IntegrationRuntimeAuthKeys class.
 * @constructor
 * The integration runtime authentication keys.
 *
 * @property {string} [authKey1] The primary integration runtime authentication
 * key.
 * @property {string} [authKey2] The secondary integration runtime
 * authentication key.
 */
export interface IntegrationRuntimeAuthKeys {
  authKey1?: string;
  authKey2?: string;
}

/**
 * @class
 * Initializes a new instance of the IntegrationRuntimeRegenerateKeyParameters class.
 * @constructor
 * Parameters to regenerate the authentication key.
 *
 * @property {string} [keyName] The name of the authentication key to
 * regenerate. Possible values include: 'authKey1', 'authKey2'
 */
export interface IntegrationRuntimeRegenerateKeyParameters {
  keyName?: string;
}

/**
 * @class
 * Initializes a new instance of the IntegrationRuntimeConnectionInfo class.
 * @constructor
 * Connection information for encrypting the on-premises data source
 * credentials.
 *
 * @property {string} [serviceToken] The token generated in service. Callers
 * use this token to authenticate to integration runtime.
 * @property {string} [identityCertThumbprint] The integration runtime SSL
 * certificate thumbprint. Click-Once application uses it to do server
 * validation.
 * @property {string} [hostServiceUri] The on-premises integration runtime host
 * URL.
 * @property {string} [version] The integration runtime version.
 * @property {string} [publicKey] The public key for encrypting a credential
 * when transferring the credential to the integration runtime.
 * @property {boolean} [isIdentityCertExprired] Whether the identity
 * certificate is expired.
 */
export interface IntegrationRuntimeConnectionInfo {
  readonly serviceToken?: string;
  readonly identityCertThumbprint?: string;
  readonly hostServiceUri?: string;
  readonly version?: string;
  readonly publicKey?: string;
  readonly isIdentityCertExprired?: boolean;
  /**
   * @property Describes unknown properties. The value of an unknown property
   * can be of "any" type.
   */
  [property: string]: any;
}


/**
 * @class
 * Initializes a new instance of the OperationListResponse class.
 * @constructor
 * A list of operations that can be performed by the Data Factory service.
 *
 * @property {string} [nextLink] The link to the next page of results, if any
 * remaining results exist.
 */
export interface OperationListResponse extends Array<Operation> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the FactoryListResponse class.
 * @constructor
 * A list of factory resources.
 *
 * @property {string} [nextLink] The link to the next page of results, if any
 * remaining results exist.
 */
export interface FactoryListResponse extends Array<Factory> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the IntegrationRuntimeListResponse class.
 * @constructor
 * A list of integration runtime resources.
 *
 * @property {string} [nextLink] The link to the next page of results, if any
 * remaining results exist.
 */
export interface IntegrationRuntimeListResponse extends Array<IntegrationRuntimeResource> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the LinkedServiceListResponse class.
 * @constructor
 * A list of linked service resources.
 *
 * @property {string} [nextLink] The link to the next page of results, if any
 * remaining results exist.
 */
export interface LinkedServiceListResponse extends Array<LinkedServiceResource> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the DatasetListResponse class.
 * @constructor
 * A list of dataset resources.
 *
 * @property {string} [nextLink] The link to the next page of results, if any
 * remaining results exist.
 */
export interface DatasetListResponse extends Array<DatasetResource> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the PipelineListResponse class.
 * @constructor
 * A list of pipeline resources.
 *
 * @property {string} [nextLink] The link to the next page of results, if any
 * remaining results exist.
 */
export interface PipelineListResponse extends Array<PipelineResource> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the TriggerListResponse class.
 * @constructor
 * A list of trigger resources.
 *
 * @property {string} [nextLink] The link to the next page of results, if any
 * remaining results exist.
 */
export interface TriggerListResponse extends Array<TriggerResource> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the RerunTriggerListResponse class.
 * @constructor
 * A list of rerun triggers.
 *
 * @property {string} [nextLink] The continuation token for getting the next
 * page of results, if any remaining results exist, null otherwise.
 */
export interface RerunTriggerListResponse extends Array<RerunTriggerResource> {
  readonly nextLink?: string;
}
