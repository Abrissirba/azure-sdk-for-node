/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * The policy details.
 *
 */
class PolicyDetails {
  /**
   * Create a PolicyDetails.
   * @member {string} [policyDefinitionId] The ID of the policy definition.
   * @member {string} [policyAssignmentId] The ID of the policy assignment.
   * @member {string} [policyAssignmentDisplayName] The display name of the
   * policy assignment.
   * @member {string} [policyAssignmentScope] The scope of the policy
   * assignment.
   * @member {string} [policySetDefinitionId] The ID of the policy set
   * definition.
   * @member {string} [policyDefinitionReferenceId] The policy definition
   * reference ID within the policy set definition.
   */
  constructor() {
  }

  /**
   * Defines the metadata of PolicyDetails
   *
   * @returns {object} metadata of PolicyDetails
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'PolicyDetails',
      type: {
        name: 'Composite',
        className: 'PolicyDetails',
        modelProperties: {
          policyDefinitionId: {
            required: false,
            readOnly: true,
            serializedName: 'policyDefinitionId',
            type: {
              name: 'String'
            }
          },
          policyAssignmentId: {
            required: false,
            readOnly: true,
            serializedName: 'policyAssignmentId',
            type: {
              name: 'String'
            }
          },
          policyAssignmentDisplayName: {
            required: false,
            readOnly: true,
            serializedName: 'policyAssignmentDisplayName',
            type: {
              name: 'String'
            }
          },
          policyAssignmentScope: {
            required: false,
            readOnly: true,
            serializedName: 'policyAssignmentScope',
            type: {
              name: 'String'
            }
          },
          policySetDefinitionId: {
            required: false,
            readOnly: true,
            serializedName: 'policySetDefinitionId',
            type: {
              name: 'String'
            }
          },
          policyDefinitionReferenceId: {
            required: false,
            readOnly: true,
            serializedName: 'policyDefinitionReferenceId',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = PolicyDetails;
