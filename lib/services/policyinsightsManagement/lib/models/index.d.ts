/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { BaseResource } from 'ms-rest-azure';
import { CloudError } from 'ms-rest-azure';
import * as moment from 'moment';

export { BaseResource } from 'ms-rest-azure';
export { CloudError } from 'ms-rest-azure';


/**
 * @class
 * Initializes a new instance of the PolicyDetails class.
 * @constructor
 * The policy details.
 *
 * @member {string} [policyDefinitionId] The ID of the policy definition.
 * @member {string} [policyAssignmentId] The ID of the policy assignment.
 * @member {string} [policyAssignmentDisplayName] The display name of the
 * policy assignment.
 * @member {string} [policyAssignmentScope] The scope of the policy assignment.
 * @member {string} [policySetDefinitionId] The ID of the policy set
 * definition.
 * @member {string} [policyDefinitionReferenceId] The policy definition
 * reference ID within the policy set definition.
 */
export interface PolicyDetails {
  readonly policyDefinitionId?: string;
  readonly policyAssignmentId?: string;
  readonly policyAssignmentDisplayName?: string;
  readonly policyAssignmentScope?: string;
  readonly policySetDefinitionId?: string;
  readonly policyDefinitionReferenceId?: string;
}

/**
 * @class
 * Initializes a new instance of the TrackedResourceModificationDetails class.
 * @constructor
 * The details of the policy triggered deployment that created or modified the
 * tracked resource.
 *
 * @member {object} [policyDetails] The details of the policy that created or
 * modified the tracked resource.
 * @member {string} [policyDetails.policyDefinitionId] The ID of the policy
 * definition.
 * @member {string} [policyDetails.policyAssignmentId] The ID of the policy
 * assignment.
 * @member {string} [policyDetails.policyAssignmentDisplayName] The display
 * name of the policy assignment.
 * @member {string} [policyDetails.policyAssignmentScope] The scope of the
 * policy assignment.
 * @member {string} [policyDetails.policySetDefinitionId] The ID of the policy
 * set definition.
 * @member {string} [policyDetails.policyDefinitionReferenceId] The policy
 * definition reference ID within the policy set definition.
 * @member {string} [deploymentId] The ID of the deployment that created or
 * modified the tracked resource.
 * @member {date} [deploymentTime] Timestamp of the deployment that created or
 * modified the tracked resource.
 */
export interface TrackedResourceModificationDetails {
  readonly policyDetails?: PolicyDetails;
  readonly deploymentId?: string;
  readonly deploymentTime?: Date;
}

/**
 * @class
 * Initializes a new instance of the PolicyTrackedResource class.
 * @constructor
 * Policy tracked resource record.
 *
 * @member {string} [trackedResourceId] The ID of the policy tracked resource.
 * @member {object} [policyDetails] The details of the policy that require the
 * tracked resource.
 * @member {string} [policyDetails.policyDefinitionId] The ID of the policy
 * definition.
 * @member {string} [policyDetails.policyAssignmentId] The ID of the policy
 * assignment.
 * @member {string} [policyDetails.policyAssignmentDisplayName] The display
 * name of the policy assignment.
 * @member {string} [policyDetails.policyAssignmentScope] The scope of the
 * policy assignment.
 * @member {string} [policyDetails.policySetDefinitionId] The ID of the policy
 * set definition.
 * @member {string} [policyDetails.policyDefinitionReferenceId] The policy
 * definition reference ID within the policy set definition.
 * @member {object} [createdBy] The details of the policy triggered deployment
 * that created the tracked resource.
 * @member {object} [createdBy.policyDetails] The details of the policy that
 * created or modified the tracked resource.
 * @member {string} [createdBy.policyDetails.policyDefinitionId] The ID of the
 * policy definition.
 * @member {string} [createdBy.policyDetails.policyAssignmentId] The ID of the
 * policy assignment.
 * @member {string} [createdBy.policyDetails.policyAssignmentDisplayName] The
 * display name of the policy assignment.
 * @member {string} [createdBy.policyDetails.policyAssignmentScope] The scope
 * of the policy assignment.
 * @member {string} [createdBy.policyDetails.policySetDefinitionId] The ID of
 * the policy set definition.
 * @member {string} [createdBy.policyDetails.policyDefinitionReferenceId] The
 * policy definition reference ID within the policy set definition.
 * @member {string} [createdBy.deploymentId] The ID of the deployment that
 * created or modified the tracked resource.
 * @member {date} [createdBy.deploymentTime] Timestamp of the deployment that
 * created or modified the tracked resource.
 * @member {object} [lastModifiedBy] The details of the policy triggered
 * deployment that modified the tracked resource.
 * @member {object} [lastModifiedBy.policyDetails] The details of the policy
 * that created or modified the tracked resource.
 * @member {string} [lastModifiedBy.policyDetails.policyDefinitionId] The ID of
 * the policy definition.
 * @member {string} [lastModifiedBy.policyDetails.policyAssignmentId] The ID of
 * the policy assignment.
 * @member {string} [lastModifiedBy.policyDetails.policyAssignmentDisplayName]
 * The display name of the policy assignment.
 * @member {string} [lastModifiedBy.policyDetails.policyAssignmentScope] The
 * scope of the policy assignment.
 * @member {string} [lastModifiedBy.policyDetails.policySetDefinitionId] The ID
 * of the policy set definition.
 * @member {string} [lastModifiedBy.policyDetails.policyDefinitionReferenceId]
 * The policy definition reference ID within the policy set definition.
 * @member {string} [lastModifiedBy.deploymentId] The ID of the deployment that
 * created or modified the tracked resource.
 * @member {date} [lastModifiedBy.deploymentTime] Timestamp of the deployment
 * that created or modified the tracked resource.
 * @member {date} [lastUpdateUtc] Timestamp of the last update to the tracked
 * resource.
 */
export interface PolicyTrackedResource {
  readonly trackedResourceId?: string;
  readonly policyDetails?: PolicyDetails;
  readonly createdBy?: TrackedResourceModificationDetails;
  readonly lastModifiedBy?: TrackedResourceModificationDetails;
  readonly lastUpdateUtc?: Date;
}

/**
 * @class
 * Initializes a new instance of the QueryFailureError class.
 * @constructor
 * Error definition.
 *
 * @member {string} [code] Service specific error code which serves as the
 * substatus for the HTTP error code.
 * @member {string} [message] Description of the error.
 */
export interface QueryFailureError {
  readonly code?: string;
  readonly message?: string;
}

/**
 * @class
 * Initializes a new instance of the QueryFailure class.
 * @constructor
 * Error response.
 *
 * @member {object} [error] Error definition.
 * @member {string} [error.code] Service specific error code which serves as
 * the substatus for the HTTP error code.
 * @member {string} [error.message] Description of the error.
 */
export interface QueryFailure {
  error?: QueryFailureError;
}

/**
 * @class
 * Initializes a new instance of the RemediationFilters class.
 * @constructor
 * The filters that will be applied to determine which resources to remediate.
 *
 * @member {array} [locations] The resource locations that will be remediated.
 */
export interface RemediationFilters {
  locations?: string[];
}

/**
 * @class
 * Initializes a new instance of the RemediationDeploymentSummary class.
 * @constructor
 * The deployment status summary for all deplyoments created by the
 * remediation.
 *
 * @member {number} [totalDeployments] The number of deployments required by
 * the remediation.
 * @member {number} [successfulDeployments] The number of deployments required
 * by the remediation that have succeeded.
 * @member {number} [failedDeployments] The number of deployments required by
 * the remediation that have failed.
 */
export interface RemediationDeploymentSummary {
  totalDeployments?: number;
  successfulDeployments?: number;
  failedDeployments?: number;
}

/**
 * @class
 * Initializes a new instance of the Remediation class.
 * @constructor
 * The remediation definition.
 *
 * @member {string} [policyAssignmentId] The resource ID of the policy
 * assignment that should be remediated.
 * @member {string} [policyDefinitionReferenceId] The policy definition
 * reference ID of the individual definition that should be remediated.
 * Required when the policy assignment being remediated assigns a policy set
 * definition.
 * @member {string} [provisioningState] The status of the remediation.
 * @member {date} [createdOn] The time at which the remediation was created.
 * @member {date} [lastUpdatedOn] The time at which the remediation was last
 * updated.
 * @member {object} [filters] The filters that will be applied to determine
 * which resources to remediate.
 * @member {array} [filters.locations] The resource locations that will be
 * remediated.
 * @member {object} [deploymentStatus] The deployment status summary for all
 * deplyoments created by the remediation.
 * @member {number} [deploymentStatus.totalDeployments] The number of
 * deployments required by the remediation.
 * @member {number} [deploymentStatus.successfulDeployments] The number of
 * deployments required by the remediation that have succeeded.
 * @member {number} [deploymentStatus.failedDeployments] The number of
 * deployments required by the remediation that have failed.
 * @member {string} [id] The ID of the remediation.
 * @member {string} [type] The type of the remediation.
 * @member {string} [name] The name of the remediation.
 */
export interface Remediation extends BaseResource {
  policyAssignmentId?: string;
  policyDefinitionReferenceId?: string;
  readonly provisioningState?: string;
  readonly createdOn?: Date;
  readonly lastUpdatedOn?: Date;
  filters?: RemediationFilters;
  deploymentStatus?: RemediationDeploymentSummary;
  readonly id?: string;
  readonly type?: string;
  readonly name?: string;
}

/**
 * @class
 * Initializes a new instance of the TypedErrorInfo class.
 * @constructor
 * Scenario specific error details.
 *
 * @member {string} [type] The type of included error details.
 * @member {object} [info] The scenario specific error details.
 */
export interface TypedErrorInfo {
  readonly type?: string;
  readonly info?: any;
}

/**
 * @class
 * Initializes a new instance of the ErrorDefinition class.
 * @constructor
 * Error definition.
 *
 * @member {string} [code] Service specific error code which serves as the
 * substatus for the HTTP error code.
 * @member {string} [message] Description of the error.
 * @member {string} [target] The target of the error.
 * @member {array} [details] Internal error details.
 * @member {array} [additionalInfo] Additional scenario specific error details.
 */
export interface ErrorDefinition {
  readonly code?: string;
  readonly message?: string;
  readonly target?: string;
  readonly details?: ErrorDefinition[];
  readonly additionalInfo?: TypedErrorInfo[];
}

/**
 * @class
 * Initializes a new instance of the RemediationDeployment class.
 * @constructor
 * Details of a single deployment created by the remediation.
 *
 * @member {string} [remediatedResourceId] Resource ID of the resource that is
 * being remediated by the deployment.
 * @member {string} [deploymentId] Resource ID of the template deployment that
 * will remediate the resource.
 * @member {string} [status] Status of the remediation deployment.
 * @member {string} [resourceLocation] Location of the resource that is being
 * remediated.
 * @member {object} [error] Error encountered while remediated the resource.
 * @member {string} [error.code] Service specific error code which serves as
 * the substatus for the HTTP error code.
 * @member {string} [error.message] Description of the error.
 * @member {string} [error.target] The target of the error.
 * @member {array} [error.details] Internal error details.
 * @member {array} [error.additionalInfo] Additional scenario specific error
 * details.
 * @member {date} [createdOn] The time at which the remediation was created.
 * @member {date} [lastUpdatedOn] The time at which the remediation deployment
 * was last updated.
 */
export interface RemediationDeployment {
  readonly remediatedResourceId?: string;
  readonly deploymentId?: string;
  readonly status?: string;
  readonly resourceLocation?: string;
  readonly error?: ErrorDefinition;
  readonly createdOn?: Date;
  readonly lastUpdatedOn?: Date;
}

/**
 * @class
 * Initializes a new instance of the ErrorResponse class.
 * @constructor
 * Error response.
 *
 * @member {object} [error] The error details.
 * @member {string} [error.code] Service specific error code which serves as
 * the substatus for the HTTP error code.
 * @member {string} [error.message] Description of the error.
 * @member {string} [error.target] The target of the error.
 * @member {array} [error.details] Internal error details.
 * @member {array} [error.additionalInfo] Additional scenario specific error
 * details.
 */
export interface ErrorResponse {
  error?: ErrorDefinition;
}

/**
 * @class
 * Initializes a new instance of the PolicyEvent class.
 * @constructor
 * Policy event record.
 *
 * @member {string} [odataid] OData entity ID; always set to null since policy
 * event records do not have an entity ID.
 * @member {string} [odatacontext] OData context string; used by OData clients
 * to resolve type information based on metadata.
 * @member {date} [timestamp] Timestamp for the policy event record.
 * @member {string} [resourceId] Resource ID.
 * @member {string} [policyAssignmentId] Policy assignment ID.
 * @member {string} [policyDefinitionId] Policy definition ID.
 * @member {string} [effectiveParameters] Effective parameters for the policy
 * assignment.
 * @member {boolean} [isCompliant] Flag which states whether the resource is
 * compliant against the policy assignment it was evaluated against.
 * @member {string} [subscriptionId] Subscription ID.
 * @member {string} [resourceType] Resource type.
 * @member {string} [resourceLocation] Resource location.
 * @member {string} [resourceGroup] Resource group name.
 * @member {string} [resourceTags] List of resource tags.
 * @member {string} [policyAssignmentName] Policy assignment name.
 * @member {string} [policyAssignmentOwner] Policy assignment owner.
 * @member {string} [policyAssignmentParameters] Policy assignment parameters.
 * @member {string} [policyAssignmentScope] Policy assignment scope.
 * @member {string} [policyDefinitionName] Policy definition name.
 * @member {string} [policyDefinitionAction] Policy definition action, i.e.
 * effect.
 * @member {string} [policyDefinitionCategory] Policy definition category.
 * @member {string} [policySetDefinitionId] Policy set definition ID, if the
 * policy assignment is for a policy set.
 * @member {string} [policySetDefinitionName] Policy set definition name, if
 * the policy assignment is for a policy set.
 * @member {string} [policySetDefinitionOwner] Policy set definition owner, if
 * the policy assignment is for a policy set.
 * @member {string} [policySetDefinitionCategory] Policy set definition
 * category, if the policy assignment is for a policy set.
 * @member {string} [policySetDefinitionParameters] Policy set definition
 * parameters, if the policy assignment is for a policy set.
 * @member {string} [managementGroupIds] Comma seperated list of management
 * group IDs, which represent the hierarchy of the management groups the
 * resource is under.
 * @member {string} [policyDefinitionReferenceId] Reference ID for the policy
 * definition inside the policy set, if the policy assignment is for a policy
 * set.
 * @member {string} [tenantId] Tenant ID for the policy event record.
 * @member {string} [principalOid] Principal object ID for the user who
 * initiated the resource operation that triggered the policy event.
 */
export interface PolicyEvent {
  odataid?: string;
  odatacontext?: string;
  timestamp?: Date;
  resourceId?: string;
  policyAssignmentId?: string;
  policyDefinitionId?: string;
  effectiveParameters?: string;
  isCompliant?: boolean;
  subscriptionId?: string;
  resourceType?: string;
  resourceLocation?: string;
  resourceGroup?: string;
  resourceTags?: string;
  policyAssignmentName?: string;
  policyAssignmentOwner?: string;
  policyAssignmentParameters?: string;
  policyAssignmentScope?: string;
  policyDefinitionName?: string;
  policyDefinitionAction?: string;
  policyDefinitionCategory?: string;
  policySetDefinitionId?: string;
  policySetDefinitionName?: string;
  policySetDefinitionOwner?: string;
  policySetDefinitionCategory?: string;
  policySetDefinitionParameters?: string;
  managementGroupIds?: string;
  policyDefinitionReferenceId?: string;
  tenantId?: string;
  principalOid?: string;
  /**
   * @property Describes unknown properties. The value of an unknown property
   * can be of "any" type.
   */
  [property: string]: any;
}

/**
 * @class
 * Initializes a new instance of the PolicyEventsQueryResults class.
 * @constructor
 * Query results.
 *
 * @member {string} [odatacontext] OData context string; used by OData clients
 * to resolve type information based on metadata.
 * @member {number} [odatacount] OData entity count; represents the number of
 * policy event records returned.
 * @member {array} [value] Query results.
 */
export interface PolicyEventsQueryResults {
  odatacontext?: string;
  odatacount?: number;
  value?: PolicyEvent[];
}

/**
 * @class
 * Initializes a new instance of the PolicyState class.
 * @constructor
 * Policy state record.
 *
 * @member {string} [odataid] OData entity ID; always set to null since policy
 * state records do not have an entity ID.
 * @member {string} [odatacontext] OData context string; used by OData clients
 * to resolve type information based on metadata.
 * @member {date} [timestamp] Timestamp for the policy state record.
 * @member {string} [resourceId] Resource ID.
 * @member {string} [policyAssignmentId] Policy assignment ID.
 * @member {string} [policyDefinitionId] Policy definition ID.
 * @member {string} [effectiveParameters] Effective parameters for the policy
 * assignment.
 * @member {boolean} [isCompliant] Flag which states whether the resource is
 * compliant against the policy assignment it was evaluated against.
 * @member {string} [subscriptionId] Subscription ID.
 * @member {string} [resourceType] Resource type.
 * @member {string} [resourceLocation] Resource location.
 * @member {string} [resourceGroup] Resource group name.
 * @member {string} [resourceTags] List of resource tags.
 * @member {string} [policyAssignmentName] Policy assignment name.
 * @member {string} [policyAssignmentOwner] Policy assignment owner.
 * @member {string} [policyAssignmentParameters] Policy assignment parameters.
 * @member {string} [policyAssignmentScope] Policy assignment scope.
 * @member {string} [policyDefinitionName] Policy definition name.
 * @member {string} [policyDefinitionAction] Policy definition action, i.e.
 * effect.
 * @member {string} [policyDefinitionCategory] Policy definition category.
 * @member {string} [policySetDefinitionId] Policy set definition ID, if the
 * policy assignment is for a policy set.
 * @member {string} [policySetDefinitionName] Policy set definition name, if
 * the policy assignment is for a policy set.
 * @member {string} [policySetDefinitionOwner] Policy set definition owner, if
 * the policy assignment is for a policy set.
 * @member {string} [policySetDefinitionCategory] Policy set definition
 * category, if the policy assignment is for a policy set.
 * @member {string} [policySetDefinitionParameters] Policy set definition
 * parameters, if the policy assignment is for a policy set.
 * @member {string} [managementGroupIds] Comma seperated list of management
 * group IDs, which represent the hierarchy of the management groups the
 * resource is under.
 * @member {string} [policyDefinitionReferenceId] Reference ID for the policy
 * definition inside the policy set, if the policy assignment is for a policy
 * set.
 */
export interface PolicyState {
  odataid?: string;
  odatacontext?: string;
  timestamp?: Date;
  resourceId?: string;
  policyAssignmentId?: string;
  policyDefinitionId?: string;
  effectiveParameters?: string;
  isCompliant?: boolean;
  subscriptionId?: string;
  resourceType?: string;
  resourceLocation?: string;
  resourceGroup?: string;
  resourceTags?: string;
  policyAssignmentName?: string;
  policyAssignmentOwner?: string;
  policyAssignmentParameters?: string;
  policyAssignmentScope?: string;
  policyDefinitionName?: string;
  policyDefinitionAction?: string;
  policyDefinitionCategory?: string;
  policySetDefinitionId?: string;
  policySetDefinitionName?: string;
  policySetDefinitionOwner?: string;
  policySetDefinitionCategory?: string;
  policySetDefinitionParameters?: string;
  managementGroupIds?: string;
  policyDefinitionReferenceId?: string;
  /**
   * @property Describes unknown properties. The value of an unknown property
   * can be of "any" type.
   */
  [property: string]: any;
}

/**
 * @class
 * Initializes a new instance of the PolicyStatesQueryResults class.
 * @constructor
 * Query results.
 *
 * @member {string} [odatacontext] OData context string; used by OData clients
 * to resolve type information based on metadata.
 * @member {number} [odatacount] OData entity count; represents the number of
 * policy state records returned.
 * @member {array} [value] Query results.
 */
export interface PolicyStatesQueryResults {
  odatacontext?: string;
  odatacount?: number;
  value?: PolicyState[];
}

/**
 * @class
 * Initializes a new instance of the SummaryResults class.
 * @constructor
 * Non-compliance summary on a particular summary level.
 *
 * @member {string} [queryResultsUri] HTTP POST URI for queryResults action on
 * Microsoft.PolicyInsights to retrieve raw results for the non-compliance
 * summary.
 * @member {number} [nonCompliantResources] Number of non-compliant resources.
 * @member {number} [nonCompliantPolicies] Number of non-compliant policies.
 */
export interface SummaryResults {
  queryResultsUri?: string;
  nonCompliantResources?: number;
  nonCompliantPolicies?: number;
}

/**
 * @class
 * Initializes a new instance of the PolicyDefinitionSummary class.
 * @constructor
 * Policy definition summary.
 *
 * @member {string} [policyDefinitionId] Policy definition ID.
 * @member {string} [policyDefinitionReferenceId] Policy definition reference
 * ID.
 * @member {string} [effect] Policy effect, i.e. policy definition action.
 * @member {object} [results] Non-compliance summary for the policy definition.
 * @member {string} [results.queryResultsUri] HTTP POST URI for queryResults
 * action on Microsoft.PolicyInsights to retrieve raw results for the
 * non-compliance summary.
 * @member {number} [results.nonCompliantResources] Number of non-compliant
 * resources.
 * @member {number} [results.nonCompliantPolicies] Number of non-compliant
 * policies.
 */
export interface PolicyDefinitionSummary {
  policyDefinitionId?: string;
  policyDefinitionReferenceId?: string;
  effect?: string;
  results?: SummaryResults;
}

/**
 * @class
 * Initializes a new instance of the PolicyAssignmentSummary class.
 * @constructor
 * Policy assignment summary.
 *
 * @member {string} [policyAssignmentId] Policy assignment ID.
 * @member {string} [policySetDefinitionId] Policy set definition ID, if the
 * policy assignment is for a policy set.
 * @member {object} [results] Non-compliance summary for the policy assignment.
 * @member {string} [results.queryResultsUri] HTTP POST URI for queryResults
 * action on Microsoft.PolicyInsights to retrieve raw results for the
 * non-compliance summary.
 * @member {number} [results.nonCompliantResources] Number of non-compliant
 * resources.
 * @member {number} [results.nonCompliantPolicies] Number of non-compliant
 * policies.
 * @member {array} [policyDefinitions] Policy definitions summary.
 */
export interface PolicyAssignmentSummary {
  policyAssignmentId?: string;
  policySetDefinitionId?: string;
  results?: SummaryResults;
  policyDefinitions?: PolicyDefinitionSummary[];
}

/**
 * @class
 * Initializes a new instance of the Summary class.
 * @constructor
 * Summary results.
 *
 * @member {string} [odataid] OData entity ID; always set to null since
 * summaries do not have an entity ID.
 * @member {string} [odatacontext] OData context string; used by OData clients
 * to resolve type information based on metadata.
 * @member {object} [results] Non-compliance summary for all policy
 * assignments.
 * @member {string} [results.queryResultsUri] HTTP POST URI for queryResults
 * action on Microsoft.PolicyInsights to retrieve raw results for the
 * non-compliance summary.
 * @member {number} [results.nonCompliantResources] Number of non-compliant
 * resources.
 * @member {number} [results.nonCompliantPolicies] Number of non-compliant
 * policies.
 * @member {array} [policyAssignments] Policy assignments summary.
 */
export interface Summary {
  odataid?: string;
  odatacontext?: string;
  results?: SummaryResults;
  policyAssignments?: PolicyAssignmentSummary[];
}

/**
 * @class
 * Initializes a new instance of the SummarizeResults class.
 * @constructor
 * Summarize action results.
 *
 * @member {string} [odatacontext] OData context string; used by OData clients
 * to resolve type information based on metadata.
 * @member {number} [odatacount] OData entity count; represents the number of
 * summaries returned; always set to 1.
 * @member {array} [value] Summarize action results.
 */
export interface SummarizeResults {
  odatacontext?: string;
  odatacount?: number;
  value?: Summary[];
}

/**
 * @class
 * Initializes a new instance of the OperationDisplay class.
 * @constructor
 * Display metadata associated with the operation.
 *
 * @member {string} [provider] Resource provider name.
 * @member {string} [resource] Resource name on which the operation is
 * performed.
 * @member {string} [operation] Operation name.
 * @member {string} [description] Operation description.
 */
export interface OperationDisplay {
  provider?: string;
  resource?: string;
  operation?: string;
  description?: string;
}

/**
 * @class
 * Initializes a new instance of the Operation class.
 * @constructor
 * Operation definition.
 *
 * @member {string} [name] Operation name.
 * @member {object} [display] Display metadata associated with the operation.
 * @member {string} [display.provider] Resource provider name.
 * @member {string} [display.resource] Resource name on which the operation is
 * performed.
 * @member {string} [display.operation] Operation name.
 * @member {string} [display.description] Operation description.
 */
export interface Operation {
  name?: string;
  display?: OperationDisplay;
}

/**
 * @class
 * Initializes a new instance of the OperationsListResults class.
 * @constructor
 * List of available operations.
 *
 * @member {number} [odatacount] OData entity count; represents the number of
 * operations returned.
 * @member {array} [value] List of available operations.
 */
export interface OperationsListResults {
  odatacount?: number;
  value?: Operation[];
}

/**
 * @class
 * Initializes a new instance of the QueryOptions class.
 * @constructor
 * Additional parameters for a set of operations.
 *
 * @member {number} [top] Maximum number of records to return.
 * @member {string} [filter] OData filter expression.
 * @member {string} [orderBy] Ordering expression using OData notation. One or
 * more comma-separated column names with an optional "desc" (the default) or
 * "asc", e.g. "$orderby=PolicyAssignmentId, ResourceId asc".
 * @member {string} [select] Select expression using OData notation. Limits the
 * columns on each record to just those requested, e.g.
 * "$select=PolicyAssignmentId, ResourceId".
 * @member {date} [from] ISO 8601 formatted timestamp specifying the start time
 * of the interval to query. When not specified, the service uses ($to -
 * 1-day).
 * @member {date} [to] ISO 8601 formatted timestamp specifying the end time of
 * the interval to query. When not specified, the service uses request time.
 * @member {string} [apply] OData apply expression for aggregations.
 */
export interface QueryOptions {
  top?: number;
  filter?: string;
  orderBy?: string;
  select?: string;
  from?: Date;
  to?: Date;
  apply?: string;
}


/**
 * @class
 * Initializes a new instance of the PolicyTrackedResourcesQueryResults class.
 * @constructor
 * Query results.
 *
 * @member {string} [nextLink] The URL to get the next set of results.
 */
export interface PolicyTrackedResourcesQueryResults extends Array<PolicyTrackedResource> {
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the RemediationDeploymentsListResult class.
 * @constructor
 * List of deployments for a remediation.
 *
 * @member {string} [nextLink] The URL to get the next set of results.
 */
export interface RemediationDeploymentsListResult extends Array<RemediationDeployment> {
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the RemediationListResult class.
 * @constructor
 * List of remediations.
 *
 * @member {string} [nextLink] The URL to get the next set of results.
 */
export interface RemediationListResult extends Array<Remediation> {
  readonly nextLink?: string;
}
