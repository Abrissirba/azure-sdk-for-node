/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as moment from "moment";


/**
 * @class
 * Initializes a new instance of the KeyValuePair class.
 * @constructor
 * The key value pair object properties.
 *
 * @property {string} [key] The key parameter.
 * @property {string} [value] The value parameter.
 */
export interface KeyValuePair {
  key?: string;
  value?: string;
}

/**
 * @class
 * Initializes a new instance of the Tag class.
 * @constructor
 * Tag details.
 *
 * @property {string} [key] The key parameter.
 * @property {string} [value] The value parameter.
 */
export interface Tag {
  key?: string;
  value?: string;
}

/**
 * @class
 * Initializes a new instance of the Frame class.
 * @constructor
 * Video frame property details.
 *
 * @property {string} [timestamp] Timestamp of the frame.
 * @property {string} [frameImage] Frame image.
 * @property {array} [metadata] Array of KeyValue.
 * @property {array} [reviewerResultTags] Reviewer result tags.
 */
export interface Frame {
  timestamp?: string;
  frameImage?: string;
  metadata?: KeyValuePair[];
  reviewerResultTags?: Tag[];
}

/**
 * @class
 * Initializes a new instance of the Frames class.
 * @constructor
 * The response for a Get Frames request.
 *
 * @property {string} [reviewId] Id of the review.
 * @property {array} [videoFrames]
 */
export interface Frames {
  reviewId?: string;
  videoFrames?: Frame[];
}

/**
 * @class
 * Initializes a new instance of the ClassificationCategory1 class.
 * @constructor
 * The category1 score details of the text. <a
 * href="https://aka.ms/textClassifyCategories">Click here</a> for more details
 * on category classification.
 *
 * @property {number} [score] The category1 score.
 */
export interface ClassificationCategory1 {
  score?: number;
}

/**
 * @class
 * Initializes a new instance of the ClassificationCategory2 class.
 * @constructor
 * The category2 score details of the text. <a
 * href="https://aka.ms/textClassifyCategories">Click here</a> for more details
 * on category classification.
 *
 * @property {number} [score] The category2 score.
 */
export interface ClassificationCategory2 {
  score?: number;
}

/**
 * @class
 * Initializes a new instance of the ClassificationCategory3 class.
 * @constructor
 * The category3 score details of the text. <a
 * href="https://aka.ms/textClassifyCategories">Click here</a> for more details
 * on category classification.
 *
 * @property {number} [score] The category3 score.
 */
export interface ClassificationCategory3 {
  score?: number;
}

/**
 * @class
 * Initializes a new instance of the Classification class.
 * @constructor
 * The classification details of the text.
 *
 * @property {object} [category1] The category1 score details of the text. <a
 * href="https://aka.ms/textClassifyCategories">Click here</a> for more details
 * on category classification.
 * @property {number} [category1.score] The category1 score.
 * @property {object} [category2] The category2 score details of the text. <a
 * href="https://aka.ms/textClassifyCategories">Click here</a> for more details
 * on category classification.
 * @property {number} [category2.score] The category2 score.
 * @property {object} [category3] The category3 score details of the text. <a
 * href="https://aka.ms/textClassifyCategories">Click here</a> for more details
 * on category classification.
 * @property {number} [category3.score] The category3 score.
 * @property {boolean} [reviewRecommended] The review recommended flag.
 */
export interface Classification {
  category1?: ClassificationCategory1;
  category2?: ClassificationCategory2;
  category3?: ClassificationCategory3;
  reviewRecommended?: boolean;
}

/**
 * @class
 * Initializes a new instance of the Status class.
 * @constructor
 * Status properties.
 *
 * @property {number} [code] Status code.
 * @property {string} [description] Status description.
 * @property {string} [exception] Exception status.
 */
export interface Status {
  code?: number;
  description?: string;
  exception?: string;
}

/**
 * @class
 * Initializes a new instance of the Email class.
 * @constructor
 * Email Address details.
 *
 * @property {string} [detected] Detected Email Address from the input text
 * content.
 * @property {string} [subType] Subtype of the detected Email Address.
 * @property {string} [text] Email Address in the input text content.
 * @property {number} [index] Index(Location) of the Email address in the input
 * text content.
 */
export interface Email {
  detected?: string;
  subType?: string;
  text?: string;
  index?: number;
}

/**
 * @class
 * Initializes a new instance of the SSN class.
 * @constructor
 * Detected SSN details.
 *
 * @property {string} [text] Detected SSN in the input text content.
 * @property {number} [index] Index(Location) of the SSN in the input text
 * content.
 */
export interface SSN {
  text?: string;
  index?: number;
}

/**
 * @class
 * Initializes a new instance of the IPA class.
 * @constructor
 * IP Address details.
 *
 * @property {string} [subType] Subtype of the detected IP Address.
 * @property {string} [text] Detected IP Address.
 * @property {number} [index] Index(Location) of the IP Address in the input
 * text content.
 */
export interface IPA {
  subType?: string;
  text?: string;
  index?: number;
}

/**
 * @class
 * Initializes a new instance of the Phone class.
 * @constructor
 * Phone Property details.
 *
 * @property {string} [countryCode] CountryCode of the detected Phone number.
 * @property {string} [text] Detected Phone number.
 * @property {number} [index] Index(Location) of the Phone number in the input
 * text content.
 */
export interface Phone {
  countryCode?: string;
  text?: string;
  index?: number;
}

/**
 * @class
 * Initializes a new instance of the Address class.
 * @constructor
 * Address details.
 *
 * @property {string} [text] Detected Address.
 * @property {number} [index] Index(Location) of the Address in the input text
 * content.
 */
export interface Address {
  text?: string;
  index?: number;
}

/**
 * @class
 * Initializes a new instance of the PII class.
 * @constructor
 * Personal Identifier Information details.
 *
 * @property {array} [email]
 * @property {array} [sSN]
 * @property {array} [iPA]
 * @property {array} [phone]
 * @property {array} [address]
 */
export interface PII {
  email?: Email[];
  sSN?: SSN[];
  iPA?: IPA[];
  phone?: Phone[];
  address?: Address[];
}

/**
 * @class
 * Initializes a new instance of the DetectedTerms class.
 * @constructor
 * Detected Terms details.
 *
 * @property {number} [index] Index(Location) of the detected profanity term in
 * the input text content.
 * @property {number} [originalIndex] Original Index(Location) of the detected
 * profanity term in the input text content.
 * @property {number} [listId] Matched Terms list Id.
 * @property {string} [term] Detected profanity term.
 */
export interface DetectedTerms {
  index?: number;
  originalIndex?: number;
  listId?: number;
  term?: string;
}

/**
 * @class
 * Initializes a new instance of the Screen class.
 * @constructor
 * The response for a Screen text request.
 *
 * @property {string} [originalText] The original text.
 * @property {string} [normalizedText] The normalized text.
 * @property {string} [autoCorrectedText] The autocorrected text
 * @property {array} [misrepresentation] The misrepresentation text.
 * @property {object} [classification] The classification details of the text.
 * @property {object} [classification.category1] The category1 score details of
 * the text. <a href="https://aka.ms/textClassifyCategories">Click here</a> for
 * more details on category classification.
 * @property {number} [classification.category1.score] The category1 score.
 * @property {object} [classification.category2] The category2 score details of
 * the text. <a href="https://aka.ms/textClassifyCategories">Click here</a> for
 * more details on category classification.
 * @property {number} [classification.category2.score] The category2 score.
 * @property {object} [classification.category3] The category3 score details of
 * the text. <a href="https://aka.ms/textClassifyCategories">Click here</a> for
 * more details on category classification.
 * @property {number} [classification.category3.score] The category3 score.
 * @property {boolean} [classification.reviewRecommended] The review
 * recommended flag.
 * @property {object} [status] The evaluate status.
 * @property {number} [status.code] Status code.
 * @property {string} [status.description] Status description.
 * @property {string} [status.exception] Exception status.
 * @property {object} [pII] Personal Identifier Information details.
 * @property {array} [pII.email]
 * @property {array} [pII.sSN]
 * @property {array} [pII.iPA]
 * @property {array} [pII.phone]
 * @property {array} [pII.address]
 * @property {string} [language] Language of the input text content.
 * @property {array} [terms]
 * @property {string} [trackingId] Unique Content Moderator transaction Id.
 */
export interface Screen {
  originalText?: string;
  normalizedText?: string;
  autoCorrectedText?: string;
  misrepresentation?: string[];
  classification?: Classification;
  status?: Status;
  pII?: PII;
  language?: string;
  terms?: DetectedTerms[];
  trackingId?: string;
}

/**
 * @class
 * Initializes a new instance of the Face class.
 * @constructor
 * Coordinates to the found face.
 *
 * @property {number} [bottom] The bottom coordinate.
 * @property {number} [left] The left coordinate.
 * @property {number} [right] The right coordinate.
 * @property {number} [top] The top coordinate.
 */
export interface Face {
  bottom?: number;
  left?: number;
  right?: number;
  top?: number;
}

/**
 * @class
 * Initializes a new instance of the FoundFaces class.
 * @constructor
 * Request object the contains found faces.
 *
 * @property {object} [status] The evaluate status
 * @property {number} [status.code] Status code.
 * @property {string} [status.description] Status description.
 * @property {string} [status.exception] Exception status.
 * @property {string} [trackingId] The tracking id.
 * @property {string} [cacheId] The cache id.
 * @property {boolean} [result] True if result was found.
 * @property {number} [count] Number of faces found.
 * @property {array} [advancedInfo] The advanced info.
 * @property {array} [faces] The list of faces.
 */
export interface FoundFaces {
  status?: Status;
  trackingId?: string;
  cacheId?: string;
  result?: boolean;
  count?: number;
  advancedInfo?: KeyValuePair[];
  faces?: Face[];
}

/**
 * @class
 * Initializes a new instance of the Candidate class.
 * @constructor
 * OCR candidate text.
 *
 * @property {string} [text] The text found.
 * @property {number} [confidence] The confidence level.
 */
export interface Candidate {
  text?: string;
  confidence?: number;
}

/**
 * @class
 * Initializes a new instance of the OCR class.
 * @constructor
 * Contains the text found in image for the language specified.
 *
 * @property {object} [status] The evaluate status
 * @property {number} [status.code] Status code.
 * @property {string} [status.description] Status description.
 * @property {string} [status.exception] Exception status.
 * @property {array} [metadata] Array of KeyValue.
 * @property {string} [trackingId] The tracking id.
 * @property {string} [cacheId] The cache id.
 * @property {string} [language] The ISO 639-3 code.
 * @property {string} [text] The found text.
 * @property {array} [candidates] The list of candidate text.
 */
export interface OCR {
  status?: Status;
  metadata?: KeyValuePair[];
  trackingId?: string;
  cacheId?: string;
  language?: string;
  text?: string;
  candidates?: Candidate[];
}

/**
 * @class
 * Initializes a new instance of the Evaluate class.
 * @constructor
 * Evaluate response object.
 *
 * @property {string} [cacheID] The cache id.
 * @property {boolean} [result] Evaluate result.
 * @property {string} [trackingId] The tracking id.
 * @property {number} [adultClassificationScore] The adult classification
 * score.
 * @property {boolean} [isImageAdultClassified] Indicates if an image is
 * classified as adult.
 * @property {number} [racyClassificationScore] The racy classication score.
 * @property {boolean} [isImageRacyClassified] Indicates if the image is
 * classified as racy.
 * @property {array} [advancedInfo] The advanced info.
 * @property {object} [status] The evaluate status
 * @property {number} [status.code] Status code.
 * @property {string} [status.description] Status description.
 * @property {string} [status.exception] Exception status.
 */
export interface Evaluate {
  cacheID?: string;
  result?: boolean;
  trackingId?: string;
  adultClassificationScore?: number;
  isImageAdultClassified?: boolean;
  racyClassificationScore?: number;
  isImageRacyClassified?: boolean;
  advancedInfo?: KeyValuePair[];
  status?: Status;
}

/**
 * @class
 * Initializes a new instance of the Match class.
 * @constructor
 * The match details.
 *
 * @property {number} [score] Confidence score of the image match.
 * @property {number} [matchId] The match id.
 * @property {string} [source] The source.
 * @property {array} [tags] The tags for match details.
 * @property {string} [label] The label.
 */
export interface Match {
  score?: number;
  matchId?: number;
  source?: string;
  tags?: number[];
  label?: string;
}

/**
 * @class
 * Initializes a new instance of the MatchResponse class.
 * @constructor
 * The response for a Match request.
 *
 * @property {string} [trackingId] The tracking id.
 * @property {string} [cacheID] The cache id.
 * @property {boolean} [isMatch] Indicates if there is a match.
 * @property {array} [matches] The match details.
 * @property {object} [status] The evaluate status
 * @property {number} [status.code] Status code.
 * @property {string} [status.description] Status description.
 * @property {string} [status.exception] Exception status.
 */
export interface MatchResponse {
  trackingId?: string;
  cacheID?: string;
  isMatch?: boolean;
  matches?: Match[];
  status?: Status;
}

/**
 * @class
 * Initializes a new instance of the DetectedLanguage class.
 * @constructor
 * Detect language result.
 *
 * @property {string} [detectedLanguage] The detected language.
 * @property {object} [status] The detect language status
 * @property {number} [status.code] Status code.
 * @property {string} [status.description] Status description.
 * @property {string} [status.exception] Exception status.
 * @property {string} [trackingId] The tracking id.
 */
export interface DetectedLanguage {
  detectedLanguage?: string;
  status?: Status;
  trackingId?: string;
}

/**
 * @class
 * Initializes a new instance of the ImageList class.
 * @constructor
 * Image List Properties.
 *
 * @property {number} [id] Image List Id.
 * @property {string} [name] Image List Name.
 * @property {string} [description] Description for image list.
 * @property {object} [metadata] Image List Metadata.
 */
export interface ImageList {
  id?: number;
  name?: string;
  description?: string;
  metadata?: { [propertyName: string]: string };
}

/**
 * @class
 * Initializes a new instance of the TermList class.
 * @constructor
 * Term List  Properties.
 *
 * @property {number} [id] Term list Id.
 * @property {string} [name] Term list name.
 * @property {string} [description] Description for term list.
 * @property {object} [metadata] Term list metadata.
 */
export interface TermList {
  id?: number;
  name?: string;
  description?: string;
  metadata?: { [propertyName: string]: string };
}

/**
 * @class
 * Initializes a new instance of the RefreshIndex class.
 * @constructor
 * Refresh Index Response.
 *
 * @property {string} [contentSourceId] Content source Id.
 * @property {boolean} [isUpdateSuccess] Update success status.
 * @property {array} [advancedInfo] Advanced info list.
 * @property {object} [status] Refresh index status.
 * @property {number} [status.code] Status code.
 * @property {string} [status.description] Status description.
 * @property {string} [status.exception] Exception status.
 * @property {string} [trackingId] Tracking Id.
 */
export interface RefreshIndex {
  contentSourceId?: string;
  isUpdateSuccess?: boolean;
  advancedInfo?: { [propertyName: string]: string }[];
  status?: Status;
  trackingId?: string;
}

/**
 * @class
 * Initializes a new instance of the ImageAdditionalInfoItem class.
 * @constructor
 * @property {string} [key] Key parameter.
 * @property {string} [value] Value parameter.
 */
export interface ImageAdditionalInfoItem {
  key?: string;
  value?: string;
}

/**
 * @class
 * Initializes a new instance of the Image class.
 * @constructor
 * Image Properties.
 *
 * @property {string} [contentId] Content Id.
 * @property {array} [additionalInfo] Advanced info list.
 * @property {object} [status] Status details.
 * @property {number} [status.code] Status code.
 * @property {string} [status.description] Status description.
 * @property {string} [status.exception] Exception status.
 * @property {string} [trackingId] Tracking Id.
 */
export interface Image {
  contentId?: string;
  additionalInfo?: ImageAdditionalInfoItem[];
  status?: Status;
  trackingId?: string;
}

/**
 * @class
 * Initializes a new instance of the ImageIds class.
 * @constructor
 * Image Id properties.
 *
 * @property {string} [contentSource] Source of the content.
 * @property {array} [contentIds] Id of the contents.
 * @property {object} [status] Get Image status.
 * @property {number} [status.code] Status code.
 * @property {string} [status.description] Status description.
 * @property {string} [status.exception] Exception status.
 * @property {string} [trackingId] Tracking Id.
 */
export interface ImageIds {
  contentSource?: string;
  contentIds?: number[];
  status?: Status;
  trackingId?: string;
}

/**
 * @class
 * Initializes a new instance of the TermsInList class.
 * @constructor
 * Terms in list Id passed.
 *
 * @property {string} [term] Added term details.
 */
export interface TermsInList {
  term?: string;
}

/**
 * @class
 * Initializes a new instance of the TermsData class.
 * @constructor
 * All term Id response properties.
 *
 * @property {string} [language] Language of the terms.
 * @property {array} [terms] List of terms.
 * @property {object} [status] Term Status.
 * @property {number} [status.code] Status code.
 * @property {string} [status.description] Status description.
 * @property {string} [status.exception] Exception status.
 * @property {string} [trackingId] Tracking Id.
 */
export interface TermsData {
  language?: string;
  terms?: TermsInList[];
  status?: Status;
  trackingId?: string;
}

/**
 * @class
 * Initializes a new instance of the TermsPaging class.
 * @constructor
 * Paging details.
 *
 * @property {number} [total] Total details.
 * @property {number} [limit] Limit details.
 * @property {number} [offset] Offset details.
 * @property {number} [returned] Returned text details.
 */
export interface TermsPaging {
  total?: number;
  limit?: number;
  offset?: number;
  returned?: number;
}

/**
 * @class
 * Initializes a new instance of the Terms class.
 * @constructor
 * Terms properties.
 *
 * @property {object} [data] Term data details.
 * @property {string} [data.language] Language of the terms.
 * @property {array} [data.terms] List of terms.
 * @property {object} [data.status] Term Status.
 * @property {number} [data.status.code] Status code.
 * @property {string} [data.status.description] Status description.
 * @property {string} [data.status.exception] Exception status.
 * @property {string} [data.trackingId] Tracking Id.
 * @property {object} [paging] Paging details.
 * @property {number} [paging.total] Total details.
 * @property {number} [paging.limit] Limit details.
 * @property {number} [paging.offset] Offset details.
 * @property {number} [paging.returned] Returned text details.
 */
export interface Terms {
  data?: TermsData;
  paging?: TermsPaging;
}

/**
 * @class
 * Initializes a new instance of the Review class.
 * @constructor
 * The Review object.
 *
 * @property {string} [reviewId] Id of the review.
 * @property {string} [subTeam] Name of the subteam.
 * @property {string} [status] The status string (<Pending, Complete>).
 * @property {array} [reviewerResultTags] Array of KeyValue with Reviewer set
 * Tags.
 * @property {string} [createdBy] The reviewer name.
 * @property {array} [metadata] Array of KeyValue.
 * @property {string} [type] The type of content.
 * @property {string} [content] The content value.
 * @property {string} [contentId] Id of the content.
 * @property {string} [callbackEndpoint] The callback endpoint.
 */
export interface Review {
  reviewId?: string;
  subTeam?: string;
  status?: string;
  reviewerResultTags?: KeyValuePair[];
  createdBy?: string;
  metadata?: KeyValuePair[];
  type?: string;
  content?: string;
  contentId?: string;
  callbackEndpoint?: string;
}

/**
 * @class
 * Initializes a new instance of the JobExecutionReportDetails class.
 * @constructor
 * Job Execution Report Values.
 *
 * @property {string} [ts] Time details.
 * @property {string} [msg] Message details.
 */
export interface JobExecutionReportDetails {
  ts?: string;
  msg?: string;
}

/**
 * @class
 * Initializes a new instance of the Job class.
 * @constructor
 * The Job object.
 *
 * @property {string} [id] The job id.
 * @property {string} [teamName] The team name associated with the job.
 * @property {string} [status] The status string (<Pending, Failed,
 * Completed>).
 * @property {string} [workflowId] The Id of the workflow.
 * @property {string} [type] Type of the content.
 * @property {string} [callBackEndpoint] The callback endpoint.
 * @property {string} [reviewId] Review Id if one is created.
 * @property {array} [resultMetaData] Array of KeyValue pairs.
 * @property {array} [jobExecutionReport] Job execution report- Array of
 * KeyValue pairs object.
 */
export interface Job {
  id?: string;
  teamName?: string;
  status?: string;
  workflowId?: string;
  type?: string;
  callBackEndpoint?: string;
  reviewId?: string;
  resultMetaData?: KeyValuePair[];
  jobExecutionReport?: JobExecutionReportDetails[];
}

/**
 * @class
 * Initializes a new instance of the JobListResult class.
 * @constructor
 * The list of job ids.
 *
 * @property {array} [value] The job id.
 */
export interface JobListResult {
  value?: string[];
}

/**
 * @class
 * Initializes a new instance of the JobId class.
 * @constructor
 * @property {string} [jobId] Id of the created job.
 */
export interface JobId {
  jobId?: string;
}

/**
 * @class
 * Initializes a new instance of the ErrorModel class.
 * @constructor
 * Error body.
 *
 * @property {string} [code]
 * @property {string} [message]
 */
export interface ErrorModel {
  code?: string;
  message?: string;
}

/**
 * @class
 * Initializes a new instance of the APIError class.
 * @constructor
 * Error information returned by the API
 *
 * @property {object} [error]
 * @property {string} [error.code]
 * @property {string} [error.message]
 */
export interface APIError {
  error?: ErrorModel;
}

/**
 * @class
 * Initializes a new instance of the Body class.
 * @constructor
 * @property {string} [name] Name of the list.
 * @property {string} [description] Description of the list.
 * @property {object} [metadata] Metadata of the list.
 */
export interface Body {
  name?: string;
  description?: string;
  metadata?: { [propertyName: string]: string };
}

/**
 * @class
 * Initializes a new instance of the CreateReviewBodyItemMetadataItem class.
 * @constructor
 * @property {string} key Your key parameter.
 * @property {string} value Your value parameter.
 */
export interface CreateReviewBodyItemMetadataItem {
  key: string;
  value: string;
}

/**
 * @class
 * Initializes a new instance of the CreateReviewBodyItem class.
 * @constructor
 * Schema items of the body.
 *
 * @property {string} type Type of the content. Possible values include:
 * 'Image', 'Text'
 * @property {string} content Content to review.
 * @property {string} contentId Content Identifier.
 * @property {string} [callbackEndpoint] Optional CallbackEndpoint.
 * @property {array} [metadata] Optional metadata details.
 */
export interface CreateReviewBodyItem {
  type: string;
  content: string;
  contentId: string;
  callbackEndpoint?: string;
  metadata?: CreateReviewBodyItemMetadataItem[];
}

/**
 * @class
 * Initializes a new instance of the Content class.
 * @constructor
 * @property {string} contentValue Content to evaluate for a job.
 */
export interface Content {
  contentValue: string;
}

/**
 * @class
 * Initializes a new instance of the TranscriptModerationBodyItemTermsItem class.
 * @constructor
 * @property {number} index Index of the word
 * @property {string} term Detected word.
 */
export interface TranscriptModerationBodyItemTermsItem {
  index: number;
  term: string;
}

/**
 * @class
 * Initializes a new instance of the TranscriptModerationBodyItem class.
 * @constructor
 * Schema items of the body.
 *
 * @property {string} timestamp Timestamp of the image.
 * @property {array} terms Optional metadata details.
 */
export interface TranscriptModerationBodyItem {
  timestamp: string;
  terms: TranscriptModerationBodyItemTermsItem[];
}

/**
 * @class
 * Initializes a new instance of the BodyModel class.
 * @constructor
 * @property {string} [dataRepresentation] Default value: 'URL' .
 * @property {string} [value]
 */
export interface BodyModel {
  dataRepresentation?: string;
  value?: string;
}

/**
 * @class
 * Initializes a new instance of the CreateVideoReviewsBodyItemVideoFramesItemReviewerResultTagsItem class.
 * @constructor
 * @property {string} key Your key parameter.
 * @property {string} value Your value parameter.
 */
export interface CreateVideoReviewsBodyItemVideoFramesItemReviewerResultTagsItem {
  key: string;
  value: string;
}

/**
 * @class
 * Initializes a new instance of the CreateVideoReviewsBodyItemVideoFramesItemMetadataItem class.
 * @constructor
 * @property {string} key Your key parameter.
 * @property {string} value Your value parameter.
 */
export interface CreateVideoReviewsBodyItemVideoFramesItemMetadataItem {
  key: string;
  value: string;
}

/**
 * @class
 * Initializes a new instance of the CreateVideoReviewsBodyItemVideoFramesItem class.
 * @constructor
 * @property {string} id Id of the frame.
 * @property {number} timestamp Timestamp of the frame.
 * @property {string} frameImage Frame image Url.
 * @property {array} [reviewerResultTags]
 * @property {array} [metadata] Optional metadata details.
 */
export interface CreateVideoReviewsBodyItemVideoFramesItem {
  id: string;
  timestamp: number;
  frameImage: string;
  reviewerResultTags?: CreateVideoReviewsBodyItemVideoFramesItemReviewerResultTagsItem[];
  metadata?: CreateVideoReviewsBodyItemVideoFramesItemMetadataItem[];
}

/**
 * @class
 * Initializes a new instance of the CreateVideoReviewsBodyItemMetadataItem class.
 * @constructor
 * @property {string} key Your key parameter.
 * @property {string} value Your value parameter.
 */
export interface CreateVideoReviewsBodyItemMetadataItem {
  key: string;
  value: string;
}

/**
 * @class
 * Initializes a new instance of the CreateVideoReviewsBodyItem class.
 * @constructor
 * Schema items of the body.
 *
 * @property {array} [videoFrames] Optional metadata details.
 * @property {array} [metadata] Optional metadata details.
 * @property {string} content Video content url to review.
 * @property {string} contentId Content Identifier.
 * @property {string} status Status of the video(Complete,Unpublished,Pending).
 * Possible values include: 'Complete', 'Unpublished', 'Pending'
 * @property {number} [timescale] Timescale of the video.
 * @property {string} [callbackEndpoint] Optional CallbackEndpoint.
 */
export interface CreateVideoReviewsBodyItem {
  videoFrames?: CreateVideoReviewsBodyItemVideoFramesItem[];
  metadata?: CreateVideoReviewsBodyItemMetadataItem[];
  content: string;
  contentId: string;
  status: string;
  timescale?: number;
  callbackEndpoint?: string;
}

/**
 * @class
 * Initializes a new instance of the VideoFrameBodyItemReviewerResultTagsItem class.
 * @constructor
 * @property {string} key Your key parameter.
 * @property {string} value Your value parameter.
 */
export interface VideoFrameBodyItemReviewerResultTagsItem {
  key: string;
  value: string;
}

/**
 * @class
 * Initializes a new instance of the VideoFrameBodyItemMetadataItem class.
 * @constructor
 * @property {string} key Your key parameter.
 * @property {string} value Your value parameter.
 */
export interface VideoFrameBodyItemMetadataItem {
  key: string;
  value: string;
}

/**
 * @class
 * Initializes a new instance of the VideoFrameBodyItem class.
 * @constructor
 * Schema items of the body.
 *
 * @property {string} timestamp Timestamp of the frame.
 * @property {string} frameImage Content to review.
 * @property {array} [reviewerResultTags]
 * @property {array} [metadata] Optional metadata details.
 */
export interface VideoFrameBodyItem {
  timestamp: string;
  frameImage: string;
  reviewerResultTags?: VideoFrameBodyItemReviewerResultTagsItem[];
  metadata?: VideoFrameBodyItemMetadataItem[];
}
