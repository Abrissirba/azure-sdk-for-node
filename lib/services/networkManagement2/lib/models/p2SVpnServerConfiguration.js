/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * P2SVpnServerConfiguration Resource.
 *
 * @extends models['Resource']
 */
class P2SVpnServerConfiguration extends models['Resource'] {
  /**
   * Create a P2SVpnServerConfiguration.
   * @member {array} [vpnProtocols] vpnProtocols for the
   * P2SVpnServerConfiguration.
   * @member {array} [p2sVpnServerConfigVpnClientRootCertificates] VPN client
   * root certificate of P2SVpnServerConfiguration.
   * @member {array} [p2sVpnServerConfigVpnClientRevokedCertificates] VPN
   * client revoked certificate of P2SVpnServerConfiguration.
   * @member {array} [p2sVpnServerConfigRadiusServerRootCertificates] Radius
   * Server root certificate of P2SVpnServerConfiguration.
   * @member {array} [p2sVpnServerConfigRadiusClientRootCertificates] Radius
   * client root certificate of P2SVpnServerConfiguration.
   * @member {array} [vspnClientIpsecPolicies] VpnClientIpsecPolicies for
   * P2SVpnServerConfiguration.
   * @member {string} [radiusServerAddress] The radius server address property
   * of the P2SVpnServerConfiguration resource for point to site client
   * connection.
   * @member {string} [radiusServerSecret] The radius secret property of the
   * P2SVpnServerConfiguration resource for for point to site client
   * connection.
   * @member {array} [p2sVpnGateways]
   * @member {string} [etag] Gets a unique read-only string that changes
   * whenever the resource is updated.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of P2SVpnServerConfiguration
   *
   * @returns {object} metadata of P2SVpnServerConfiguration
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'P2SVpnServerConfiguration',
      type: {
        name: 'Composite',
        className: 'P2SVpnServerConfiguration',
        modelProperties: {
          id: {
            required: false,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            readOnly: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          type: {
            required: false,
            readOnly: true,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          location: {
            required: false,
            serializedName: 'location',
            type: {
              name: 'String'
            }
          },
          tags: {
            required: false,
            serializedName: 'tags',
            type: {
              name: 'Dictionary',
              value: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          vpnProtocols: {
            required: false,
            serializedName: 'properties.vpnProtocols',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'VpnGatewayTunnelingProtocolElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          p2sVpnServerConfigVpnClientRootCertificates: {
            required: false,
            serializedName: 'properties.p2sVpnServerConfigVpnClientRootCertificates',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'P2SVpnServerConfigVpnClientRootCertificateElementType',
                  type: {
                    name: 'Composite',
                    className: 'P2SVpnServerConfigVpnClientRootCertificate'
                  }
              }
            }
          },
          p2sVpnServerConfigVpnClientRevokedCertificates: {
            required: false,
            serializedName: 'properties.p2sVpnServerConfigVpnClientRevokedCertificates',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'P2SVpnServerConfigVpnClientRevokedCertificateElementType',
                  type: {
                    name: 'Composite',
                    className: 'P2SVpnServerConfigVpnClientRevokedCertificate'
                  }
              }
            }
          },
          p2sVpnServerConfigRadiusServerRootCertificates: {
            required: false,
            serializedName: 'properties.p2sVpnServerConfigRadiusServerRootCertificates',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'P2SVpnServerConfigRadiusServerRootCertificateElementType',
                  type: {
                    name: 'Composite',
                    className: 'P2SVpnServerConfigRadiusServerRootCertificate'
                  }
              }
            }
          },
          p2sVpnServerConfigRadiusClientRootCertificates: {
            required: false,
            serializedName: 'properties.p2sVpnServerConfigRadiusClientRootCertificates',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'P2SVpnServerConfigRadiusClientRootCertificateElementType',
                  type: {
                    name: 'Composite',
                    className: 'P2SVpnServerConfigRadiusClientRootCertificate'
                  }
              }
            }
          },
          vspnClientIpsecPolicies: {
            required: false,
            serializedName: 'properties.vspnClientIpsecPolicies',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'IpsecPolicyElementType',
                  type: {
                    name: 'Composite',
                    className: 'IpsecPolicy'
                  }
              }
            }
          },
          radiusServerAddress: {
            required: false,
            serializedName: 'properties.radiusServerAddress',
            type: {
              name: 'String'
            }
          },
          radiusServerSecret: {
            required: false,
            serializedName: 'properties.radiusServerSecret',
            type: {
              name: 'String'
            }
          },
          p2sVpnGateways: {
            required: false,
            readOnly: true,
            serializedName: 'properties.p2sVpnGateways',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'SubResourceElementType',
                  type: {
                    name: 'Composite',
                    className: 'SubResource'
                  }
              }
            }
          },
          etag: {
            required: false,
            readOnly: true,
            serializedName: 'etag',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = P2SVpnServerConfiguration;
