/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * A lab.
 *
 * @extends models['BaseResource']
 */
class Lab extends models['BaseResource'] {
  /**
   * Create a Lab.
   * @member {string} [defaultStorageAccount] The lab's default storage
   * account.
   * @member {string} [artifactsStorageAccount] The artifact storage account of
   * the lab.
   * @member {array} [storageAccounts] The storage accounts of the lab.
   * @member {string} [vaultName] The name of the key vault of the lab.
   * @member {string} [labStorageType] The type of the lab storage. Possible
   * values include: 'Standard', 'Premium'
   * @member {string} [defaultVirtualNetworkId] The default virtual network
   * identifier of the lab.
   * @member {date} [createdDate] The creation date of the lab.
   * @member {string} [provisioningState] The provisioning status of the
   * resource.
   * @member {string} [id] The identifier of the resource.
   * @member {string} [name] The name of the resource.
   * @member {string} [type] The type of the resource.
   * @member {string} [location] The location of the resource.
   * @member {object} [tags] The tags of the resource.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of Lab
   *
   * @returns {object} metadata of Lab
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'Lab',
      type: {
        name: 'Composite',
        className: 'Lab',
        modelProperties: {
          defaultStorageAccount: {
            required: false,
            serializedName: 'properties.defaultStorageAccount',
            type: {
              name: 'String'
            }
          },
          artifactsStorageAccount: {
            required: false,
            serializedName: 'properties.artifactsStorageAccount',
            type: {
              name: 'String'
            }
          },
          storageAccounts: {
            required: false,
            serializedName: 'properties.storageAccounts',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          vaultName: {
            required: false,
            serializedName: 'properties.vaultName',
            type: {
              name: 'String'
            }
          },
          labStorageType: {
            required: false,
            serializedName: 'properties.labStorageType',
            type: {
              name: 'String'
            }
          },
          defaultVirtualNetworkId: {
            required: false,
            serializedName: 'properties.defaultVirtualNetworkId',
            type: {
              name: 'String'
            }
          },
          createdDate: {
            required: false,
            serializedName: 'properties.createdDate',
            type: {
              name: 'DateTime'
            }
          },
          provisioningState: {
            required: false,
            serializedName: 'properties.provisioningState',
            type: {
              name: 'String'
            }
          },
          id: {
            required: false,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          type: {
            required: false,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          location: {
            required: false,
            serializedName: 'location',
            type: {
              name: 'String'
            }
          },
          tags: {
            required: false,
            serializedName: 'tags',
            type: {
              name: 'Dictionary',
              value: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = Lab;
