/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Metadata for search results.
 *
 */
class SearchMetadata {
  /**
   * Create a SearchMetadata.
   * @property {string} [searchId] The request id of the search.
   * @property {string} [resultType] The search result type.
   * @property {number} [total] The total number of search results.
   * @property {number} [top] The number of top search results.
   * @property {string} [id] The id of the search results request.
   * @property {array} [coreSummaries] The core summaries.
   * @property {string} [status] The status of the search results.
   * @property {date} [startTime] The start time for the search.
   * @property {date} [lastUpdated] The time of last update.
   * @property {string} [eTag] The ETag of the search results.
   * @property {array} [sort] How the results are sorted.
   * @property {number} [requestTime] The request time.
   * @property {string} [aggregatedValueField] The aggregated value field.
   * @property {string} [aggregatedGroupingFields] The aggregated grouping
   * fields.
   * @property {number} [sum] The sum of all aggregates returned in the result
   * set.
   * @property {number} [max] The max of all aggregates returned in the result
   * set.
   * @property {object} [schema] The schema.
   * @property {string} [schema.name] The name of the metadata schema.
   * @property {number} [schema.version] The version of the metadata schema.
   */
  constructor() {
  }

  /**
   * Defines the metadata of SearchMetadata
   *
   * @returns {object} metadata of SearchMetadata
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'SearchMetadata',
      type: {
        name: 'Composite',
        className: 'SearchMetadata',
        modelProperties: {
          searchId: {
            required: false,
            serializedName: 'requestId',
            type: {
              name: 'String'
            }
          },
          resultType: {
            required: false,
            serializedName: 'resultType',
            type: {
              name: 'String'
            }
          },
          total: {
            required: false,
            serializedName: 'total',
            type: {
              name: 'Number'
            }
          },
          top: {
            required: false,
            serializedName: 'top',
            type: {
              name: 'Number'
            }
          },
          id: {
            required: false,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          coreSummaries: {
            required: false,
            serializedName: 'coreSummaries',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'CoreSummaryElementType',
                  type: {
                    name: 'Composite',
                    className: 'CoreSummary'
                  }
              }
            }
          },
          status: {
            required: false,
            serializedName: 'status',
            type: {
              name: 'String'
            }
          },
          startTime: {
            required: false,
            serializedName: 'startTime',
            type: {
              name: 'DateTime'
            }
          },
          lastUpdated: {
            required: false,
            serializedName: 'lastUpdated',
            type: {
              name: 'DateTime'
            }
          },
          eTag: {
            required: false,
            serializedName: 'eTag',
            type: {
              name: 'String'
            }
          },
          sort: {
            required: false,
            serializedName: 'sort',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'SearchSortElementType',
                  type: {
                    name: 'Composite',
                    className: 'SearchSort'
                  }
              }
            }
          },
          requestTime: {
            required: false,
            serializedName: 'requestTime',
            type: {
              name: 'Number'
            }
          },
          aggregatedValueField: {
            required: false,
            serializedName: 'aggregatedValueField',
            type: {
              name: 'String'
            }
          },
          aggregatedGroupingFields: {
            required: false,
            serializedName: 'aggregatedGroupingFields',
            type: {
              name: 'String'
            }
          },
          sum: {
            required: false,
            serializedName: 'sum',
            type: {
              name: 'Number'
            }
          },
          max: {
            required: false,
            serializedName: 'max',
            type: {
              name: 'Number'
            }
          },
          schema: {
            required: false,
            serializedName: 'schema',
            type: {
              name: 'Composite',
              className: 'SearchMetadataSchema'
            }
          }
        }
      }
    };
  }
}

module.exports = SearchMetadata;
