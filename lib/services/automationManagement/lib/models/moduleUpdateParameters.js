/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * The parameters supplied to the update module operation.
 *
 */
class ModuleUpdateParameters {
  /**
   * Create a ModuleUpdateParameters.
   * @property {object} [contentLink] Gets or sets the module content link.
   * @property {string} [contentLink.uri] Gets or sets the uri of the runbook
   * content.
   * @property {object} [contentLink.contentHash] Gets or sets the hash.
   * @property {string} [contentLink.contentHash.algorithm] Gets or sets the
   * content hash algorithm used to hash the content.
   * @property {string} [contentLink.contentHash.value] Gets or sets expected
   * hash value of the content.
   * @property {string} [contentLink.version] Gets or sets the version of the
   * content.
   * @property {string} [name] Gets or sets name of the resource.
   * @property {string} [location] Gets or sets the location of the resource.
   * @property {object} [tags] Gets or sets the tags attached to the resource.
   */
  constructor() {
  }

  /**
   * Defines the metadata of ModuleUpdateParameters
   *
   * @returns {object} metadata of ModuleUpdateParameters
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ModuleUpdateParameters',
      type: {
        name: 'Composite',
        className: 'ModuleUpdateParameters',
        modelProperties: {
          contentLink: {
            required: false,
            serializedName: 'properties.contentLink',
            type: {
              name: 'Composite',
              className: 'ContentLink'
            }
          },
          name: {
            required: false,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          location: {
            required: false,
            serializedName: 'location',
            type: {
              name: 'String'
            }
          },
          tags: {
            required: false,
            serializedName: 'tags',
            type: {
              name: 'Dictionary',
              value: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = ModuleUpdateParameters;
