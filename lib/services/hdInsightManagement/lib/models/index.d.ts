/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { BaseResource } from 'ms-rest-azure';
import { CloudError } from 'ms-rest-azure';
import * as moment from 'moment';

export { BaseResource } from 'ms-rest-azure';
export { CloudError } from 'ms-rest-azure';


/**
 * @class
 * Initializes a new instance of the ClusterDefinition class.
 * @constructor
 * The cluster definition.
 *
 * @property {string} [blueprint] The link to the blueprint.
 * @property {string} [kind] The type of cluster.
 * @property {object} [componentVersion] The versions of different services in
 * the cluster.
 * @property {object} [configurations] The cluster configurations.
 */
export interface ClusterDefinition {
  blueprint?: string;
  kind?: string;
  componentVersion?: { [propertyName: string]: string };
  configurations?: any;
}

/**
 * @class
 * Initializes a new instance of the SecurityProfile class.
 * @constructor
 * The security profile which contains Ssh public key for the HDInsight
 * cluster.
 *
 * @property {string} [directoryType] The directory type. Possible values
 * include: 'ActiveDirectory'
 * @property {string} [domain] The organization's active directory domain.
 * @property {string} [organizationalUnitDN] The organizational unit within the
 * Active Directory to place the cluster and service accounts.
 * @property {array} [ldapsUrls] The LDAPS protocol URLs to communicate with
 * the Active Directory.
 * @property {string} [domainUsername] The domain user account that will have
 * admin privileges on the cluster.
 * @property {string} [domainUserPassword] The domain admin password.
 * @property {array} [clusterUsersGroupDNs] Optional. The Distinguished Names
 * for cluster user groups
 * @property {string} [aaddsResourceId] The resource ID of the user's Azure
 * Active Directory Domain Service.
 * @property {string} [msiResourceId] User assigned identity that has
 * permissions to read and create cluster-related artifacts in the user's
 * AADDS.
 */
export interface SecurityProfile {
  directoryType?: string;
  domain?: string;
  organizationalUnitDN?: string;
  ldapsUrls?: string[];
  domainUsername?: string;
  domainUserPassword?: string;
  clusterUsersGroupDNs?: string[];
  aaddsResourceId?: string;
  msiResourceId?: string;
}

/**
 * @class
 * Initializes a new instance of the HardwareProfile class.
 * @constructor
 * The hardware profile.
 *
 * @property {string} [vmSize] The size of the VM
 */
export interface HardwareProfile {
  vmSize?: string;
}

/**
 * @class
 * Initializes a new instance of the VirtualNetworkProfile class.
 * @constructor
 * The virtual network properties.
 *
 * @property {string} [id] The ID of the virtual network.
 * @property {string} [subnet] The name of the subnet.
 */
export interface VirtualNetworkProfile {
  id?: string;
  subnet?: string;
}

/**
 * @class
 * Initializes a new instance of the DataDisksGroups class.
 * @constructor
 * The data disks groups for the role.
 *
 * @property {number} [disksPerNode] The number of disks per node.
 * @property {string} [storageAccountType] ReadOnly. The storage account type.
 * Do not set this value.
 * @property {number} [diskSizeGB] ReadOnly. The DiskSize in GB. Do not set
 * this value.
 */
export interface DataDisksGroups {
  disksPerNode?: number;
  readonly storageAccountType?: string;
  readonly diskSizeGB?: number;
}

/**
 * @class
 * Initializes a new instance of the SshPublicKey class.
 * @constructor
 * The SSH public key for the cluster nodes.
 *
 * @property {string} [certificateData] The certificate for SSH.
 */
export interface SshPublicKey {
  certificateData?: string;
}

/**
 * @class
 * Initializes a new instance of the SshProfile class.
 * @constructor
 * The list of SSH public keys.
 *
 * @property {array} [publicKeys] The list of SSH public keys.
 */
export interface SshProfile {
  publicKeys?: SshPublicKey[];
}

/**
 * @class
 * Initializes a new instance of the LinuxOperatingSystemProfile class.
 * @constructor
 * The ssh username, password, and ssh public key.
 *
 * @property {string} [username] The username.
 * @property {string} [password] The password.
 * @property {object} [sshProfile] The SSH profile.
 * @property {array} [sshProfile.publicKeys] The list of SSH public keys.
 */
export interface LinuxOperatingSystemProfile {
  username?: string;
  password?: string;
  sshProfile?: SshProfile;
}

/**
 * @class
 * Initializes a new instance of the OsProfile class.
 * @constructor
 * The Linux operation systems profile.
 *
 * @property {object} [linuxOperatingSystemProfile] The Linux OS profile.
 * @property {string} [linuxOperatingSystemProfile.username] The username.
 * @property {string} [linuxOperatingSystemProfile.password] The password.
 * @property {object} [linuxOperatingSystemProfile.sshProfile] The SSH profile.
 * @property {array} [linuxOperatingSystemProfile.sshProfile.publicKeys] The
 * list of SSH public keys.
 */
export interface OsProfile {
  linuxOperatingSystemProfile?: LinuxOperatingSystemProfile;
}

/**
 * @class
 * Initializes a new instance of the ScriptAction class.
 * @constructor
 * Describes a script action on role on the cluster.
 *
 * @property {string} name The name of the script action.
 * @property {string} uri The URI to the script.
 * @property {string} parameters The parameters for the script provided.
 */
export interface ScriptAction {
  name: string;
  uri: string;
  parameters: string;
}

/**
 * @class
 * Initializes a new instance of the Role class.
 * @constructor
 * Describes a role on the cluster.
 *
 * @property {string} [name] The name of the role.
 * @property {number} [minInstanceCount] The minimum instance count of the
 * cluster.
 * @property {number} [targetInstanceCount] The instance count of the cluster.
 * @property {object} [hardwareProfile] The hardware profile.
 * @property {string} [hardwareProfile.vmSize] The size of the VM
 * @property {object} [osProfile] The operating system profile.
 * @property {object} [osProfile.linuxOperatingSystemProfile] The Linux OS
 * profile.
 * @property {string} [osProfile.linuxOperatingSystemProfile.username] The
 * username.
 * @property {string} [osProfile.linuxOperatingSystemProfile.password] The
 * password.
 * @property {object} [osProfile.linuxOperatingSystemProfile.sshProfile] The
 * SSH profile.
 * @property {array}
 * [osProfile.linuxOperatingSystemProfile.sshProfile.publicKeys] The list of
 * SSH public keys.
 * @property {object} [virtualNetworkProfile] The virtual network profile.
 * @property {string} [virtualNetworkProfile.id] The ID of the virtual network.
 * @property {string} [virtualNetworkProfile.subnet] The name of the subnet.
 * @property {array} [dataDisksGroups] The data disks groups for the role.
 * @property {array} [scriptActions] The list of script actions on the role.
 */
export interface Role {
  name?: string;
  minInstanceCount?: number;
  targetInstanceCount?: number;
  hardwareProfile?: HardwareProfile;
  osProfile?: OsProfile;
  virtualNetworkProfile?: VirtualNetworkProfile;
  dataDisksGroups?: DataDisksGroups[];
  scriptActions?: ScriptAction[];
}

/**
 * @class
 * Initializes a new instance of the ComputeProfile class.
 * @constructor
 * Describes the compute profile.
 *
 * @property {array} [roles] The list of roles in the cluster.
 */
export interface ComputeProfile {
  roles?: Role[];
}

/**
 * @class
 * Initializes a new instance of the StorageAccount class.
 * @constructor
 * The storage Account.
 *
 * @property {string} [name] The name of the storage account.
 * @property {boolean} [isDefault] Whether or not the storage account is the
 * default storage account.
 * @property {string} [container] The container in the storage account, only to
 * be specified for WASB storage accounts.
 * @property {string} [fileSystem] The filesystem, only to be specified for
 * Azure Data Lake Storage type Gen 2.
 * @property {string} [key] The storage account access key.
 */
export interface StorageAccount {
  name?: string;
  isDefault?: boolean;
  container?: string;
  fileSystem?: string;
  key?: string;
}

/**
 * @class
 * Initializes a new instance of the StorageProfile class.
 * @constructor
 * The storage profile.
 *
 * @property {array} [storageaccounts] The list of storage accounts in the
 * cluster.
 */
export interface StorageProfile {
  storageaccounts?: StorageAccount[];
}

/**
 * @class
 * Initializes a new instance of the ClusterCreateProperties class.
 * @constructor
 * The cluster create parameters.
 *
 * @property {string} [clusterVersion] The version of the cluster.
 * @property {string} [osType] The type of operating system. Possible values
 * include: 'Windows', 'Linux'
 * @property {string} [tier] The cluster tier. Possible values include:
 * 'Standard', 'Premium'
 * @property {object} [clusterDefinition] The cluster definition.
 * @property {string} [clusterDefinition.blueprint] The link to the blueprint.
 * @property {string} [clusterDefinition.kind] The type of cluster.
 * @property {object} [clusterDefinition.componentVersion] The versions of
 * different services in the cluster.
 * @property {object} [clusterDefinition.configurations] The cluster
 * configurations.
 * @property {object} [securityProfile] The security profile.
 * @property {string} [securityProfile.directoryType] The directory type.
 * Possible values include: 'ActiveDirectory'
 * @property {string} [securityProfile.domain] The organization's active
 * directory domain.
 * @property {string} [securityProfile.organizationalUnitDN] The organizational
 * unit within the Active Directory to place the cluster and service accounts.
 * @property {array} [securityProfile.ldapsUrls] The LDAPS protocol URLs to
 * communicate with the Active Directory.
 * @property {string} [securityProfile.domainUsername] The domain user account
 * that will have admin privileges on the cluster.
 * @property {string} [securityProfile.domainUserPassword] The domain admin
 * password.
 * @property {array} [securityProfile.clusterUsersGroupDNs] Optional. The
 * Distinguished Names for cluster user groups
 * @property {string} [securityProfile.aaddsResourceId] The resource ID of the
 * user's Azure Active Directory Domain Service.
 * @property {string} [securityProfile.msiResourceId] User assigned identity
 * that has permissions to read and create cluster-related artifacts in the
 * user's AADDS.
 * @property {object} [computeProfile] The compute profile.
 * @property {array} [computeProfile.roles] The list of roles in the cluster.
 * @property {object} [storageProfile] The storage profile.
 * @property {array} [storageProfile.storageaccounts] The list of storage
 * accounts in the cluster.
 */
export interface ClusterCreateProperties {
  clusterVersion?: string;
  osType?: string;
  tier?: string;
  clusterDefinition?: ClusterDefinition;
  securityProfile?: SecurityProfile;
  computeProfile?: ComputeProfile;
  storageProfile?: StorageProfile;
}

/**
 * @class
 * Initializes a new instance of the ClusterIdentityUserAssignedIdentitiesValue class.
 * @constructor
 * @property {string} [principalId] The principal id of user assigned identity.
 * @property {string} [clientId] The client id of user assigned identity.
 */
export interface ClusterIdentityUserAssignedIdentitiesValue {
  readonly principalId?: string;
  readonly clientId?: string;
}

/**
 * @class
 * Initializes a new instance of the ClusterIdentity class.
 * @constructor
 * Identity for the cluster.
 *
 * @property {string} [principalId] The principal id of cluster identity. This
 * property will only be provided for a system assigned identity.
 * @property {string} [tenantId] The tenant id associated with the cluster.
 * This property will only be provided for a system assigned identity.
 * @property {string} [type] The type of identity used for the cluster. The
 * type 'SystemAssigned, UserAssigned' includes both an implicitly created
 * identity and a set of user assigned identities. Possible values include:
 * 'SystemAssigned', 'UserAssigned', 'SystemAssigned, UserAssigned', 'None'
 * @property {object} [userAssignedIdentities] The list of user identities
 * associated with the cluster. The user identity dictionary key references
 * will be ARM resource ids in the form:
 * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
 */
export interface ClusterIdentity {
  readonly principalId?: string;
  readonly tenantId?: string;
  type?: string;
  userAssignedIdentities?: { [propertyName: string]: ClusterIdentityUserAssignedIdentitiesValue };
}

/**
 * @class
 * Initializes a new instance of the ClusterCreateParametersExtended class.
 * @constructor
 * The CreateCluster request parameters.
 *
 * @property {string} [location] The location of the cluster.
 * @property {object} [tags] The resource tags.
 * @property {object} [properties] The cluster create parameters.
 * @property {string} [properties.clusterVersion] The version of the cluster.
 * @property {string} [properties.osType] The type of operating system.
 * Possible values include: 'Windows', 'Linux'
 * @property {string} [properties.tier] The cluster tier. Possible values
 * include: 'Standard', 'Premium'
 * @property {object} [properties.clusterDefinition] The cluster definition.
 * @property {string} [properties.clusterDefinition.blueprint] The link to the
 * blueprint.
 * @property {string} [properties.clusterDefinition.kind] The type of cluster.
 * @property {object} [properties.clusterDefinition.componentVersion] The
 * versions of different services in the cluster.
 * @property {object} [properties.clusterDefinition.configurations] The cluster
 * configurations.
 * @property {object} [properties.securityProfile] The security profile.
 * @property {string} [properties.securityProfile.directoryType] The directory
 * type. Possible values include: 'ActiveDirectory'
 * @property {string} [properties.securityProfile.domain] The organization's
 * active directory domain.
 * @property {string} [properties.securityProfile.organizationalUnitDN] The
 * organizational unit within the Active Directory to place the cluster and
 * service accounts.
 * @property {array} [properties.securityProfile.ldapsUrls] The LDAPS protocol
 * URLs to communicate with the Active Directory.
 * @property {string} [properties.securityProfile.domainUsername] The domain
 * user account that will have admin privileges on the cluster.
 * @property {string} [properties.securityProfile.domainUserPassword] The
 * domain admin password.
 * @property {array} [properties.securityProfile.clusterUsersGroupDNs]
 * Optional. The Distinguished Names for cluster user groups
 * @property {string} [properties.securityProfile.aaddsResourceId] The resource
 * ID of the user's Azure Active Directory Domain Service.
 * @property {string} [properties.securityProfile.msiResourceId] User assigned
 * identity that has permissions to read and create cluster-related artifacts
 * in the user's AADDS.
 * @property {object} [properties.computeProfile] The compute profile.
 * @property {array} [properties.computeProfile.roles] The list of roles in the
 * cluster.
 * @property {object} [properties.storageProfile] The storage profile.
 * @property {array} [properties.storageProfile.storageaccounts] The list of
 * storage accounts in the cluster.
 * @property {object} [identity] The identity of the cluster, if configured.
 * @property {string} [identity.principalId] The principal id of cluster
 * identity. This property will only be provided for a system assigned
 * identity.
 * @property {string} [identity.tenantId] The tenant id associated with the
 * cluster. This property will only be provided for a system assigned identity.
 * @property {string} [identity.type] The type of identity used for the
 * cluster. The type 'SystemAssigned, UserAssigned' includes both an implicitly
 * created identity and a set of user assigned identities. Possible values
 * include: 'SystemAssigned', 'UserAssigned', 'SystemAssigned, UserAssigned',
 * 'None'
 * @property {object} [identity.userAssignedIdentities] The list of user
 * identities associated with the cluster. The user identity dictionary key
 * references will be ARM resource ids in the form:
 * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
 */
export interface ClusterCreateParametersExtended {
  location?: string;
  tags?: { [propertyName: string]: string };
  properties?: ClusterCreateProperties;
  identity?: ClusterIdentity;
}

/**
 * @class
 * Initializes a new instance of the ClusterPatchParameters class.
 * @constructor
 * The PatchCluster request parameters
 *
 * @property {object} [tags] The resource tags.
 */
export interface ClusterPatchParameters {
  tags?: { [propertyName: string]: string };
}

/**
 * @class
 * Initializes a new instance of the QuotaInfo class.
 * @constructor
 * The quota properties for the cluster.
 *
 * @property {number} [coresUsed] The cores used by the cluster.
 */
export interface QuotaInfo {
  coresUsed?: number;
}

/**
 * @class
 * Initializes a new instance of the Errors class.
 * @constructor
 * The error message associated with the cluster creation.
 *
 * @property {string} [code] The error code.
 * @property {string} [message] The error message.
 */
export interface Errors {
  code?: string;
  message?: string;
}

/**
 * @class
 * Initializes a new instance of the ConnectivityEndpoint class.
 * @constructor
 * The connectivity properties
 *
 * @property {string} [name] The name of the endpoint.
 * @property {string} [protocol] The protocol of the endpoint.
 * @property {string} [location] The location of the endpoint.
 * @property {number} [port] The port to connect to.
 */
export interface ConnectivityEndpoint {
  name?: string;
  protocol?: string;
  location?: string;
  port?: number;
}

/**
 * @class
 * Initializes a new instance of the ClusterGetProperties class.
 * @constructor
 * The properties of cluster.
 *
 * @property {string} [clusterVersion] The version of the cluster.
 * @property {string} [osType] The type of operating system. Possible values
 * include: 'Windows', 'Linux'
 * @property {string} [tier] The cluster tier. Possible values include:
 * 'Standard', 'Premium'
 * @property {object} clusterDefinition The cluster definition.
 * @property {string} [clusterDefinition.blueprint] The link to the blueprint.
 * @property {string} [clusterDefinition.kind] The type of cluster.
 * @property {object} [clusterDefinition.componentVersion] The versions of
 * different services in the cluster.
 * @property {object} [clusterDefinition.configurations] The cluster
 * configurations.
 * @property {object} [securityProfile] The security profile.
 * @property {string} [securityProfile.directoryType] The directory type.
 * Possible values include: 'ActiveDirectory'
 * @property {string} [securityProfile.domain] The organization's active
 * directory domain.
 * @property {string} [securityProfile.organizationalUnitDN] The organizational
 * unit within the Active Directory to place the cluster and service accounts.
 * @property {array} [securityProfile.ldapsUrls] The LDAPS protocol URLs to
 * communicate with the Active Directory.
 * @property {string} [securityProfile.domainUsername] The domain user account
 * that will have admin privileges on the cluster.
 * @property {string} [securityProfile.domainUserPassword] The domain admin
 * password.
 * @property {array} [securityProfile.clusterUsersGroupDNs] Optional. The
 * Distinguished Names for cluster user groups
 * @property {string} [securityProfile.aaddsResourceId] The resource ID of the
 * user's Azure Active Directory Domain Service.
 * @property {string} [securityProfile.msiResourceId] User assigned identity
 * that has permissions to read and create cluster-related artifacts in the
 * user's AADDS.
 * @property {object} [computeProfile] The compute profile.
 * @property {array} [computeProfile.roles] The list of roles in the cluster.
 * @property {string} [provisioningState] The provisioning state, which only
 * appears in the response. Possible values include: 'InProgress', 'Failed',
 * 'Succeeded', 'Canceled', 'Deleting'
 * @property {string} [createdDate] The date on which the cluster was created.
 * @property {string} [clusterState] The state of the cluster.
 * @property {object} [quotaInfo] The quota information.
 * @property {number} [quotaInfo.coresUsed] The cores used by the cluster.
 * @property {array} [errors] The list of errors.
 * @property {array} [connectivityEndpoints] The list of connectivity
 * endpoints.
 */
export interface ClusterGetProperties {
  clusterVersion?: string;
  osType?: string;
  tier?: string;
  clusterDefinition: ClusterDefinition;
  securityProfile?: SecurityProfile;
  computeProfile?: ComputeProfile;
  provisioningState?: string;
  createdDate?: string;
  clusterState?: string;
  quotaInfo?: QuotaInfo;
  errors?: Errors[];
  connectivityEndpoints?: ConnectivityEndpoint[];
}

/**
 * @class
 * Initializes a new instance of the Resource class.
 * @constructor
 * The core properties of ARM resources
 *
 * @property {string} [id] Fully qualified resource Id for the resource.
 * @property {string} [name] The name of the resource
 * @property {string} [type] The type of the resource.
 */
export interface Resource extends BaseResource {
  readonly id?: string;
  readonly name?: string;
  readonly type?: string;
}

/**
 * @class
 * Initializes a new instance of the TrackedResource class.
 * @constructor
 * The resource model definition for a ARM tracked top level resource
 *
 * @property {string} [location] The Azure Region where the resource lives
 * @property {object} [tags] Resource tags.
 */
export interface TrackedResource extends Resource {
  location?: string;
  tags?: { [propertyName: string]: string };
}

/**
 * @class
 * Initializes a new instance of the Cluster class.
 * @constructor
 * The HDInsight cluster.
 *
 * @property {string} [etag] The ETag for the resource
 * @property {object} [properties] The properties of the cluster.
 * @property {string} [properties.clusterVersion] The version of the cluster.
 * @property {string} [properties.osType] The type of operating system.
 * Possible values include: 'Windows', 'Linux'
 * @property {string} [properties.tier] The cluster tier. Possible values
 * include: 'Standard', 'Premium'
 * @property {object} [properties.clusterDefinition] The cluster definition.
 * @property {string} [properties.clusterDefinition.blueprint] The link to the
 * blueprint.
 * @property {string} [properties.clusterDefinition.kind] The type of cluster.
 * @property {object} [properties.clusterDefinition.componentVersion] The
 * versions of different services in the cluster.
 * @property {object} [properties.clusterDefinition.configurations] The cluster
 * configurations.
 * @property {object} [properties.securityProfile] The security profile.
 * @property {string} [properties.securityProfile.directoryType] The directory
 * type. Possible values include: 'ActiveDirectory'
 * @property {string} [properties.securityProfile.domain] The organization's
 * active directory domain.
 * @property {string} [properties.securityProfile.organizationalUnitDN] The
 * organizational unit within the Active Directory to place the cluster and
 * service accounts.
 * @property {array} [properties.securityProfile.ldapsUrls] The LDAPS protocol
 * URLs to communicate with the Active Directory.
 * @property {string} [properties.securityProfile.domainUsername] The domain
 * user account that will have admin privileges on the cluster.
 * @property {string} [properties.securityProfile.domainUserPassword] The
 * domain admin password.
 * @property {array} [properties.securityProfile.clusterUsersGroupDNs]
 * Optional. The Distinguished Names for cluster user groups
 * @property {string} [properties.securityProfile.aaddsResourceId] The resource
 * ID of the user's Azure Active Directory Domain Service.
 * @property {string} [properties.securityProfile.msiResourceId] User assigned
 * identity that has permissions to read and create cluster-related artifacts
 * in the user's AADDS.
 * @property {object} [properties.computeProfile] The compute profile.
 * @property {array} [properties.computeProfile.roles] The list of roles in the
 * cluster.
 * @property {string} [properties.provisioningState] The provisioning state,
 * which only appears in the response. Possible values include: 'InProgress',
 * 'Failed', 'Succeeded', 'Canceled', 'Deleting'
 * @property {string} [properties.createdDate] The date on which the cluster
 * was created.
 * @property {string} [properties.clusterState] The state of the cluster.
 * @property {object} [properties.quotaInfo] The quota information.
 * @property {number} [properties.quotaInfo.coresUsed] The cores used by the
 * cluster.
 * @property {array} [properties.errors] The list of errors.
 * @property {array} [properties.connectivityEndpoints] The list of
 * connectivity endpoints.
 * @property {object} [identity] The identity of the cluster, if configured.
 * @property {string} [identity.principalId] The principal id of cluster
 * identity. This property will only be provided for a system assigned
 * identity.
 * @property {string} [identity.tenantId] The tenant id associated with the
 * cluster. This property will only be provided for a system assigned identity.
 * @property {string} [identity.type] The type of identity used for the
 * cluster. The type 'SystemAssigned, UserAssigned' includes both an implicitly
 * created identity and a set of user assigned identities. Possible values
 * include: 'SystemAssigned', 'UserAssigned', 'SystemAssigned, UserAssigned',
 * 'None'
 * @property {object} [identity.userAssignedIdentities] The list of user
 * identities associated with the cluster. The user identity dictionary key
 * references will be ARM resource ids in the form:
 * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
 */
export interface Cluster extends TrackedResource {
  etag?: string;
  properties?: ClusterGetProperties;
  identity?: ClusterIdentity;
}

/**
 * @class
 * Initializes a new instance of the RuntimeScriptAction class.
 * @constructor
 * Describes a script action on a running cluster.
 *
 * @property {string} name The name of the script action.
 * @property {string} uri The URI to the script.
 * @property {string} [parameters] The parameters for the script
 * @property {array} roles The list of roles where script will be executed.
 * @property {string} [applicationName] The application name of the script
 * action, if any.
 */
export interface RuntimeScriptAction {
  name: string;
  uri: string;
  parameters?: string;
  roles: string[];
  readonly applicationName?: string;
}

/**
 * @class
 * Initializes a new instance of the ExecuteScriptActionParameters class.
 * @constructor
 * The parameters for the script actions to execute on a running cluster.
 *
 * @property {array} [scriptActions] The list of run time script actions.
 * @property {boolean} persistOnSuccess Gets or sets if the scripts needs to be
 * persisted.
 */
export interface ExecuteScriptActionParameters {
  scriptActions?: RuntimeScriptAction[];
  persistOnSuccess: boolean;
}

/**
 * @class
 * Initializes a new instance of the ClusterListPersistedScriptActionsResult class.
 * @constructor
 * The ListPersistedScriptActions operation response.
 *
 * @property {array} [value] The list of Persisted Script Actions.
 * @property {string} [nextLink] The link (url) to the next page of results.
 */
export interface ClusterListPersistedScriptActionsResult {
  value?: RuntimeScriptAction[];
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the ScriptActionExecutionSummary class.
 * @constructor
 * The execution summary of a script action.
 *
 * @property {string} [status] The status of script action execution.
 * @property {number} [instanceCount] The instance count for a given script
 * action execution status.
 */
export interface ScriptActionExecutionSummary {
  readonly status?: string;
  readonly instanceCount?: number;
}

/**
 * @class
 * Initializes a new instance of the RuntimeScriptActionDetail class.
 * @constructor
 * The execution details of a script action.
 *
 * @property {number} [scriptExecutionId] The execution id of the script
 * action.
 * @property {string} [startTime] The start time of script action execution.
 * @property {string} [endTime] The end time of script action execution.
 * @property {string} [status] The current execution status of the script
 * action.
 * @property {string} [operation] The reason why the script action was
 * executed.
 * @property {array} [executionSummary] The summary of script action execution
 * result.
 * @property {string} [debugInformation] The script action execution debug
 * information.
 */
export interface RuntimeScriptActionDetail extends RuntimeScriptAction {
  readonly scriptExecutionId?: number;
  readonly startTime?: string;
  readonly endTime?: string;
  readonly status?: string;
  readonly operation?: string;
  readonly executionSummary?: ScriptActionExecutionSummary[];
  readonly debugInformation?: string;
}

/**
 * @class
 * Initializes a new instance of the ClusterListRuntimeScriptActionDetailResult class.
 * @constructor
 * The list runtime script action detail response.
 *
 * @property {array} [value] The list of persisted script action details for
 * the cluster.
 * @property {string} [nextLink] The link (url) to the next page of results.
 */
export interface ClusterListRuntimeScriptActionDetailResult {
  readonly value?: RuntimeScriptActionDetail[];
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the ClusterResizeParameters class.
 * @constructor
 * The Resize Cluster request parameters.
 *
 * @property {number} [targetInstanceCount] The target instance count for the
 * operation.
 */
export interface ClusterResizeParameters {
  targetInstanceCount?: number;
}

/**
 * @class
 * Initializes a new instance of the OperationResource class.
 * @constructor
 * The azure async operation response.
 *
 * @property {string} [status] The async operation state. Possible values
 * include: 'InProgress', 'Succeeded', 'Failed'
 * @property {object} [error] The operation error information.
 * @property {string} [error.code] The error code.
 * @property {string} [error.message] The error message.
 */
export interface OperationResource {
  status?: string;
  error?: Errors;
}

/**
 * @class
 * Initializes a new instance of the ProxyResource class.
 * @constructor
 * The resource model definition for a ARM proxy resource. It will have
 * everything other than required location and tags
 *
 */
export interface ProxyResource extends Resource {
}

/**
 * @class
 * Initializes a new instance of the ErrorResponse class.
 * @constructor
 * Describes the format of Error response.
 *
 * @property {string} [code] Error code
 * @property {string} [message] Error message indicating why the operation
 * failed.
 */
export interface ErrorResponse {
  code?: string;
  message?: string;
}

/**
 * @class
 * Initializes a new instance of the ApplicationGetHttpsEndpoint class.
 * @constructor
 * Gets the application HTTP endpoints.
 *
 * @property {array} [accessModes] The list of access modes for the
 * application.
 * @property {string} [location] The location of the endpoint.
 * @property {number} [destinationPort] The destination port to connect to.
 * @property {number} [publicPort] The public port to connect to.
 */
export interface ApplicationGetHttpsEndpoint {
  accessModes?: string[];
  location?: string;
  destinationPort?: number;
  publicPort?: number;
}

/**
 * @class
 * Initializes a new instance of the ApplicationGetEndpoint class.
 * @constructor
 * Gets the application SSH endpoint
 *
 * @property {string} [location] The location of the endpoint.
 * @property {number} [destinationPort] The destination port to connect to.
 * @property {number} [publicPort] The public port to connect to.
 */
export interface ApplicationGetEndpoint {
  location?: string;
  destinationPort?: number;
  publicPort?: number;
}

/**
 * @class
 * Initializes a new instance of the ApplicationProperties class.
 * @constructor
 * The HDInsight cluster application GET response.
 *
 * @property {object} [computeProfile] The list of roles in the cluster.
 * @property {array} [computeProfile.roles] The list of roles in the cluster.
 * @property {array} [installScriptActions] The list of install script actions.
 * @property {array} [uninstallScriptActions] The list of uninstall script
 * actions.
 * @property {array} [httpsEndpoints] The list of application HTTPS endpoints.
 * @property {array} [sshEndpoints] The list of application SSH endpoints.
 * @property {string} [provisioningState] The provisioning state of the
 * application.
 * @property {string} [applicationType] The application type.
 * @property {string} [applicationState] The application state.
 * @property {array} [errors] The list of errors.
 * @property {string} [createdDate] The application create date time.
 * @property {string} [marketplaceIdentifier] The marketplace identifier.
 */
export interface ApplicationProperties {
  computeProfile?: ComputeProfile;
  installScriptActions?: RuntimeScriptAction[];
  uninstallScriptActions?: RuntimeScriptAction[];
  httpsEndpoints?: ApplicationGetHttpsEndpoint[];
  sshEndpoints?: ApplicationGetEndpoint[];
  readonly provisioningState?: string;
  applicationType?: string;
  readonly applicationState?: string;
  errors?: Errors[];
  readonly createdDate?: string;
  readonly marketplaceIdentifier?: string;
}

/**
 * @class
 * Initializes a new instance of the Application class.
 * @constructor
 * The HDInsight cluster application
 *
 * @property {string} [etag] The ETag for the application
 * @property {object} [tags] The tags for the application.
 * @property {object} [properties] The properties of the application.
 * @property {object} [properties.computeProfile] The list of roles in the
 * cluster.
 * @property {array} [properties.computeProfile.roles] The list of roles in the
 * cluster.
 * @property {array} [properties.installScriptActions] The list of install
 * script actions.
 * @property {array} [properties.uninstallScriptActions] The list of uninstall
 * script actions.
 * @property {array} [properties.httpsEndpoints] The list of application HTTPS
 * endpoints.
 * @property {array} [properties.sshEndpoints] The list of application SSH
 * endpoints.
 * @property {string} [properties.provisioningState] The provisioning state of
 * the application.
 * @property {string} [properties.applicationType] The application type.
 * @property {string} [properties.applicationState] The application state.
 * @property {array} [properties.errors] The list of errors.
 * @property {string} [properties.createdDate] The application create date
 * time.
 * @property {string} [properties.marketplaceIdentifier] The marketplace
 * identifier.
 */
export interface Application extends ProxyResource {
  etag?: string;
  tags?: { [propertyName: string]: string };
  properties?: ApplicationProperties;
}

/**
 * @class
 * Initializes a new instance of the LocalizedName class.
 * @constructor
 * The details about the localizable name of a type of usage.
 *
 * @property {string} [value] The name of the used resource.
 * @property {string} [localizedValue] The localized name of the used resource.
 */
export interface LocalizedName {
  value?: string;
  localizedValue?: string;
}

/**
 * @class
 * Initializes a new instance of the Usage class.
 * @constructor
 * The details about the usage of a particular limited resource.
 *
 * @property {string} [unit] The type of measurement for usage.
 * @property {number} [currentValue] The current usage.
 * @property {number} [limit] The maximum allowed usage.
 * @property {object} [name] The details about the localizable name of the used
 * resource.
 * @property {string} [name.value] The name of the used resource.
 * @property {string} [name.localizedValue] The localized name of the used
 * resource.
 */
export interface Usage {
  unit?: string;
  currentValue?: number;
  limit?: number;
  name?: LocalizedName;
}

/**
 * @class
 * Initializes a new instance of the UsagesListResult class.
 * @constructor
 * The response for the operation to get regional usages for a subscription.
 *
 * @property {array} [value] The list of usages.
 */
export interface UsagesListResult {
  value?: Usage[];
}

/**
 * @class
 * Initializes a new instance of the Extension class.
 * @constructor
 * Cluster monitoring extensions
 *
 * @property {string} [workspaceId] The workspace ID for the cluster monitoring
 * extension.
 * @property {string} [primaryKey] The certificate for the cluster monitoring
 * extensions.
 */
export interface Extension {
  workspaceId?: string;
  primaryKey?: string;
}

/**
 * @class
 * Initializes a new instance of the ClusterMonitoringResponse class.
 * @constructor
 * The Operations Management Suite (OMS) status response
 *
 * @property {boolean} [clusterMonitoringEnabled] The status of the Operations
 * Management Suite (OMS) on the HDInsight cluster.
 * @property {string} [workspaceId] The workspace ID of the Operations
 * Management Suite (OMS) on the HDInsight cluster.
 */
export interface ClusterMonitoringResponse {
  clusterMonitoringEnabled?: boolean;
  workspaceId?: string;
}

/**
 * @class
 * Initializes a new instance of the ClusterMonitoringRequest class.
 * @constructor
 * The Operations Management Suite (OMS) parameters.
 *
 * @property {string} [workspaceId] The Operations Management Suite (OMS)
 * workspace ID.
 * @property {string} [primaryKey] The Operations Management Suite (OMS)
 * workspace key.
 */
export interface ClusterMonitoringRequest {
  workspaceId?: string;
  primaryKey?: string;
}

/**
 * @class
 * Initializes a new instance of the ScriptActionPersistedGetResponseSpec class.
 * @constructor
 * The persisted script action for cluster.
 *
 * @property {string} [name] The name of script action.
 * @property {string} [uri] The URI to the script.
 * @property {string} [parameters] The parameters for the script provided.
 * @property {array} [roles] The list of roles where script will be executed.
 * @property {string} [applicationName] The application name for the script
 * action.
 */
export interface ScriptActionPersistedGetResponseSpec {
  name?: string;
  uri?: string;
  parameters?: string;
  roles?: string[];
  applicationName?: string;
}

/**
 * @class
 * Initializes a new instance of the OperationDisplay class.
 * @constructor
 * The object that represents the operation.
 *
 * @property {string} [provider] The service provider: Microsoft.HDInsight
 * @property {string} [resource] The resource on which the operation is
 * performed: Cluster, Applications, etc.
 * @property {string} [operation] The operation type: read, write, delete, etc.
 */
export interface OperationDisplay {
  provider?: string;
  resource?: string;
  operation?: string;
}

/**
 * @class
 * Initializes a new instance of the Operation class.
 * @constructor
 * The HDInsight REST API operation.
 *
 * @property {string} [name] The operation name:
 * {provider}/{resource}/{operation}
 * @property {object} [display] The object that represents the operation.
 * @property {string} [display.provider] The service provider:
 * Microsoft.HDInsight
 * @property {string} [display.resource] The resource on which the operation is
 * performed: Cluster, Applications, etc.
 * @property {string} [display.operation] The operation type: read, write,
 * delete, etc.
 */
export interface Operation {
  name?: string;
  display?: OperationDisplay;
}


/**
 * @class
 * Initializes a new instance of the ClusterListResult class.
 * @constructor
 * The List Cluster operation response.
 *
 * @property {string} [nextLink] The link (url) to the next page of results.
 */
export interface ClusterListResult extends Array<Cluster> {
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the ApplicationListResult class.
 * @constructor
 * Result of the request to list cluster Applications. It contains a list of
 * operations and a URL link to get the next set of results.
 *
 * @property {string} [nextLink] The URL to get the next set of operation list
 * results if there are any.
 */
export interface ApplicationListResult extends Array<Application> {
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the ScriptActionsList class.
 * @constructor
 * The persisted script action for the cluster.
 *
 * @property {string} [nextLink] The link (url) to the next page of results.
 */
export interface ScriptActionsList extends Array<RuntimeScriptActionDetail> {
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the ScriptActionExecutionHistoryList class.
 * @constructor
 * The list script execution history response.
 *
 * @property {string} [nextLink] The link (url) to the next page of results.
 */
export interface ScriptActionExecutionHistoryList extends Array<RuntimeScriptActionDetail> {
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the OperationListResult class.
 * @constructor
 * Result of the request to list HDInsight operations. It contains a list of
 * operations and a URL link to get the next set of results.
 *
 * @property {string} [nextLink] The URL to get the next set of operation list
 * results if there are any.
 */
export interface OperationListResult extends Array<Operation> {
  nextLink?: string;
}
