/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Description of a Namespace AuthorizationRules.
 *
 * @extends models['Resource']
 */
class SharedAccessAuthorizationRuleResource extends models['Resource'] {
  /**
   * Create a SharedAccessAuthorizationRuleResource.
   * @property {array} [rights] The rights associated with the rule.
   * @property {string} [primaryKey] A base64-encoded 256-bit primary key for
   * signing and validating the SAS token.
   * @property {string} [secondaryKey] A base64-encoded 256-bit primary key for
   * signing and validating the SAS token.
   * @property {string} [keyName] A string that describes the authorization
   * rule.
   * @property {string} [claimType] A string that describes the claim type
   * @property {string} [claimValue] A string that describes the claim value
   * @property {string} [modifiedTime] The last modified time for this rule
   * @property {string} [createdTime] The created time for this rule
   * @property {number} [revision] The revision number for the rule
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of SharedAccessAuthorizationRuleResource
   *
   * @returns {object} metadata of SharedAccessAuthorizationRuleResource
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'SharedAccessAuthorizationRuleResource',
      type: {
        name: 'Composite',
        className: 'SharedAccessAuthorizationRuleResource',
        modelProperties: {
          id: {
            required: false,
            readOnly: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            readOnly: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          type: {
            required: false,
            readOnly: true,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          location: {
            required: false,
            serializedName: 'location',
            type: {
              name: 'String'
            }
          },
          tags: {
            required: false,
            serializedName: 'tags',
            type: {
              name: 'Dictionary',
              value: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          sku: {
            required: false,
            serializedName: 'sku',
            type: {
              name: 'Composite',
              className: 'Sku'
            }
          },
          rights: {
            required: false,
            serializedName: 'properties.rights',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'AccessRightsElementType',
                  type: {
                    name: 'Enum',
                    allowedValues: [ 'Manage', 'Send', 'Listen' ]
                  }
              }
            }
          },
          primaryKey: {
            required: false,
            readOnly: true,
            serializedName: 'properties.primaryKey',
            type: {
              name: 'String'
            }
          },
          secondaryKey: {
            required: false,
            readOnly: true,
            serializedName: 'properties.secondaryKey',
            type: {
              name: 'String'
            }
          },
          keyName: {
            required: false,
            readOnly: true,
            serializedName: 'properties.keyName',
            type: {
              name: 'String'
            }
          },
          claimType: {
            required: false,
            readOnly: true,
            serializedName: 'properties.claimType',
            type: {
              name: 'String'
            }
          },
          claimValue: {
            required: false,
            readOnly: true,
            serializedName: 'properties.claimValue',
            type: {
              name: 'String'
            }
          },
          modifiedTime: {
            required: false,
            readOnly: true,
            serializedName: 'properties.modifiedTime',
            type: {
              name: 'String'
            }
          },
          createdTime: {
            required: false,
            readOnly: true,
            serializedName: 'properties.createdTime',
            type: {
              name: 'String'
            }
          },
          revision: {
            required: false,
            readOnly: true,
            serializedName: 'properties.revision',
            type: {
              name: 'Number'
            }
          }
        }
      }
    };
  }
}

module.exports = SharedAccessAuthorizationRuleResource;
