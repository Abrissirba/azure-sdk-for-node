/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Defines an item in ApplicationHealthPolicyMap.
 *
 *
 */
class ApplicationHealthPolicyMapItem {
  /**
   * Create a ApplicationHealthPolicyMapItem.
   * @member {string} key The key of the application health policy map item.
   * This is the name of the application.
   * @member {object} value The value of the application health policy map
   * item. This is the ApplicationHealthPolicy for this application.
   * @member {object} [value.defaultServiceTypeHealthPolicy] The health policy
   * used by default to evaluate the health of a service type.
   * @member {number}
   * [value.defaultServiceTypeHealthPolicy.maxPercentUnhealthyServices] The
   * maximum percentage of services allowed to be unhealthy before your
   * application is considered in error.
   * @member {array} [value.serviceTypeHealthPolicies] The map with service
   * type health policy per service type name. The map is empty by default.
   * @member {boolean} [value.considerWarningAsError] Indicates whether
   * warnings are treated with the same severity as errors.
   * @member {number} [value.maxPercentUnhealthyDeployedApplications] The
   * maximum allowed percentage of unhealthy deployed applications. Allowed
   * values are Byte values from zero to 100.
   * The percentage represents the maximum tolerated percentage of deployed
   * applications that can be unhealthy before the application is considered in
   * error.
   * This is calculated by dividing the number of unhealthy deployed
   * applications over the number of nodes where the application is currently
   * deployed on in the cluster.
   * The computation rounds up to tolerate one failure on small numbers of
   * nodes. Default percentage is zero.
   * @member {object} [value.defaultServiceTypeHealthPolicy1] The health policy
   * used by default to evaluate the health of a service type.
   * @member {number}
   * [value.defaultServiceTypeHealthPolicy1.maxPercentUnhealthyServices] The
   * maximum percentage of services allowed to be unhealthy before your
   * application is considered in error.
   * @member {array} [value.serviceTypeHealthPolicyMap] The map with service
   * type health policy per service type name. The map is empty by default.
   */
  constructor() {
  }

  /**
   * Defines the metadata of ApplicationHealthPolicyMapItem
   *
   * @returns {object} metadata of ApplicationHealthPolicyMapItem
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ApplicationHealthPolicyMapItem',
      type: {
        name: 'Composite',
        className: 'ApplicationHealthPolicyMapItem',
        modelProperties: {
          key: {
            required: true,
            serializedName: 'key',
            type: {
              name: 'String'
            }
          },
          value: {
            required: true,
            serializedName: 'value',
            type: {
              name: 'Composite',
              className: 'ApplicationHealthPolicy'
            }
          }
        }
      }
    };
  }
}

module.exports = ApplicationHealthPolicyMapItem;
