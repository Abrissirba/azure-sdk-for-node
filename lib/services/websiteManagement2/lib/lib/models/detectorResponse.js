/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Class representing Response from Detector
 *
 * @extends models['ProxyOnlyResource']
 */
class DetectorResponse extends models['ProxyOnlyResource'] {
  /**
   * Create a DetectorResponse.
   * @member {object} [metadata] metadata for the detector
   * @member {string} [metadata.description] Short description of the detector
   * and its purpose
   * @member {string} [metadata.category] Support Category
   * @member {string} [metadata.subCategory] Support Sub Category
   * @member {string} [metadata.supportTopicId] Support Topic Id
   * @member {object} [dataset] Data Set
   * @member {object} [dataset.table] Data in table form
   * @member {string} [dataset.table.tableName] Name of the table
   * @member {array} [dataset.table.columns] List of columns with data types
   * @member {array} [dataset.table.rows] Raw row values
   * @member {object} [dataset.renderingProperties] Properties that describe
   * how the table should be rendered
   * @member {string} [dataset.renderingProperties.renderingType] Rendering
   * Type. Possible values include: 'NoGraph', 'Table', 'TimeSeries',
   * 'TimeSeriesPerInstance'
   * @member {string} [dataset.renderingProperties.title] Title of data
   * @member {string} [dataset.renderingProperties.description] Description of
   * the data that will help it be interpreted
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of DetectorResponse
   *
   * @returns {object} metadata of DetectorResponse
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'DetectorResponse',
      type: {
        name: 'Composite',
        className: 'DetectorResponse',
        modelProperties: {
          id: {
            required: false,
            readOnly: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            readOnly: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          kind: {
            required: false,
            serializedName: 'kind',
            type: {
              name: 'String'
            }
          },
          type: {
            required: false,
            readOnly: true,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          metadata: {
            required: false,
            serializedName: 'properties.metadata',
            type: {
              name: 'Composite',
              className: 'DetectorInfo'
            }
          },
          dataset: {
            required: false,
            serializedName: 'properties.dataset',
            type: {
              name: 'Composite',
              className: 'DiagnosticData'
            }
          }
        }
      }
    };
  }
}

module.exports = DetectorResponse;
