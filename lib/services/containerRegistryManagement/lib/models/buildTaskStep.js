/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * The properties of a build task step.
 *
 * @extends models['TaskStepProperties']
 */
class BuildTaskStep extends models['TaskStepProperties'] {
  /**
   * Create a BuildTaskStep.
   * @member {string} [definitionFilePath] The build task template/definition
   * file path relative to the source context.
   * @member {string} [valuesFilePath] The task values/parameters file path
   * relative to the source context.
   * @member {string} [contextPath] The URL(absolute or relative) of the source
   * context for the build task.
   * If it is relative, the context will be relative to the source repository
   * URL of the build task.
   * @member {array} [argumentsProperty] The collection of override arguments
   * to be used when executing this build step.
   * @member {array} [baseImageDependencies] List of base image dependencies
   * for a step.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of BuildTaskStep
   *
   * @returns {object} metadata of BuildTaskStep
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'BuildTask',
      type: {
        name: 'Composite',
        polymorphicDiscriminator: {
          serializedName: 'type',
          clientName: 'type'
        },
        uberParent: 'TaskStepProperties',
        className: 'BuildTaskStep',
        modelProperties: {
          type: {
            required: true,
            serializedName: 'type',
            isPolymorphicDiscriminator: true,
            type: {
              name: 'String'
            }
          },
          definitionFilePath: {
            required: false,
            serializedName: 'definitionFilePath',
            type: {
              name: 'String'
            }
          },
          valuesFilePath: {
            required: false,
            serializedName: 'valuesFilePath',
            type: {
              name: 'String'
            }
          },
          contextPath: {
            required: false,
            serializedName: 'contextPath',
            type: {
              name: 'String'
            }
          },
          argumentsProperty: {
            required: false,
            serializedName: 'arguments',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'ArgumentElementType',
                  type: {
                    name: 'Composite',
                    className: 'Argument'
                  }
              }
            }
          },
          baseImageDependencies: {
            required: false,
            serializedName: 'baseImageDependencies',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'BaseImageDependencyElementType',
                  type: {
                    name: 'Composite',
                    className: 'BaseImageDependency'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = BuildTaskStep;
