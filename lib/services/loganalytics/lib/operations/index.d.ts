/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
*/

import { ServiceClientOptions, RequestOptions, ServiceCallback, HttpOperationResponse } from 'ms-rest';
import * as models from '../models';


/**
 * @class
 * Query
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the LogAnalyticsClient.
 */
export interface Query {


    /**
     * @summary Execute an Analytics query
     *
     * Executes an Analytics query for data.
     * [Here](https://dev.loganalytics.io/documentation/Using-the-API) is an
     * example for using POST with an Analytics query.
     *
     * @param {string} workspaceId ID of the workspace. This is Workspace ID from
     * the Properties blade in the Azure portal.
     *
     * @param {object} body The Analytics query. Learn more about the [Analytics
     * query
     * syntax](https://azure.microsoft.com/documentation/articles/app-insights-analytics-reference/)
     *
     * @param {string} body.query The query to execute.
     *
     * @param {string} [body.timespan] Optional. The timespan over which to query
     * data. This is an ISO8601 time period value.  This timespan is applied in
     * addition to any that are specified in the query expression.
     *
     * @param {array} [body.workspaces] A list of workspaces that are included in
     * the query.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<QueryResults>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    executeWithHttpOperationResponse(workspaceId: string, body: models.QueryBody, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.QueryResults>>;

    /**
     * @summary Execute an Analytics query
     *
     * Executes an Analytics query for data.
     * [Here](https://dev.loganalytics.io/documentation/Using-the-API) is an
     * example for using POST with an Analytics query.
     *
     * @param {string} workspaceId ID of the workspace. This is Workspace ID from
     * the Properties blade in the Azure portal.
     *
     * @param {object} body The Analytics query. Learn more about the [Analytics
     * query
     * syntax](https://azure.microsoft.com/documentation/articles/app-insights-analytics-reference/)
     *
     * @param {string} body.query The query to execute.
     *
     * @param {string} [body.timespan] Optional. The timespan over which to query
     * data. This is an ISO8601 time period value.  This timespan is applied in
     * addition to any that are specified in the query expression.
     *
     * @param {array} [body.workspaces] A list of workspaces that are included in
     * the query.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {QueryResults} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {QueryResults} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link QueryResults} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    execute(workspaceId: string, body: models.QueryBody, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.QueryResults>;
    execute(workspaceId: string, body: models.QueryBody, callback: ServiceCallback<models.QueryResults>): void;
    execute(workspaceId: string, body: models.QueryBody, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.QueryResults>): void;
}
