/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as moment from "moment";


/**
 * @class
 * Initializes a new instance of the SpellingTokenSuggestion class.
 * @constructor
 * @property {string} suggestion
 * @property {number} [score]
 * @property {string} [pingUrlSuffix]
 */
export interface SpellingTokenSuggestion {
  suggestion: string;
  readonly score?: number;
  readonly pingUrlSuffix?: string;
}

/**
 * @class
 * Initializes a new instance of the SpellingFlaggedToken class.
 * @constructor
 * @property {number} offset
 * @property {string} token
 * @property {string} type Possible values include: 'UnknownToken',
 * 'RepeatedToken'. Default value: 'UnknownToken' .
 * @property {array} [suggestions]
 * @property {string} [pingUrlSuffix]
 */
export interface SpellingFlaggedToken {
  offset: number;
  token: string;
  type: string;
  readonly suggestions?: SpellingTokenSuggestion[];
  readonly pingUrlSuffix?: string;
}

/**
 * @class
 * Initializes a new instance of the ResponseBase class.
 * @constructor
 * @property {string} _type Polymorphic Discriminator
 */
export interface ResponseBase {
  _type: string;
}

/**
 * @class
 * Initializes a new instance of the Identifiable class.
 * @constructor
 * Defines the identity of a resource.
 *
 * @property {string} [id] A String identifier.
 */
export interface Identifiable extends ResponseBase {
  readonly id?: string;
}

/**
 * @class
 * Initializes a new instance of the Response class.
 * @constructor
 * Defines a response. All schemas that could be returned at the root of a
 * response should inherit from this
 *
 */
export interface Response extends Identifiable {
}

/**
 * @class
 * Initializes a new instance of the Answer class.
 * @constructor
 */
export interface Answer extends Response {
}

/**
 * @class
 * Initializes a new instance of the SpellCheck class.
 * @constructor
 * @property {array} flaggedTokens
 */
export interface SpellCheck extends Answer {
  flaggedTokens: SpellingFlaggedToken[];
}

/**
 * @class
 * Initializes a new instance of the ErrorModel class.
 * @constructor
 * Defines the error that occurred.
 *
 * @property {string} code The error code that identifies the category of
 * error. Possible values include: 'None', 'ServerError', 'InvalidRequest',
 * 'RateLimitExceeded', 'InvalidAuthorization', 'InsufficientAuthorization'.
 * Default value: 'None' .
 * @property {string} [subCode] The error code that further helps to identify
 * the error. Possible values include: 'UnexpectedError', 'ResourceError',
 * 'NotImplemented', 'ParameterMissing', 'ParameterInvalidValue',
 * 'HttpNotAllowed', 'Blocked', 'AuthorizationMissing',
 * 'AuthorizationRedundancy', 'AuthorizationDisabled', 'AuthorizationExpired'
 * @property {string} message A description of the error.
 * @property {string} [moreDetails] A description that provides additional
 * information about the error.
 * @property {string} [parameter] The parameter in the request that caused the
 * error.
 * @property {string} [value] The parameter's value in the request that was not
 * valid.
 */
export interface ErrorModel {
  code: string;
  readonly subCode?: string;
  message: string;
  readonly moreDetails?: string;
  readonly parameter?: string;
  readonly value?: string;
}

/**
 * @class
 * Initializes a new instance of the ErrorResponse class.
 * @constructor
 * The top-level response that represents a failed request.
 *
 * @property {array} errors A list of errors that describe the reasons why the
 * request failed.
 */
export interface ErrorResponse extends Response {
  errors: ErrorModel[];
}
